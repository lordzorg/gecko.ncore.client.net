<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ephorte.ServiceModel.Contracts.ChangeTracking.V1</name>
    </assembly>
    <members>
        <member name="T:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.ChangeType">
            <summary>
             The different change types registered for for a DataObject.
            </summary>
        </member>
        <member name="F:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.ChangeType.Undefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.ChangeType.InsertUpdate">
            <summary>
             The changetypes Insert and update have a single changetype (InsertUpdate) since ePhorte inserts in
             ePhorte performes both Insert- and Update-statements in the database.
            </summary>
        </member>
        <member name="F:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.ChangeType.Delete">
            <summary>
             Reflects a Delete statement in the database
            </summary>
        </member>
        <member name="T:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.DataObjectChange">
            <summary>
             Contains a single change for a given DataObjectType
            </summary>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.DataObjectChange.CaseId">
            <summary>
             The Case Id
            </summary>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.DataObjectChange.RecordId">
            <summary>
             The Record Id
            </summary>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.DataObjectChange.DataObjectType">
            <summary>
             The DataObjectType
            </summary>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.DataObjectChange.Changetype">
            <summary>
             The ChangeType
            </summary>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.DataObjectChange.DataObjectKey">
            <summary>
             The Object Key
            </summary>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.DataObjectChange.ChangeTimestamp">
            <summary>
             The change timestamp
            </summary>
        </member>
        <member name="T:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.DataObjectKey">
            <summary>
            Represents the field of a primary key identifying the data object.
            </summary>
        </member>
        <member name="T:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.EphorteIdentity">
            <summary>
            Defines the identity of the user executing the request.
            </summary>
        </member>
        <member name="M:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.EphorteIdentity.Equals(Ephorte.ServiceModel.Contracts.IEphorteIdentity)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.EphorteIdentity.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.EphorteIdentity.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.EphorteIdentity.CompareTo(Ephorte.ServiceModel.Contracts.IEphorteIdentity)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.EphorteIdentity.UserName">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.EphorteIdentity.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.EphorteIdentity.Role">
            <summary>
            Gets or sets the role.
            </summary>
            <value>The role.</value>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.EphorteIdentity.Database">
            <summary>
            Gets or sets the database.
            </summary>
            <value>The database.</value>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.EphorteIdentity.ExternalSystemName">
            <summary>
            Gets or sets the name of the external system.
            </summary>
            <value>The name of the external system.</value>
        </member>
        <member name="T:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.IChangeTrackingService">
            <summary>
             Defines the Change Tracking Service (CTS) contract
             The CTS can be used to get the latest changes for one or more Sak or Journalpost dataobjects, 
             or changes in their related data objects.
             
             The following is the related objects for which changes is recorded and what change is being record
             (I = Insert, U = Update, D = Delete):
             - IUD   Sak
             - IUD   Journalpost
             - IUD   Dokumentreferanse
             - U     Dokumentbeskrivelse
             - IUD   Dokumentversjon
             - IUD   Sakspart
             - IUD   Merknad
             - IUD   Klassering
             - IUD   AvsenderMottaker
             - IUD	Utvalgsbehandling
             
            </summary>
        </member>
        <member name="M:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.IChangeTrackingService.GetChangesForCaseDataObjects(Ephorte.ServiceModel.Contracts.ChangeTracking.V1.EphorteIdentity,System.Collections.Generic.IEnumerable{System.Int32},System.DateTime)">
            <summary>
             Queries the changes for a Sak and related DataObjects.
            </summary>
            <param name="identity">The ephorte identity</param>
            <param name="caseIds">The Sak-ids to get changes for</param>
            <param name="after">Only get changes that happened after this datetime</param>
            <returns>List of changes</returns>
        </member>
        <member name="M:Ephorte.ServiceModel.Contracts.ChangeTracking.V1.IChangeTrackingService.GetChangesForRecordDataObjects(Ephorte.ServiceModel.Contracts.ChangeTracking.V1.EphorteIdentity,System.Collections.Generic.IEnumerable{System.Int32},System.DateTime)">
            <summary>
             Queries the changes for a Journalpost and related DataObjects
            </summary>
            <param name="identity">The ephorte identity</param>
            <param name="recordIds">The Journalpost-ids to get changes for</param>
            <param name="after">Only get changes that happened after this datetime</param>
            <returns>List of changes</returns>
        </member>
    </members>
</doc>
