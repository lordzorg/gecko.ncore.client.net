<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ephorte.ServiceModel.Contracts.Functions.V2</name>
    </assembly>
    <members>
        <member name="T:Ephorte.ServiceModel.Contracts.Functions.V2.EphorteIdentity">
            <summary>
            Defines the identity of the user executing the request.
            </summary>
        </member>
        <member name="M:Ephorte.ServiceModel.Contracts.Functions.V2.EphorteIdentity.Equals(Ephorte.ServiceModel.Contracts.IEphorteIdentity)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Ephorte.ServiceModel.Contracts.Functions.V2.EphorteIdentity.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Ephorte.ServiceModel.Contracts.Functions.V2.EphorteIdentity.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Ephorte.ServiceModel.Contracts.Functions.V2.EphorteIdentity.CompareTo(Ephorte.ServiceModel.Contracts.IEphorteIdentity)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.Functions.V2.EphorteIdentity.UserName">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.Functions.V2.EphorteIdentity.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.Functions.V2.EphorteIdentity.Role">
            <summary>
            Gets or sets the role.
            </summary>
            <value>The role.</value>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.Functions.V2.EphorteIdentity.Database">
            <summary>
            Gets or sets the database.
            </summary>
            <value>The database.</value>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.Functions.V2.EphorteIdentity.ExternalSystemName">
            <summary>
            Gets or sets the name of the external system.
            </summary>
            <value>The name of the external system.</value>
        </member>
        <member name="T:Ephorte.ServiceModel.Contracts.Functions.V2.FunctionDescriptor">
            <summary>
            Defines a class that contains descriptive information about supported functions.
            </summary>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.Functions.V2.FunctionDescriptor.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.Functions.V2.FunctionDescriptor.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.Functions.V2.FunctionDescriptor.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="T:Ephorte.ServiceModel.Contracts.Functions.V2.FunctionParameterDictionary">
            <summary>
            Defines a class that contains a collection of parameters required by the <see cref="T:Ephorte.ServiceModel.Contracts.Functions.V2.FunctionDescriptor">function</see>.
            </summary>
        </member>
        <member name="T:Ephorte.ServiceModel.Contracts.Functions.V2.FunctionResult">
            <summary>
            Defines a base class
            </summary>
        </member>
        <member name="P:Ephorte.ServiceModel.Contracts.Functions.V2.FunctionResult.ResultValue">
            <summary>
            Gets or sets the result.
            </summary>
            <value>The result.</value>
        </member>
        <member name="T:Ephorte.ServiceModel.Contracts.Functions.V2.IFunctionsService">
            <summary>
            Defines a contract for a service working as a function handler.
            </summary>
        </member>
        <member name="M:Ephorte.ServiceModel.Contracts.Functions.V2.IFunctionsService.QueryFunctionDescriptors(Ephorte.ServiceModel.Contracts.Functions.V2.EphorteIdentity)">
            <summary>
            Queries the functions supported by the service.
            </summary>
            <param name="identity">The identity.</param>
            <returns>
            A collection of <see cref="T:Ephorte.ServiceModel.Contracts.Functions.V2.FunctionDescriptor">function descriptors</see>
            </returns>
        </member>
        <member name="M:Ephorte.ServiceModel.Contracts.Functions.V2.IFunctionsService.ExecuteFunction(Ephorte.ServiceModel.Contracts.Functions.V2.EphorteIdentity,System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Executes the function.
            </summary>
            <param name="identity">The identity.</param>
            <param name="name">The name of the function to execute.</param>
            <param name="parameters">The parameters required by the function.</param>
            <returns>
            The result of the function executed, if any.
            </returns>
        </member>
    </members>
</doc>
