//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gecko.NCore.Client.ObjectModel.V1 {
    using System.Runtime.Serialization;
    using System;
    
    
    /// <summary>
    /// Defines the identity of the user executing the request.
    /// </summary>
    /// <seealso cref="T:IEphorteIdentity" />
    /// <seealso cref="T:EphorteIdentityComparer" />
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EphorteIdentity", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts")]
    [System.SerializableAttribute()]
    public partial class EphorteIdentity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalSystemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the database.
        /// </summary>
        /// <value>The database.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Database {
            get {
                return this.DatabaseField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseField, value) != true)) {
                    this.DatabaseField = value;
                    this.RaisePropertyChanged("Database");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the password.
        /// </summary>
        /// <value>The password.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the role.
        /// </summary>
        /// <value>The role.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the username.
        /// </summary>
        /// <value>The username.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the name of the external system.
        /// </summary>
        /// <value>The name of the external system.</value>
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string ExternalSystemName {
            get {
                return this.ExternalSystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalSystemNameField, value) != true)) {
                    this.ExternalSystemNameField = value;
                    this.RaisePropertyChanged("ExternalSystemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// This is the base <see cref="T:System.Runtime.Serialization.DataContract">data contract</see> class for all objects used by the <see cref="T:IObjectModelService">Object Model Service</see>.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataObject", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AdresseTilAdministrativEnhet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Adresseregister))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Adressetype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AdresseTilPerson))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Personnavn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Utvalgsmedlem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.FunksjonIUtvalg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Utvalg))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Arkivdel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Arkiv))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipptype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Tilgangskode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Nummerserie))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Arkivperiode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Arkivstatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Bortsettingskode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Ordningsverdi))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Kassasjonskode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.SakskartUtvalgssakstype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Dokumentmal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Dokumentmaltype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Lagringsformat))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Mappetype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Utvalgsmoete))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Frammoete))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Moetedokument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Avgraderingskode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.DokumenttypeForUtvalgsbehandling))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Dokumenttype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Avskrivingsmaate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.StatusForMoetedokument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Utvalgsbehandling))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Behandlingsstatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Journalpost))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AvsenderMottaker))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Forsendelsesmaate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Forsendelsesstatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Journalenhet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Journalstatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Identifikasjonstype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Dokumentlink))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Dokumentversjon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Lagringsenhet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Variantformat))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Dokumentkategori))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Aktivitet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AktivitetType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AktivitetBehandlingsform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AktivitetBeslutningskode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AktivitetStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AktivitetPrioritet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AktivitetRapportKategori))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Rolle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Sak))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Byggesak))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.ByggesakBygningstype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.ByggesakDispensasjonstype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.ByggesakSoeknadstype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.ByggesakTiltakskode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.DelingsakRekvisisjon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.JevnfoerSak))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Presedens))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Sakstype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Klassering))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Lenke))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Lenketype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Merknad))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Informasjonstype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Plansak))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.PlansakPlanbestemmelse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.PlansakPlanstatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.PlansakPlantype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.PlansakReguleringsformaal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.PlansakReguleringsformaalType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Prosjekt))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Sakspart))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.SakspartRolleLink))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.SakspartRolle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Saksstatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStilling))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakKunngjoeringsmaate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStillingSoeker))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakSoeker))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakSoeknadstatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStillingstype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AktivitetVarslingsform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Dokumentstatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.DokumentlinkMoetedokument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Dokumenttilknytning))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.PolitiskSaksgang))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Tilleggskode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.BehandlingDokument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Utvalgstype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.PersonRolle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Enhetstype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Adressegruppemedlem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AktivitetAvsenderMottaker))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AktivitetGrenpunkt))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakKompetanse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.AutorisasjonInnenAdministrativEnhet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.DelingsakKartforretning))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Emneordhenvisning))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.StandardEmneord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.EmneordStikkordPresedens))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Faktura))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.FakturaLinje))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Gebyrtype))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.FungereIRolle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.HjemmelForTilgangskode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Katalog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.KatalogLink))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.KlareringForTilgangskode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.LesteObjekter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.LoverOgForskrifter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.LovForskriftsreferansePresedens))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.MedlemskapITilgangsgruppe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Postnummer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.PredefinertSoek))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.PresedensHenvisninger))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Soekekriterie))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.TilgangTilInformasjon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Tilleggsinformasjon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.Vedtak))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.VedtakStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gecko.NCore.Client.ObjectModel.V1.VedtakType))]
    public partial class DataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceDatabaseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the valid properties.
        /// </summary>
        /// <value>The valid properties.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidProperties {
            get {
                return this.ValidPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidPropertiesField, value) != true)) {
                    this.ValidPropertiesField = value;
                    this.RaisePropertyChanged("ValidProperties");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the source database.
        /// </summary>
        /// <value>The source database.</value>
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string SourceDatabase {
            get {
                return this.SourceDatabaseField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceDatabaseField, value) != true)) {
                    this.SourceDatabaseField = value;
                    this.RaisePropertyChanged("SourceDatabase");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver virksomhetens administrative inndelinger.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdministrativInndeling", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AdministrativInndeling : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdresseTilAdministrativEnhet[] AdresserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnhetsforkortelseDetteNivaaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Enhetstype EnhetstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnhetstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullstendigStedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalenhet JournalenhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalenhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KortnavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NedlagtDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling OverordnetEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OverordnetEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RapportgruppeField;
        
        /// <summary>
        /// Addresses belonging to the unit - Adresser tilhørende administrativ inndeling.
        /// </summary>
        /// <value>Inneholder informasjon om adresser tilhørende administrativ inndeling.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdresseTilAdministrativEnhet[] Adresser {
            get {
                return this.AdresserField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresserField, value) != true)) {
                    this.AdresserField = value;
                    this.RaisePropertyChanged("Adresser");
                }
            }
        }
        
        /// <summary>
        /// Full name of the unit - Full betegnelse for enheten.
        /// Tilsvarer NOARK4 feltet AI.ADMBET.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// - Kortkode for enheten. Må være unik blant enheter som er underlagt samme overordnet enhet.
        /// Tilsvarer NOARK4 feltet AI.FORKDN.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnhetsforkortelseDetteNivaa {
            get {
                return this.EnhetsforkortelseDetteNivaaField;
            }
            set {
                if ((object.ReferenceEquals(this.EnhetsforkortelseDetteNivaaField, value) != true)) {
                    this.EnhetsforkortelseDetteNivaaField = value;
                    this.RaisePropertyChanged("EnhetsforkortelseDetteNivaa");
                }
            }
        }
        
        /// <summary>
        /// - Enhetstypen som enheten er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver enhetstypen som enheten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Enhetstype Enhetstype {
            get {
                return this.EnhetstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EnhetstypeField, value) != true)) {
                    this.EnhetstypeField = value;
                    this.RaisePropertyChanged("Enhetstype");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til enhetstypen som enheten er knyttet til.
        /// Oppslag mot tabellen Enhetstype.
        /// Tilsvarer NOARK4 feltet AI.TYPE
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnhetstypeId {
            get {
                return this.EnhetstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EnhetstypeIdField, value) != true)) {
                    this.EnhetstypeIdField = value;
                    this.RaisePropertyChanged("EnhetstypeId");
                }
            }
        }
        
        /// <summary>
        /// - Angir fullstendig plassering for enheten i enhetshierarkiet.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullstendigSted {
            get {
                return this.FullstendigStedField;
            }
            set {
                if ((object.ReferenceEquals(this.FullstendigStedField, value) != true)) {
                    this.FullstendigStedField = value;
                    this.RaisePropertyChanged("FullstendigSted");
                }
            }
        }
        
        /// <summary>
        /// Unique ID - Unik ID, tildeles automatisk.
        /// Tilsvarer NOARK4 feltet AI.ID
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// - Journalenheten som administrativ inndeling er koblet til.
        /// </summary>
        /// <value>Inneholder informasjon om journalenheten som administrativ inndeling er koblet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalenhet Journalenhet {
            get {
                return this.JournalenhetField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetField, value) != true)) {
                    this.JournalenhetField = value;
                    this.RaisePropertyChanged("Journalenhet");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til journalenheten som administrativ inndeling er koblet til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalenhetId {
            get {
                return this.JournalenhetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetIdField, value) != true)) {
                    this.JournalenhetIdField = value;
                    this.RaisePropertyChanged("JournalenhetId");
                }
            }
        }
        
        /// <summary>
        /// Short code - Forkortelse for enheten til bruk i utskrift, i rapporter og presentasjon på skjerm. Skal være unik blant alle enheter som ikke er nedlagt.
        /// Tilsvarer NOARK4 feltet AI.ADMKORT.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kortnavn {
            get {
                return this.KortnavnField;
            }
            set {
                if ((object.ReferenceEquals(this.KortnavnField, value) != true)) {
                    this.KortnavnField = value;
                    this.RaisePropertyChanged("Kortnavn");
                }
            }
        }
        
        /// <summary>
        /// - Dersom en organisasjonsenhet legges ned, angis datoen i dette attributtet.
        /// Organisasjonsenheten skal da ikke lengre kunne benyttes ved registrering.
        /// Tilsvarer NOARK4 feltet AI.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NedlagtDato {
            get {
                return this.NedlagtDatoField;
            }
            set {
                if ((this.NedlagtDatoField.Equals(value) != true)) {
                    this.NedlagtDatoField = value;
                    this.RaisePropertyChanged("NedlagtDato");
                }
            }
        }
        
        /// <summary>
        /// - Den dato organisasjonsenheten ble opprettet.
        /// Tilsvarer NOARK4 feltet AI.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OpprettetDato {
            get {
                return this.OpprettetDatoField;
            }
            set {
                if ((this.OpprettetDatoField.Equals(value) != true)) {
                    this.OpprettetDatoField = value;
                    this.RaisePropertyChanged("OpprettetDato");
                }
            }
        }
        
        /// <summary>
        /// - Enheten denne enheten er underlagt.
        /// </summary>
        /// <value>Inneholder attributter som beskriver enheten denne enheten er underlagt.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling OverordnetEnhet {
            get {
                return this.OverordnetEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.OverordnetEnhetField, value) != true)) {
                    this.OverordnetEnhetField = value;
                    this.RaisePropertyChanged("OverordnetEnhet");
                }
            }
        }
        
        /// <summary>
        /// - Id for enheten denne enheten er underlagt. Tom for øverste nivå.
        /// Tilsvarer NOARK4 feltet AI.IDFAR
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OverordnetEnhetId {
            get {
                return this.OverordnetEnhetIdField;
            }
            set {
                if ((this.OverordnetEnhetIdField.Equals(value) != true)) {
                    this.OverordnetEnhetIdField = value;
                    this.RaisePropertyChanged("OverordnetEnhetId");
                }
            }
        }
        
        /// <summary>
        /// - Dersom dokumenter fra flere administrative enheter skal samsorteres i enkelte rapporter, eller dersom en ikke ønsker
        /// en ren alfabetisk sortering, kan dette attributtet benyttes for å få til den ønskede sortering.
        /// Tilsvarer NOARK4 feltet AI.RPGRUPPE.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rapportgruppe {
            get {
                return this.RapportgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.RapportgruppeField, value) != true)) {
                    this.RapportgruppeField = value;
                    this.RaisePropertyChanged("Rapportgruppe");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder referanse til adressen til administrative enheter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdresseTilAdministrativEnhet", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AdresseTilAdministrativEnhet : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativInndelingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdministrativInndelingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Adresseregister AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdresseIdField;
        
        /// <summary>
        /// Administrativ enhet.
        /// </summary>
        /// <value>Inneholder detaljer om administrativ enhet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativInndeling {
            get {
                return this.AdministrativInndelingField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativInndelingField, value) != true)) {
                    this.AdministrativInndelingField = value;
                    this.RaisePropertyChanged("AdministrativInndeling");
                }
            }
        }
        
        /// <summary>
        /// Referanse til administrativ enhet.
        /// Tilsvarer NOARK4 feltet AA.ADMID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdministrativInndelingId {
            get {
                return this.AdministrativInndelingIdField;
            }
            set {
                if ((this.AdministrativInndelingIdField.Equals(value) != true)) {
                    this.AdministrativInndelingIdField = value;
                    this.RaisePropertyChanged("AdministrativInndelingId");
                }
            }
        }
        
        /// <summary>
        /// Adresse.
        /// </summary>
        /// <value>Inneholder detaljer om adresse.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Adresseregister Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        /// <summary>
        /// Referanse til adresse.
        /// Tilsvarer NOARK4 feltet AA.ADRID
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdresseId {
            get {
                return this.AdresseIdField;
            }
            set {
                if ((this.AdresseIdField.Equals(value) != true)) {
                    this.AdresseIdField = value;
                    this.RaisePropertyChanged("AdresseId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon (navn, adresse, mv) som beskriver virksomheter eller privatpersoner som en ofte korresponderer med, eller av andre årsaker har behov for å registrere kontaktinformasjon om.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Adresseregister", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Adresseregister : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AdressegruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Adressetype AdressetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdressetypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AutomatiskEPostRegistreringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankgironummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BesoeksadresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPostAdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Adresseregister HoererInnUnderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HoererInnUnderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KommunenummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KortnavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobiltelefonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NoarkBaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe OppdateresAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OppdateresAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganisasjonsnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonsoekerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostadresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostgironummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoststedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefaksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe TilgangsgruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilgangsgruppeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UtgaattDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtlandsadresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Identifikasjonstype IdentifikasjonstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifikasjonstypeIdField;
        
        /// <summary>
        /// Valgt dersom denne adresseposten representerer en gruppe av adresser, ikke valgt ellers.
        /// Medlemmene i gruppen registreres i tabellen Adressegruppemedlem.
        /// Tilsvarer NOARK4 feltet AK.ADRGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Adressegruppe {
            get {
                return this.AdressegruppeField;
            }
            set {
                if ((this.AdressegruppeField.Equals(value) != true)) {
                    this.AdressegruppeField = value;
                    this.RaisePropertyChanged("Adressegruppe");
                }
            }
        }
        
        /// <summary>
        /// Adressetypen. Benyttes for å angi om adressen er en virksomhetsadresse, privatadresse el.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver adressetypen adressen er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Adressetype Adressetype {
            get {
                return this.AdressetypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressetypeField, value) != true)) {
                    this.AdressetypeField = value;
                    this.RaisePropertyChanged("Adressetype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til adressetype.
        /// Oppslag mot tabellen Adressetype.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet AK.TYPE
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdressetypeId {
            get {
                return this.AdressetypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressetypeIdField, value) != true)) {
                    this.AdressetypeIdField = value;
                    this.RaisePropertyChanged("AdressetypeId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom e-post tilhørende en pågående sak (identifisert av Noark-hodet) fra denne korrespondansepartneren
        /// skal registreres automatisk, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet AK.REGEPOST.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AutomatiskEPostRegistrering {
            get {
                return this.AutomatiskEPostRegistreringField;
            }
            set {
                if ((this.AutomatiskEPostRegistreringField.Equals(value) != true)) {
                    this.AutomatiskEPostRegistreringField = value;
                    this.RaisePropertyChanged("AutomatiskEPostRegistrering");
                }
            }
        }
        
        /// <summary>
        /// Kontonummer.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bankgironummer {
            get {
                return this.BankgironummerField;
            }
            set {
                if ((object.ReferenceEquals(this.BankgironummerField, value) != true)) {
                    this.BankgironummerField = value;
                    this.RaisePropertyChanged("Bankgironummer");
                }
            }
        }
        
        /// <summary>
        /// Besøksadresse.
        /// Feltlengde: 120 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Besoeksadresse {
            get {
                return this.BesoeksadresseField;
            }
            set {
                if ((object.ReferenceEquals(this.BesoeksadresseField, value) != true)) {
                    this.BesoeksadresseField = value;
                    this.RaisePropertyChanged("Besoeksadresse");
                }
            }
        }
        
        /// <summary>
        /// E-post adresse.
        /// Feltlengde: 120 tegn.
        /// Tilsvarer NOARK4 feltet AK.EPOST.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPostAdresse {
            get {
                return this.EPostAdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.EPostAdresseField, value) != true)) {
                    this.EPostAdresseField = value;
                    this.RaisePropertyChanged("EPostAdresse");
                }
            }
        }
        
        /// <summary>
        /// Overordnet adressat.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver overordnet adressat.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Adresseregister HoererInnUnder {
            get {
                return this.HoererInnUnderField;
            }
            set {
                if ((object.ReferenceEquals(this.HoererInnUnderField, value) != true)) {
                    this.HoererInnUnderField = value;
                    this.RaisePropertyChanged("HoererInnUnder");
                }
            }
        }
        
        /// <summary>
        /// Referanse til overordnet adressat.
        /// Tilsvarer NOARK4 feltet AK.OVERORD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HoererInnUnderId {
            get {
                return this.HoererInnUnderIdField;
            }
            set {
                if ((this.HoererInnUnderIdField.Equals(value) != true)) {
                    this.HoererInnUnderIdField = value;
                    this.RaisePropertyChanged("HoererInnUnderId");
                }
            }
        }
        
        /// <summary>
        /// Unik ID for adressat.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet AK.ADRID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Kommunenummer.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kommunenummer {
            get {
                return this.KommunenummerField;
            }
            set {
                if ((object.ReferenceEquals(this.KommunenummerField, value) != true)) {
                    this.KommunenummerField = value;
                    this.RaisePropertyChanged("Kommunenummer");
                }
            }
        }
        
        /// <summary>
        /// Kortnavn til bruk ved oppslag i journalen mv.
        /// Det tillates ikke to poster med samme kortnavn.
        /// Feltlengde: 15 tegn.
        /// Tilsvarer NOARK4 feltet AK.KORTNAVN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kortnavn {
            get {
                return this.KortnavnField;
            }
            set {
                if ((object.ReferenceEquals(this.KortnavnField, value) != true)) {
                    this.KortnavnField = value;
                    this.RaisePropertyChanged("Kortnavn");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Mobiltelefonnummer.
        /// Feltlengde: 20 tegn.
        /// Tilsvarer NOARK4 feltet AK.MOBIL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobiltelefon {
            get {
                return this.MobiltelefonField;
            }
            set {
                if ((object.ReferenceEquals(this.MobiltelefonField, value) != true)) {
                    this.MobiltelefonField = value;
                    this.RaisePropertyChanged("Mobiltelefon");
                }
            }
        }
        
        /// <summary>
        /// Navn på virksomhet eller privatperson.
        /// Obligatorisk.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet AK.NAVN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Navn {
            get {
                return this.NavnField;
            }
            set {
                if ((object.ReferenceEquals(this.NavnField, value) != true)) {
                    this.NavnField = value;
                    this.RaisePropertyChanged("Navn");
                }
            }
        }
        
        /// <summary>
        /// Unik ID for mottakerens arkivbase.
        /// Tilsvarer NOARK4 feltet AK.BASEID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NoarkBaseId {
            get {
                return this.NoarkBaseIdField;
            }
            set {
                if ((this.NoarkBaseIdField.Equals(value) != true)) {
                    this.NoarkBaseIdField = value;
                    this.RaisePropertyChanged("NoarkBaseId");
                }
            }
        }
        
        /// <summary>
        /// Tilgangsgruppe hvor medlemmene skal ha rett til å endre denne adresse.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver tilgangsgruppe hvor medlemmene skal ha rett til å endre denne adressen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe OppdateresAv {
            get {
                return this.OppdateresAvField;
            }
            set {
                if ((object.ReferenceEquals(this.OppdateresAvField, value) != true)) {
                    this.OppdateresAvField = value;
                    this.RaisePropertyChanged("OppdateresAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangsgruppe hvor medlemmene skal ha rett til å endre denne adressen.
        /// Tilsvarer NOARK4 feltet AK.OPDGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OppdateresAvid {
            get {
                return this.OppdateresAvidField;
            }
            set {
                if ((this.OppdateresAvidField.Equals(value) != true)) {
                    this.OppdateresAvidField = value;
                    this.RaisePropertyChanged("OppdateresAvid");
                }
            }
        }
        
        /// <summary>
        /// Virksomhetens organisasjonsnummer eller annen entydig referanse opplyst av korrespondansepartneren selv.
        /// Kan inneholde fødselsnummer for personer. Danner sammen med IdentifikasjonstypeId en unik identifikasjon av adressaten.
        /// Feltlengde: 20 tegn.
        /// Tilsvarer NOARK4 feltet AK.ORGNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organisasjonsnr {
            get {
                return this.OrganisasjonsnrField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisasjonsnrField, value) != true)) {
                    this.OrganisasjonsnrField = value;
                    this.RaisePropertyChanged("Organisasjonsnr");
                }
            }
        }
        
        /// <summary>
        /// Nummer til personsøker.
        /// Feltlengde: 20 tegn.
        /// Tilsvarer NOARK4 feltet AK.PERSOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Personsoeker {
            get {
                return this.PersonsoekerField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonsoekerField, value) != true)) {
                    this.PersonsoekerField = value;
                    this.RaisePropertyChanged("Personsoeker");
                }
            }
        }
        
        /// <summary>
        /// Postadresse.
        /// Feltlengde: 50 tegn.
        /// Tilsvarer NOARK4 feltet AK.POSTADR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postadresse {
            get {
                return this.PostadresseField;
            }
            set {
                if ((object.ReferenceEquals(this.PostadresseField, value) != true)) {
                    this.PostadresseField = value;
                    this.RaisePropertyChanged("Postadresse");
                }
            }
        }
        
        /// <summary>
        /// Postgironummer.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postgironummer {
            get {
                return this.PostgironummerField;
            }
            set {
                if ((object.ReferenceEquals(this.PostgironummerField, value) != true)) {
                    this.PostgironummerField = value;
                    this.RaisePropertyChanged("Postgironummer");
                }
            }
        }
        
        /// <summary>
        /// Postnummer.
        /// Feltlengde: 5 tegn.
        /// Tilsvarer NOARK4 feltet AK.POSTNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postnr {
            get {
                return this.PostnrField;
            }
            set {
                if ((object.ReferenceEquals(this.PostnrField, value) != true)) {
                    this.PostnrField = value;
                    this.RaisePropertyChanged("Postnr");
                }
            }
        }
        
        /// <summary>
        /// Poststed.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet AK.POSTSTED.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Poststed {
            get {
                return this.PoststedField;
            }
            set {
                if ((object.ReferenceEquals(this.PoststedField, value) != true)) {
                    this.PoststedField = value;
                    this.RaisePropertyChanged("Poststed");
                }
            }
        }
        
        /// <summary>
        /// Telefaksnummer.
        /// Feltlengde: 20 tegn.
        /// Tilsvarer NOARK4 feltet AK.FAKS
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefaks {
            get {
                return this.TelefaksField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefaksField, value) != true)) {
                    this.TelefaksField = value;
                    this.RaisePropertyChanged("Telefaks");
                }
            }
        }
        
        /// <summary>
        /// Telefonnummer.
        /// Feltlengde: 20 tegn.
        /// Tilsvarer NOARK4 feltet AK.TLF
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefon {
            get {
                return this.TelefonField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonField, value) != true)) {
                    this.TelefonField = value;
                    this.RaisePropertyChanged("Telefon");
                }
            }
        }
        
        /// <summary>
        /// Tilgangsgruppe hvor medlemmene skal ha tilgang til denne adressen.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver tilgangsgruppe hvor medlemmene skal ha tilgang til denne adressen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe Tilgangsgruppe {
            get {
                return this.TilgangsgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeField, value) != true)) {
                    this.TilgangsgruppeField = value;
                    this.RaisePropertyChanged("Tilgangsgruppe");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangsgruppe hvor medlemmene skal ha tilgang til denne adressen.
        /// Benyttes for å beskytte privatadresser mv mot innsyn. Standardverdi 0 (brukergruppe Alle) sikrer at alle
        /// får tilgang til vanlige adresser.
        /// Tilsvarer NOARK4 feltet AK.TGGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilgangsgruppeId {
            get {
                return this.TilgangsgruppeIdField;
            }
            set {
                if ((this.TilgangsgruppeIdField.Equals(value) != true)) {
                    this.TilgangsgruppeIdField = value;
                    this.RaisePropertyChanged("TilgangsgruppeId");
                }
            }
        }
        
        /// <summary>
        /// Utgått dato. Kan benyttes dersom en ønsker å beholde en historikk over tidligere korrespondansepartnere.
        /// Tilsvarer NOARK4 feltet AK.TILDATO
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UtgaattDato {
            get {
                return this.UtgaattDatoField;
            }
            set {
                if ((this.UtgaattDatoField.Equals(value) != true)) {
                    this.UtgaattDatoField = value;
                    this.RaisePropertyChanged("UtgaattDato");
                }
            }
        }
        
        /// <summary>
        /// Utenlandsadresse. Erstatter Postnr og Poststed for adresser i utlandet.
        /// Feltlengde: 120 tegn.
        /// Tilsvarer NOARK4 feltet AK.UTLAND.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Utlandsadresse {
            get {
                return this.UtlandsadresseField;
            }
            set {
                if ((object.ReferenceEquals(this.UtlandsadresseField, value) != true)) {
                    this.UtlandsadresseField = value;
                    this.RaisePropertyChanged("Utlandsadresse");
                }
            }
        }
        
        /// <summary>
        /// Identifikasjonstype. Benyttes for å angi type identifikasjon for eksterne personer eller virksomheter.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver identifikasjonstypen adressaten er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute(Order=30)]
        public Gecko.NCore.Client.ObjectModel.V1.Identifikasjonstype Identifikasjonstype {
            get {
                return this.IdentifikasjonstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifikasjonstypeField, value) != true)) {
                    this.IdentifikasjonstypeField = value;
                    this.RaisePropertyChanged("Identifikasjonstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til identifikasjonstype for adressat.
        /// Oppslag mot tabellen Identifikasjonstype.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=31)]
        public string IdentifikasjonstypeId {
            get {
                return this.IdentifikasjonstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifikasjonstypeIdField, value) != true)) {
                    this.IdentifikasjonstypeIdField = value;
                    this.RaisePropertyChanged("IdentifikasjonstypeId");
                }
            }
        }
    }
    
    /// <summary>
    /// Adressetyper.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Adressetype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Adressetype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Tilsvarer NOARK4 feltet AT.BETEGN
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Tilsvarer NOARK4 feltet AT.KODE
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om de tilgangsgrupper som benyttes.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tilgangsgruppe", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Tilgangsgruppe : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GenerellGruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GruppetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person OpprettetAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OpprettetAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UtgarDatoField;
        
        /// <summary>
        /// Flag that indicates if it is a genereic group that can be attched to all objects - Valgt hvis tilgangsgruppen skal kunne knyttes opp mot flere forskjellige objekter, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet TG.GENERELL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GenerellGruppe {
            get {
                return this.GenerellGruppeField;
            }
            set {
                if ((this.GenerellGruppeField.Equals(value) != true)) {
                    this.GenerellGruppeField = value;
                    this.RaisePropertyChanged("GenerellGruppe");
                }
            }
        }
        
        /// <summary>
        /// Type of access group: Legal values is  -1: ad hocType, 0:Predefined acesss group, 1: Predefined case worker group -   tilgangsgruppe.
        /// Lovlige verdier:
        /// -1 - Ad-hoc tilgangsgruppe.
        /// 0 - Tilgangsgruppe.
        /// 1 - Tilgangsgruppe/saksbehandlergruppe.
        /// 2 - Saksbehandlergruppe.
        /// 3 - Administrativ enhetsgruppe.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Gruppetype {
            get {
                return this.GruppetypeField;
            }
            set {
                if ((this.GruppetypeField.Equals(value) != true)) {
                    this.GruppetypeField = value;
                    this.RaisePropertyChanged("Gruppetype");
                }
            }
        }
        
        /// <summary>
        /// Unique ID - Primærnøkkel for tilgangsgruppen.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet TG.GRUPPEID
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Full name of the access group - Navn på tilgangsgruppen.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet TG.GRUPPNAVN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Navn {
            get {
                return this.NavnField;
            }
            set {
                if ((object.ReferenceEquals(this.NavnField, value) != true)) {
                    this.NavnField = value;
                    this.RaisePropertyChanged("Navn");
                }
            }
        }
        
        /// <summary>
        /// The person that created the group - Personen som opprettet gruppen.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver personen som opprettet gruppen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person OpprettetAv {
            get {
                return this.OpprettetAvField;
            }
            set {
                if ((object.ReferenceEquals(this.OpprettetAvField, value) != true)) {
                    this.OpprettetAvField = value;
                    this.RaisePropertyChanged("OpprettetAv");
                }
            }
        }
        
        /// <summary>
        /// Reference to the person that created the group - Referanse til personen som opprettet gruppen.
        /// Oppdateres automatisk.
        /// Tilsvarer NOARK4 feltet TG.OPPRAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OpprettetAvid {
            get {
                return this.OpprettetAvidField;
            }
            set {
                if ((this.OpprettetAvidField.Equals(value) != true)) {
                    this.OpprettetAvidField = value;
                    this.RaisePropertyChanged("OpprettetAvid");
                }
            }
        }
        
        /// <summary>
        /// Date created - Den dato gruppen ble opprettet.
        /// Oppdateres automatisk.
        /// Tilsvarer NOARK4 feltet TG.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OpprettetDato {
            get {
                return this.OpprettetDatoField;
            }
            set {
                if ((this.OpprettetDatoField.Equals(value) != true)) {
                    this.OpprettetDatoField = value;
                    this.RaisePropertyChanged("OpprettetDato");
                }
            }
        }
        
        /// <summary>
        /// Valid until date - Etter denne datoen skal rettighetene gitt av denne gruppen opphøre.
        /// Tilsvarer NOARK4 feltet TG.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UtgarDato {
            get {
                return this.UtgarDatoField;
            }
            set {
                if ((this.UtgarDatoField.Equals(value) != true)) {
                    this.UtgarDatoField = value;
                    this.RaisePropertyChanged("UtgarDato");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder personinformasjon.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Person : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdresseTilPerson[] AdresserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn AktivtNavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrukeridentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EksternReferanseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.PersonRolle[] RollerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SkrivetilgangTilAlleRegistrerteRollerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UtgaarDatoField;
        
        /// <summary>
        /// Adresser tilhørende person.
        /// </summary>
        /// <value>Inneholder informasjon om adresser tilhørende person.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdresseTilPerson[] Adresser {
            get {
                return this.AdresserField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresserField, value) != true)) {
                    this.AdresserField = value;
                    this.RaisePropertyChanged("Adresser");
                }
            }
        }
        
        /// <summary>
        /// Personens nåværende navn.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personens nåværende navn.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn AktivtNavn {
            get {
                return this.AktivtNavnField;
            }
            set {
                if ((object.ReferenceEquals(this.AktivtNavnField, value) != true)) {
                    this.AktivtNavnField = value;
                    this.RaisePropertyChanged("AktivtNavn");
                }
            }
        }
        
        /// <summary>
        /// Den brukerident som benyttes ved pålogging av Noark-systemet.
        /// Feltlegnde: 30 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet PE.BRUKERID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brukerident {
            get {
                return this.BrukeridentField;
            }
            set {
                if ((object.ReferenceEquals(this.BrukeridentField, value) != true)) {
                    this.BrukeridentField = value;
                    this.RaisePropertyChanged("Brukerident");
                }
            }
        }
        
        /// <summary>
        /// Ekstern referanse.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EksternReferanse {
            get {
                return this.EksternReferanseField;
            }
            set {
                if ((this.EksternReferanseField.Equals(value) != true)) {
                    this.EksternReferanseField = value;
                    this.RaisePropertyChanged("EksternReferanse");
                }
            }
        }
        
        /// <summary>
        /// Unik ID.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet PE.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Den dato personen kommer inn i systemet.
        /// Tilsvarer NOARK4 feltet PE.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OpprettetDato {
            get {
                return this.OpprettetDatoField;
            }
            set {
                if ((this.OpprettetDatoField.Equals(value) != true)) {
                    this.OpprettetDatoField = value;
                    this.RaisePropertyChanged("OpprettetDato");
                }
            }
        }
        
        /// <summary>
        /// Roller tilhørende person.
        /// </summary>
        /// <value>Inneholder informasjon om roller tilhørende person.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.PersonRolle[] Roller {
            get {
                return this.RollerField;
            }
            set {
                if ((object.ReferenceEquals(this.RollerField, value) != true)) {
                    this.RollerField = value;
                    this.RaisePropertyChanged("Roller");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom personen skal ha skrivetilgang til alle registrerte roller, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SkrivetilgangTilAlleRegistrerteRoller {
            get {
                return this.SkrivetilgangTilAlleRegistrerteRollerField;
            }
            set {
                if ((this.SkrivetilgangTilAlleRegistrerteRollerField.Equals(value) != true)) {
                    this.SkrivetilgangTilAlleRegistrerteRollerField = value;
                    this.RaisePropertyChanged("SkrivetilgangTilAlleRegistrerteRoller");
                }
            }
        }
        
        /// <summary>
        /// Dersom en person ikke lengre skal kunne refereres fra systemet, angis datoen i dette attributtet.
        /// Tilsvarer NOARK4 feltet PE.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UtgaarDato {
            get {
                return this.UtgaarDatoField;
            }
            set {
                if ((this.UtgaarDatoField.Equals(value) != true)) {
                    this.UtgaarDatoField = value;
                    this.RaisePropertyChanged("UtgaarDato");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder referanser til adresser tilknyttet personer.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdresseTilPerson", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AdresseTilPerson : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Adresseregister AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdresseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonIdField;
        
        /// <summary>
        /// Adresse.
        /// </summary>
        /// <value>Inneholder detaljer om adresse.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Adresseregister Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        /// <summary>
        /// Referanse til adresse.
        /// Tilsvarer NOARK4 feltet PA.ADRID
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdresseId {
            get {
                return this.AdresseIdField;
            }
            set {
                if ((this.AdresseIdField.Equals(value) != true)) {
                    this.AdresseIdField = value;
                    this.RaisePropertyChanged("AdresseId");
                }
            }
        }
        
        /// <summary>
        /// Person.
        /// </summary>
        /// <value>Inneholder detaljer om person.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        /// <summary>
        /// Referanse til person.
        /// Tilsvarer NOARK4 feltet PA.PEID
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver endringer i navn og initialer.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Personnavn", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Personnavn : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdresseTilPerson[] AdresserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AktivField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EtternavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FornavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FraDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MellomnavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TilDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgsmedlem[] UtvalgsmedlemskapField;
        
        /// <summary>
        /// Adresses belonging to the person - Adresser tilhørende person.
        /// </summary>
        /// <value>Inneholder informasjon om adresser tilhørende person.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdresseTilPerson[] Adresser {
            get {
                return this.AdresserField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresserField, value) != true)) {
                    this.AdresserField = value;
                    this.RaisePropertyChanged("Adresser");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the naming information is the persons current name - Valgt dersom dette er personens nåværende navn og initialer, ikke valgt ellers.
        /// En og bare en post for hver person skal kunne ha være valgt her.
        /// Tilsvarer NOARK4 feltet PN.AKTIV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Aktiv {
            get {
                return this.AktivField;
            }
            set {
                if ((this.AktivField.Equals(value) != true)) {
                    this.AktivField = value;
                    this.RaisePropertyChanged("Aktiv");
                }
            }
        }
        
        /// <summary>
        /// Last name - Personens etternavn.
        /// Feltlengde: 30 tegn.
        /// Tilsvarer NOARK4 feltet PN.ENAVN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Etternavn {
            get {
                return this.EtternavnField;
            }
            set {
                if ((object.ReferenceEquals(this.EtternavnField, value) != true)) {
                    this.EtternavnField = value;
                    this.RaisePropertyChanged("Etternavn");
                }
            }
        }
        
        /// <summary>
        /// First name - Personens fornavn.
        /// Feltlengde: 30 tegn.
        /// Tilsvarer NOARK4 feltet PN.FORNAVN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fornavn {
            get {
                return this.FornavnField;
            }
            set {
                if ((object.ReferenceEquals(this.FornavnField, value) != true)) {
                    this.FornavnField = value;
                    this.RaisePropertyChanged("Fornavn");
                }
            }
        }
        
        /// <summary>
        /// Date of creation - Den dato personen ble registrert med dette navnet/initialene i systemet.
        /// Tilsvarer NOARK4 feltet PN.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FraDato {
            get {
                return this.FraDatoField;
            }
            set {
                if ((this.FraDatoField.Equals(value) != true)) {
                    this.FraDatoField = value;
                    this.RaisePropertyChanged("FraDato");
                }
            }
        }
        
        /// <summary>
        /// Unique ID - Primærnøkkelen i tabellen.
        /// Tilsvarer NOARK4 feltet PN.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Initials used to represent the person i ePhorte - Personens offisielle interne initialer slik de benyttes ved registrering med videre.
        /// Må være utfylt dersom ID ikke er lik 0.
        /// Tilsvarer NOARK4 feltet PN.INIT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initialer {
            get {
                return this.InitialerField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialerField, value) != true)) {
                    this.InitialerField = value;
                    this.RaisePropertyChanged("Initialer");
                }
            }
        }
        
        /// <summary>
        /// Middle name - Personens eventuelle mellomnavn.
        /// Feltlengde: 30 tegn.
        /// Tilsvarer NOARK4 feltet PN.MNAVN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mellomnavn {
            get {
                return this.MellomnavnField;
            }
            set {
                if ((object.ReferenceEquals(this.MellomnavnField, value) != true)) {
                    this.MellomnavnField = value;
                    this.RaisePropertyChanged("Mellomnavn");
                }
            }
        }
        
        /// <summary>
        /// Full name - Personens navn slik som det skal benyttes ved underskrift mv.
        /// Må være utfylt dersom ID ikke er lik 0.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet PN.NAVN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Navn {
            get {
                return this.NavnField;
            }
            set {
                if ((object.ReferenceEquals(this.NavnField, value) != true)) {
                    this.NavnField = value;
                    this.RaisePropertyChanged("Navn");
                }
            }
        }
        
        /// <summary>
        /// Person (contains user credentials) - Person.
        /// </summary>
        /// <value>Detaljer om personen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        /// <summary>
        /// Reference to Person - Reference  til person.
        /// Tilsvarer NOARK4 feltet PE.PEID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        /// <summary>
        /// Date when use of the name ceases - Den dato bruken av dette navnet/initialene opphører.
        /// Tilsvarer NOARK4 feltet PN.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TilDato {
            get {
                return this.TilDatoField;
            }
            set {
                if ((this.TilDatoField.Equals(value) != true)) {
                    this.TilDatoField = value;
                    this.RaisePropertyChanged("TilDato");
                }
            }
        }
        
        /// <summary>
        /// - Medlemskap i utvalg tilhørende person.
        /// </summary>
        /// <value>Inneholder informasjon om medlemskap i utvalg tilhørende person.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgsmedlem[] Utvalgsmedlemskap {
            get {
                return this.UtvalgsmedlemskapField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgsmedlemskapField, value) != true)) {
                    this.UtvalgsmedlemskapField = value;
                    this.RaisePropertyChanged("Utvalgsmedlemskap");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver medlemmer i utvalg.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utvalgsmedlem", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Utvalgsmedlem : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FraDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.FunksjonIUtvalg FunksjonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunksjonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GodtgjoerelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MedlemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn PersonligVaramedlemForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonligVaramedlemForIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn PersonnavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonnavnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RekkefoelgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Adresseregister RepresentererField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RepresentererIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StandardSorteringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TilDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalg UtvalgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtvalgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtvalgssekretaerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarighetField;
        
        /// <summary>
        /// Den dato medlemmet tiltrer som medlem i utvalget med den angitte funksjon.
        /// Bytter medlemmet funksjon i utvalget, eller tiltrer utvalget etter å ha vært ute en periode,
        /// skal det registreres en ny post for medlemmet.
        /// Tilsvarer NOARK4 feltet UM.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FraDato {
            get {
                return this.FraDatoField;
            }
            set {
                if ((this.FraDatoField.Equals(value) != true)) {
                    this.FraDatoField = value;
                    this.RaisePropertyChanged("FraDato");
                }
            }
        }
        
        /// <summary>
        /// Funksjonen denne personen har i utvalget.
        /// </summary>
        /// <value>Inneholder attributter for funksjonen denne personen har i utvalget.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.FunksjonIUtvalg Funksjon {
            get {
                return this.FunksjonField;
            }
            set {
                if ((object.ReferenceEquals(this.FunksjonField, value) != true)) {
                    this.FunksjonField = value;
                    this.RaisePropertyChanged("Funksjon");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hvilken funksjon denne personen har i utvalget.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen FunksjonIUtvalg.
        /// Tilsvarer NOARK4 feltet UM.FUNK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunksjonId {
            get {
                return this.FunksjonIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FunksjonIdField, value) != true)) {
                    this.FunksjonIdField = value;
                    this.RaisePropertyChanged("FunksjonId");
                }
            }
        }
        
        /// <summary>
        /// Møtegodtgjørelse.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Godtgjoerelse {
            get {
                return this.GodtgjoerelseField;
            }
            set {
                if ((this.GodtgjoerelseField.Equals(value) != true)) {
                    this.GodtgjoerelseField = value;
                    this.RaisePropertyChanged("Godtgjoerelse");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom personen er fullverdig medlem av utvalget.
        /// Tilsvarer NOARK4 feltet UM.MEDLEM.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Medlem {
            get {
                return this.MedlemField;
            }
            set {
                if ((this.MedlemField.Equals(value) != true)) {
                    this.MedlemField = value;
                    this.RaisePropertyChanged("Medlem");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet UM.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknader {
            get {
                return this.MerknaderField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknaderField, value) != true)) {
                    this.MerknaderField = value;
                    this.RaisePropertyChanged("Merknader");
                }
            }
        }
        
        /// <summary>
        /// Personen som er personlig varamedlem for dette medlemmet.
        /// </summary>
        /// <value>Inneholder attributter for personen som er personlig varamedlem for dette medlemmet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn PersonligVaramedlemFor {
            get {
                return this.PersonligVaramedlemForField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonligVaramedlemForField, value) != true)) {
                    this.PersonligVaramedlemForField = value;
                    this.RaisePropertyChanged("PersonligVaramedlemFor");
                }
            }
        }
        
        /// <summary>
        /// Referanse til person som er personlig varamedlem for dette medlemmet.
        /// Tilsvarer NOARK4 feltet UM.VARAFOR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonligVaramedlemForId {
            get {
                return this.PersonligVaramedlemForIdField;
            }
            set {
                if ((this.PersonligVaramedlemForIdField.Equals(value) != true)) {
                    this.PersonligVaramedlemForIdField = value;
                    this.RaisePropertyChanged("PersonligVaramedlemForId");
                }
            }
        }
        
        /// <summary>
        /// Personen som medlemskapet gjelder.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som medlemskapet gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn Personnavn {
            get {
                return this.PersonnavnField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonnavnField, value) != true)) {
                    this.PersonnavnField = value;
                    this.RaisePropertyChanged("Personnavn");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person som medlemskapet gjelder.
        /// Tilsvarer NOARK4 feltet UM.PNID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonnavnId {
            get {
                return this.PersonnavnIdField;
            }
            set {
                if ((this.PersonnavnIdField.Equals(value) != true)) {
                    this.PersonnavnIdField = value;
                    this.RaisePropertyChanged("PersonnavnId");
                }
            }
        }
        
        /// <summary>
        /// Dersom medlemmer skal rangeres, f.eks etter antall stemmer, kan rekkefølgen angis her.
        /// Dette er spesielt relevant i forbindelse med innkalling av varamedlemmer.
        /// Fast verdi 0 dersom en slik rangering ikke skal foretas.
        /// Tilsvarer NOARK4 feltet UM.RANGERING.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rekkefoelge {
            get {
                return this.RekkefoelgeField;
            }
            set {
                if ((this.RekkefoelgeField.Equals(value) != true)) {
                    this.RekkefoelgeField = value;
                    this.RaisePropertyChanged("Rekkefoelge");
                }
            }
        }
        
        /// <summary>
        /// Parti, virksomhet el. som medlemmet representerer.
        /// </summary>
        /// <value>Inneholde detaljer om parti, virksomhet el. som medlemmet representerer.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Adresseregister Representerer {
            get {
                return this.RepresentererField;
            }
            set {
                if ((object.ReferenceEquals(this.RepresentererField, value) != true)) {
                    this.RepresentererField = value;
                    this.RaisePropertyChanged("Representerer");
                }
            }
        }
        
        /// <summary>
        /// Referanse til parti, virksomhet el. som medlemmet representerer.
        /// Tilsvarer NOARK4 feltet UM.REPRES.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RepresentererId {
            get {
                return this.RepresentererIdField;
            }
            set {
                if ((this.RepresentererIdField.Equals(value) != true)) {
                    this.RepresentererIdField = value;
                    this.RaisePropertyChanged("RepresentererId");
                }
            }
        }
        
        /// <summary>
        /// Benyttes for å angi hvordan utvalgets medlemmer vanligvis skal sorteres ved utskrifter.
        /// Tilsvarer NOARK4 feltet UM.SORT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StandardSortering {
            get {
                return this.StandardSorteringField;
            }
            set {
                if ((this.StandardSorteringField.Equals(value) != true)) {
                    this.StandardSorteringField = value;
                    this.RaisePropertyChanged("StandardSortering");
                }
            }
        }
        
        /// <summary>
        /// Den dato medlemmet fratrer som medlem av utvalget.
        /// Tilsvarer NOARK4 feltet UM.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TilDato {
            get {
                return this.TilDatoField;
            }
            set {
                if ((this.TilDatoField.Equals(value) != true)) {
                    this.TilDatoField = value;
                    this.RaisePropertyChanged("TilDato");
                }
            }
        }
        
        /// <summary>
        /// Utvalget som medlemskapet gjelder for.
        /// </summary>
        /// <value>Inneholder informasjon om utvalget som medlemskapet gjelder for.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalg Utvalg {
            get {
                return this.UtvalgField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgField, value) != true)) {
                    this.UtvalgField = value;
                    this.RaisePropertyChanged("Utvalg");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalget som medlemskapet gjelder for.
        /// Tilsvarer NOARK4 feltet UM.UTVID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtvalgId {
            get {
                return this.UtvalgIdField;
            }
            set {
                if ((this.UtvalgIdField.Equals(value) != true)) {
                    this.UtvalgIdField = value;
                    this.RaisePropertyChanged("UtvalgId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom denne personen skal ha tilgang til funksjoner for utvalgssekretær for dette utvalget, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet UM.SEKR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Utvalgssekretaer {
            get {
                return this.UtvalgssekretaerField;
            }
            set {
                if ((this.UtvalgssekretaerField.Equals(value) != true)) {
                    this.UtvalgssekretaerField = value;
                    this.RaisePropertyChanged("Utvalgssekretaer");
                }
            }
        }
        
        /// <summary>
        /// Den periode medlemmet er utnevnt for.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet UM.VARIGHET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Varighet {
            get {
                return this.VarighetField;
            }
            set {
                if ((object.ReferenceEquals(this.VarighetField, value) != true)) {
                    this.VarighetField = value;
                    this.RaisePropertyChanged("Varighet");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver de funksjoner personer kan ha som medlem i utvalg og som deltaker på et utvalgsmøte.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FunksjonIUtvalg", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class FunksjonIUtvalg : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FrammoetekodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FullverdigMedlemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TalerettField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtvalgssekretaerField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet MK.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom denne koden kun skal kunne benyttes ved registrering av frammøte, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet MK.FMKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Frammoetekode {
            get {
                return this.FrammoetekodeField;
            }
            set {
                if ((this.FrammoetekodeField.Equals(value) != true)) {
                    this.FrammoetekodeField = value;
                    this.RaisePropertyChanged("Frammoetekode");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom medlemmer med denne koden er fullverdige medlemmer med stemmerett, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet MK.MEDLEM.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FullverdigMedlem {
            get {
                return this.FullverdigMedlemField;
            }
            set {
                if ((this.FullverdigMedlemField.Equals(value) != true)) {
                    this.FullverdigMedlemField = value;
                    this.RaisePropertyChanged("FullverdigMedlem");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet MK.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom personer med denne koden skal ha tale/uttalerett i møtet, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet MK.TALE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Talerett {
            get {
                return this.TalerettField;
            }
            set {
                if ((this.TalerettField.Equals(value) != true)) {
                    this.TalerettField = value;
                    this.RaisePropertyChanged("Talerett");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom personer med denne koden skal ha tilgang til funksjoner for utvalgssekretær for utvalget, ikke valgt ellers.
        /// Forutsetter at personens rolle gir tilgang til funksjoner for utvalgssekretær.
        /// Tilsvarer NOARK4 feltet MK.SEKR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Utvalgssekretaer {
            get {
                return this.UtvalgssekretaerField;
            }
            set {
                if ((this.UtvalgssekretaerField.Equals(value) != true)) {
                    this.UtvalgssekretaerField = value;
                    this.RaisePropertyChanged("Utvalgssekretaer");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver de folkevalgte organer og andre utvalg som deltar i saksbehandlingen.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utvalg", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Utvalg : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdministrativEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AntallMedlemmerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkivdel ArkivdelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivdelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Ordningsverdi ArkivkodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivkodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EksporterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EtablertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatForMotenummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FraDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NedlagtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Nummerserie NummerserieForMoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NummerserieForMoteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Adresseregister OppnevntAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalg OppnevntAvUtvalgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OppnevntAvUtvalgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OppnevntAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OppnevntDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.SakskartUtvalgssakstype[] SakskartUtvalgssakstyperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TilDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TildelNummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgsmedlem[] UtvalgsmedlemmerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgsmoete[] UtvalgsmoeterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgstype UtvalgstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtvalgstypeIdField;
        
        /// <summary>
        /// Administrativ enhet som har ansvar for å forberede saker til utvalget.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver den administrative enhet som har ansvar for å forberede saker til utvalget.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhet {
            get {
                return this.AdministrativEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativEnhetField, value) != true)) {
                    this.AdministrativEnhetField = value;
                    this.RaisePropertyChanged("AdministrativEnhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den administrative enhet som har ansvar for å forberede saker til utvalget.
        /// Standardverdi 0 (ikke angitt).
        /// Oppslag mot tabellen Administrativ inndeling.
        /// Tilsvarer NOARK4 feltet UT.ADMID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdministrativEnhetId {
            get {
                return this.AdministrativEnhetIdField;
            }
            set {
                if ((this.AdministrativEnhetIdField.Equals(value) != true)) {
                    this.AdministrativEnhetIdField = value;
                    this.RaisePropertyChanged("AdministrativEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Vedtatt antall faste medlemmer i utvalget.
        /// Tilsvarer NOARK4 feltet UT.ANTMEDL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AntallMedlemmer {
            get {
                return this.AntallMedlemmerField;
            }
            set {
                if ((this.AntallMedlemmerField.Equals(value) != true)) {
                    this.AntallMedlemmerField = value;
                    this.RaisePropertyChanged("AntallMedlemmer");
                }
            }
        }
        
        /// <summary>
        /// Arkivdel hvor dokument knyttet direkte til møter i utvalget, skal arkiveres.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver arkivdel hvor dokument knyttet direkte til møter i utvalget, skal arkiveres.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkivdel Arkivdel {
            get {
                return this.ArkivdelField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivdelField, value) != true)) {
                    this.ArkivdelField = value;
                    this.RaisePropertyChanged("Arkivdel");
                }
            }
        }
        
        /// <summary>
        /// Referanse til arkivdel hvor dokument knyttet direkte til møter i utvalget, skal arkiveres.
        /// Oppslag mot tabellen Arkivdel.
        /// Tilsvarer NOARK4 feltet UT.ARKDEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivdelId {
            get {
                return this.ArkivdelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivdelIdField, value) != true)) {
                    this.ArkivdelIdField = value;
                    this.RaisePropertyChanged("ArkivdelId");
                }
            }
        }
        
        /// <summary>
        /// Standardverdi for arkivkode for dokumenter tilknyttet utvalgsmøter.
        /// </summary>
        /// <value>Inneholder attributter som beskriver standardverdi for arkivkode for dokumenter tilknyttet utvalgsmøter.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Ordningsverdi Arkivkode {
            get {
                return this.ArkivkodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivkodeField, value) != true)) {
                    this.ArkivkodeField = value;
                    this.RaisePropertyChanged("Arkivkode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til standardverdi for arkivkode for dokumenter tilknyttet utvalgsmøter.
        /// Oppslag mot tabellen Ordningsverdi på grunnlag av attributtet Primær arkivnøkkel knyttet til arkivdelen angitt i attributtet Arkivdel.
        /// Tilsvarer NOARK4 feltet UT.ARKKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivkodeId {
            get {
                return this.ArkivkodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivkodeIdField, value) != true)) {
                    this.ArkivkodeIdField = value;
                    this.RaisePropertyChanged("ArkivkodeId");
                }
            }
        }
        
        /// <summary>
        /// Mer utfyllende beskrivelse av utvalget.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet UT.BESKR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Beskrivelse {
            get {
                return this.BeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BeskrivelseField, value) != true)) {
                    this.BeskrivelseField = value;
                    this.RaisePropertyChanged("Beskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom utvalget og tilhørende informasjon som møteplan, sakskart, medlemmer og dokumenter skal kunne eksporteres til innsynsløsninger, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Eksporter {
            get {
                return this.EksporterField;
            }
            set {
                if ((this.EksporterField.Equals(value) != true)) {
                    this.EksporterField = value;
                    this.RaisePropertyChanged("Eksporter");
                }
            }
        }
        
        /// <summary>
        /// Den dato utvalget ble oppnevnt for første gang.
        /// Tilsvarer NOARK4 feltet UT.ETABLERT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Etablert {
            get {
                return this.EtablertField;
            }
            set {
                if ((this.EtablertField.Equals(value) != true)) {
                    this.EtablertField = value;
                    this.RaisePropertyChanged("Etablert");
                }
            }
        }
        
        /// <summary>
        /// Format som skal benyttes ved utskrift av møtenummeret.
        /// Feltlengde: 30 tegn.
        /// Tillatte verdier:
        /// åå angir årstall med to siffer,
        /// åååå årstall med fire siffer,
        /// # møtenummer uten ledende 0,
        /// mens et antall 0-er angir at møtenummeret skal skrives ut med et fast antall siffer med ledende 0.
        /// Alle andre tegn i formatstrengen skrives ut som de er.
        /// Eks:  åååå-## skal gi 1998-3 for møte nummer 3 i 1998, mens format 000 skal gi 027 for utvalges møte nummer 27.
        /// Tilsvarer NOARK4 feltet UT.MOTEFORM.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatForMotenummer {
            get {
                return this.FormatForMotenummerField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatForMotenummerField, value) != true)) {
                    this.FormatForMotenummerField = value;
                    this.RaisePropertyChanged("FormatForMotenummer");
                }
            }
        }
        
        /// <summary>
        /// Start funksjonstid.
        /// (Nåværende periode)
        /// Tilsvarer NOARK4 feltet UT.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FraDato {
            get {
                return this.FraDatoField;
            }
            set {
                if ((this.FraDatoField.Equals(value) != true)) {
                    this.FraDatoField = value;
                    this.RaisePropertyChanged("FraDato");
                }
            }
        }
        
        /// <summary>
        /// Unik ID for utvalget.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet UT.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Kortkode for utvalget.
        /// Feltlengde: 10 tegn.
        /// Skal være unik blant de aktive utvalgene, dvs de som ikke har nedlagt dato utfylt.
        /// Tilsvarer NOARK4 feltet UT.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kode {
            get {
                return this.KodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KodeField, value) != true)) {
                    this.KodeField = value;
                    this.RaisePropertyChanged("Kode");
                }
            }
        }
        
        /// <summary>
        /// Utvalgets navn.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet UT.NAVN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Navn {
            get {
                return this.NavnField;
            }
            set {
                if ((object.ReferenceEquals(this.NavnField, value) != true)) {
                    this.NavnField = value;
                    this.RaisePropertyChanged("Navn");
                }
            }
        }
        
        /// <summary>
        /// Dato for nedleggelse av utvalget.
        /// Når denne er angitt, skal det ikke kunne knyttes til nye saker, medlemmer el. til utvalget.
        /// Tilsvarer NOARK4 feltet UT.NEDLAGT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Nedlagt {
            get {
                return this.NedlagtField;
            }
            set {
                if ((this.NedlagtField.Equals(value) != true)) {
                    this.NedlagtField = value;
                    this.RaisePropertyChanged("Nedlagt");
                }
            }
        }
        
        /// <summary>
        /// Nummerserie for nummerering av utvalgets møter.
        /// </summary>
        /// <value>Inneholder attributter som beskriver nummerserie for nummerering av utvalgets møter.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Nummerserie NummerserieForMote {
            get {
                return this.NummerserieForMoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NummerserieForMoteField, value) != true)) {
                    this.NummerserieForMoteField = value;
                    this.RaisePropertyChanged("NummerserieForMote");
                }
            }
        }
        
        /// <summary>
        /// Referanse til nummerserie for nummerering av utvalgets møter.
        /// Det bør være mulig å velge om utvalgets møter skal nummereres innen et år eller på tvers av alle år.
        /// Oppslag mot tabellen Nummerserie.
        /// Tilsvarer NOARK4 feltet UT.MONUMSER.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NummerserieForMoteId {
            get {
                return this.NummerserieForMoteIdField;
            }
            set {
                if ((this.NummerserieForMoteIdField.Equals(value) != true)) {
                    this.NummerserieForMoteIdField = value;
                    this.RaisePropertyChanged("NummerserieForMoteId");
                }
            }
        }
        
        /// <summary>
        /// Det organ som har oppnevnt utvalget.
        /// </summary>
        /// <value>Inneholder attributter som beskriver det organ som har oppnevnt utvalget.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Adresseregister OppnevntAv {
            get {
                return this.OppnevntAvField;
            }
            set {
                if ((object.ReferenceEquals(this.OppnevntAvField, value) != true)) {
                    this.OppnevntAvField = value;
                    this.RaisePropertyChanged("OppnevntAv");
                }
            }
        }
        
        /// <summary>
        /// Utvalget som eventuelt har oppnevnt dette utvalget.
        /// </summary>
        /// <value>Inneholder attributter som beskriver det utvalget som eventuelt har oppnevnt dette utvalget.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalg OppnevntAvUtvalg {
            get {
                return this.OppnevntAvUtvalgField;
            }
            set {
                if ((object.ReferenceEquals(this.OppnevntAvUtvalgField, value) != true)) {
                    this.OppnevntAvUtvalgField = value;
                    this.RaisePropertyChanged("OppnevntAvUtvalg");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalget som eventuelt har oppnevnt dette utvalget.
        /// Tilsvarer NOARK4 feltet UT_OPPNAVUTV
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OppnevntAvUtvalgId {
            get {
                return this.OppnevntAvUtvalgIdField;
            }
            set {
                if ((this.OppnevntAvUtvalgIdField.Equals(value) != true)) {
                    this.OppnevntAvUtvalgIdField = value;
                    this.RaisePropertyChanged("OppnevntAvUtvalgId");
                }
            }
        }
        
        /// <summary>
        /// Referanse til det organ som har oppnevnt utvalget.
        /// Oppslag mot tabellen Adresseregister.
        /// Tilsvarer NOARK4 feltet UT.OPPNAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OppnevntAvid {
            get {
                return this.OppnevntAvidField;
            }
            set {
                if ((this.OppnevntAvidField.Equals(value) != true)) {
                    this.OppnevntAvidField = value;
                    this.RaisePropertyChanged("OppnevntAvid");
                }
            }
        }
        
        /// <summary>
        /// Dato for oppnevnelse av utvalget.
        /// Tilsvarer NOARK4 feltet UT.OPPNDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OppnevntDato {
            get {
                return this.OppnevntDatoField;
            }
            set {
                if ((this.OppnevntDatoField.Equals(value) != true)) {
                    this.OppnevntDatoField = value;
                    this.RaisePropertyChanged("OppnevntDato");
                }
            }
        }
        
        /// <summary>
        /// Utvalgssakstyper tilhørende utvalget.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver utvalgssakstyper tilhørende utvalget.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.SakskartUtvalgssakstype[] SakskartUtvalgssakstyper {
            get {
                return this.SakskartUtvalgssakstyperField;
            }
            set {
                if ((object.ReferenceEquals(this.SakskartUtvalgssakstyperField, value) != true)) {
                    this.SakskartUtvalgssakstyperField = value;
                    this.RaisePropertyChanged("SakskartUtvalgssakstyper");
                }
            }
        }
        
        /// <summary>
        /// Slutt funksjonstid.
        /// Tilsvarer NOARK4 feltet UT.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TilDato {
            get {
                return this.TilDatoField;
            }
            set {
                if ((this.TilDatoField.Equals(value) != true)) {
                    this.TilDatoField = value;
                    this.RaisePropertyChanged("TilDato");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom saksnummer for utvalgssaker tildeles automatisk, ikke valgt dersom det tildeles i møtet.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TildelNummer {
            get {
                return this.TildelNummerField;
            }
            set {
                if ((this.TildelNummerField.Equals(value) != true)) {
                    this.TildelNummerField = value;
                    this.RaisePropertyChanged("TildelNummer");
                }
            }
        }
        
        /// <summary>
        /// Utvalgsmedlemmer tilhørende utvalget.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver utvalgsmedlemmer tilhørende utvalget.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgsmedlem[] Utvalgsmedlemmer {
            get {
                return this.UtvalgsmedlemmerField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgsmedlemmerField, value) != true)) {
                    this.UtvalgsmedlemmerField = value;
                    this.RaisePropertyChanged("Utvalgsmedlemmer");
                }
            }
        }
        
        /// <summary>
        /// Utvalgsmøter tilhørende utvalget.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver utvalgsmøter tilhørende utvalget.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgsmoete[] Utvalgsmoeter {
            get {
                return this.UtvalgsmoeterField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgsmoeterField, value) != true)) {
                    this.UtvalgsmoeterField = value;
                    this.RaisePropertyChanged("Utvalgsmoeter");
                }
            }
        }
        
        /// <summary>
        /// Type utvalg.
        /// </summary>
        /// <value>Inneholder attributter som beskriver type utvalg.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgstype Utvalgstype {
            get {
                return this.UtvalgstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgstypeField, value) != true)) {
                    this.UtvalgstypeField = value;
                    this.RaisePropertyChanged("Utvalgstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til type utvalg.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Utvalgstype.
        /// Tilsvarer NOARK4 feltet UT.TYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtvalgstypeId {
            get {
                return this.UtvalgstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgstypeIdField, value) != true)) {
                    this.UtvalgstypeIdField = value;
                    this.RaisePropertyChanged("UtvalgstypeId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver de enkelte deler virksomhetens arkiver består av.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Arkivdel", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Arkivdel : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkiv ArkivField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ArkiveresPaaPapirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkivperiode ArkivperiodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ArkivperiodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkivstatus ArkivstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivstatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkivdel ArvtakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArvtakerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AvslutningsdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Bortsettingskode BortsettingskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BortsettingskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BortsettingsprinsippField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn EksportKontrollertAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EksportKontrollertAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EksportKontrollertDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EksportertDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ElektroniskLagredeDokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LokaliseringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LukketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp PrimaerArkivnoekkelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaerArkivnoekkelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaerkodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RapportgruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RapportutvalgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp SekundaertOrdningsprinsippField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SekundaertOrdningsprinsippIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SperretForNyeDokumenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SperretForNyeSakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Nummerserie StandardNummerserieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StandardNummerserieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ValgfriSekundaertOrdningsprinsippField;
        
        /// <summary>
        /// The archive that the record section is part of  - Arkivet som arkivdelen inngår i.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver arkivet som arkivdelen inngår i.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkiv Arkiv {
            get {
                return this.ArkivField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivField, value) != true)) {
                    this.ArkivField = value;
                    this.RaisePropertyChanged("Arkiv");
                }
            }
        }
        
        /// <summary>
        /// Reference to the archive that the record section is part of - Referanse til det arkiv som arkivdelen inngår i.
        /// Oppslag mot tabellen Arkiv.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet AD.ARKIV
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivId {
            get {
                return this.ArkivIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivIdField, value) != true)) {
                    this.ArkivIdField = value;
                    this.RaisePropertyChanged("ArkivId");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom det er tillatt å arkivere papirdokument i denne arkivdelen, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet AD.PAPIR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ArkiveresPaaPapir {
            get {
                return this.ArkiveresPaaPapirField;
            }
            set {
                if ((this.ArkiveresPaaPapirField.Equals(value) != true)) {
                    this.ArkiveresPaaPapirField = value;
                    this.RaisePropertyChanged("ArkiveresPaaPapir");
                }
            }
        }
        
        /// <summary>
        /// - Arkivperioden som arkivdelen er tilknyttet.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver arkivperioden som arkivdelen er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkivperiode Arkivperiode {
            get {
                return this.ArkivperiodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivperiodeField, value) != true)) {
                    this.ArkivperiodeField = value;
                    this.RaisePropertyChanged("Arkivperiode");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til arkivperiode. Dersom arkivdelen er knyttet til en avsluttet periode (dvs bortsettingskode F), angis her den perioden arkivdelen tilhører.
        /// Oppslag mot tabellen Arkivperiode.
        /// Tilsvarer NOARK4 feltet AD.PERIODE
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ArkivperiodeId {
            get {
                return this.ArkivperiodeIdField;
            }
            set {
                if ((this.ArkivperiodeIdField.Equals(value) != true)) {
                    this.ArkivperiodeIdField = value;
                    this.RaisePropertyChanged("ArkivperiodeId");
                }
            }
        }
        
        /// <summary>
        /// - Arkivstatus.
        /// </summary>
        /// <value>Inneholder attributter som beskriver arkivdelens status.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkivstatus Arkivstatus {
            get {
                return this.ArkivstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivstatusField, value) != true)) {
                    this.ArkivstatusField = value;
                    this.RaisePropertyChanged("Arkivstatus");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til arkivstatus.
        /// Oppslag mot tabellen Arkivstatus.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet AD.ASTATUS
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivstatusId {
            get {
                return this.ArkivstatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivstatusIdField, value) != true)) {
                    this.ArkivstatusIdField = value;
                    this.RaisePropertyChanged("ArkivstatusId");
                }
            }
        }
        
        /// <summary>
        /// - Arkivdelens arvtaker.
        /// </summary>
        /// <value>Inneholder attributter som beskriver arkivdelens arvtaker.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkivdel Arvtaker {
            get {
                return this.ArvtakerField;
            }
            set {
                if ((object.ReferenceEquals(this.ArvtakerField, value) != true)) {
                    this.ArvtakerField = value;
                    this.RaisePropertyChanged("Arvtaker");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til arkivdelens arvtaker.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Arkivdel.
        /// Tilsvarer NOARK4 feltet AD.FORTS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArvtakerId {
            get {
                return this.ArvtakerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArvtakerIdField, value) != true)) {
                    this.ArvtakerIdField = value;
                    this.RaisePropertyChanged("ArvtakerId");
                }
            }
        }
        
        /// <summary>
        /// - Dato for det yngste materialet som inngår i arkivdelen.
        /// Tilsvarer NOARK4 feltet AD.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Avslutningsdato {
            get {
                return this.AvslutningsdatoField;
            }
            set {
                if ((this.AvslutningsdatoField.Equals(value) != true)) {
                    this.AvslutningsdatoField = value;
                    this.RaisePropertyChanged("Avslutningsdato");
                }
            }
        }
        
        /// <summary>
        /// Description - Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet AD.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// - Arkivdelens bortsettingskode.
        /// </summary>
        /// <value>Kode som angir hvilket prinsipp som benyttes ved bortsetting av arkivdelen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Bortsettingskode Bortsettingskode {
            get {
                return this.BortsettingskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BortsettingskodeField, value) != true)) {
                    this.BortsettingskodeField = value;
                    this.RaisePropertyChanged("Bortsettingskode");
                }
            }
        }
        
        /// <summary>
        /// - Kode som angir hvilket prinsipp som skal benyttes ved bortsetting.
        /// Andre prinsipper enn fast periodeinndeling tillates bare for objektordnede arkivdeler.
        /// Oppslag mot tabellen Bortsettingskode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet AD.BSKODE
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BortsettingskodeId {
            get {
                return this.BortsettingskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BortsettingskodeIdField, value) != true)) {
                    this.BortsettingskodeIdField = value;
                    this.RaisePropertyChanged("BortsettingskodeId");
                }
            }
        }
        
        /// <summary>
        /// - Tekstlig beskrivelse av forhold knyttet til bortsetting.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet AD.BSPRINS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bortsettingsprinsipp {
            get {
                return this.BortsettingsprinsippField;
            }
            set {
                if ((object.ReferenceEquals(this.BortsettingsprinsippField, value) != true)) {
                    this.BortsettingsprinsippField = value;
                    this.RaisePropertyChanged("Bortsettingsprinsipp");
                }
            }
        }
        
        /// <summary>
        /// - Eksport kontrollert av person.
        /// </summary>
        /// <value>Inneholder informasjon om navn og initialer.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn EksportKontrollertAv {
            get {
                return this.EksportKontrollertAvField;
            }
            set {
                if ((object.ReferenceEquals(this.EksportKontrollertAvField, value) != true)) {
                    this.EksportKontrollertAvField = value;
                    this.RaisePropertyChanged("EksportKontrollertAv");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til den person som har kontrollert at eksporten er utført med vellykket resultat.
        /// Tilsvarer NOARK4 feltet AD.KONTRAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EksportKontrollertAvid {
            get {
                return this.EksportKontrollertAvidField;
            }
            set {
                if ((this.EksportKontrollertAvidField.Equals(value) != true)) {
                    this.EksportKontrollertAvidField = value;
                    this.RaisePropertyChanged("EksportKontrollertAvid");
                }
            }
        }
        
        /// <summary>
        /// - Dato for kontroll av eksportresultatet.
        /// Tilsvarer NOARK4 feltet AD.KONTRDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EksportKontrollertDato {
            get {
                return this.EksportKontrollertDatoField;
            }
            set {
                if ((this.EksportKontrollertDatoField.Equals(value) != true)) {
                    this.EksportKontrollertDatoField = value;
                    this.RaisePropertyChanged("EksportKontrollertDato");
                }
            }
        }
        
        /// <summary>
        /// - Dato når arkivdelen i sin helhet ble eksportert (på de spesifiserte eksportformat).
        /// Tilsvarer NOARK4 feltet AD.EKSPDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EksportertDato {
            get {
                return this.EksportertDatoField;
            }
            set {
                if ((this.EksportertDatoField.Equals(value) != true)) {
                    this.EksportertDatoField = value;
                    this.RaisePropertyChanged("EksportertDato");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom det er tillatt å arkivere elektroniske dokument i denne arkivdelen, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet AD.ELDOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ElektroniskLagredeDokument {
            get {
                return this.ElektroniskLagredeDokumentField;
            }
            set {
                if ((this.ElektroniskLagredeDokumentField.Equals(value) != true)) {
                    this.ElektroniskLagredeDokumentField = value;
                    this.RaisePropertyChanged("ElektroniskLagredeDokument");
                }
            }
        }
        
        /// <summary>
        /// Unique ID - Kortkode for arkivdel.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet AD.ARKDEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// - Beskrivelse av hvor (den fysiske) arkivdelen er plassert.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet AD.LOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lokalisering {
            get {
                return this.LokaliseringField;
            }
            set {
                if ((object.ReferenceEquals(this.LokaliseringField, value) != true)) {
                    this.LokaliseringField = value;
                    this.RaisePropertyChanged("Lokalisering");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom det ikke kunne gjøres noen endringer i Arkivdelen.
        /// øking, rapportering mv skal fortsatt være tilgjengelig.
        /// Tilsvarer NOARK4 feltet AD.LUKKET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Lukket {
            get {
                return this.LukketField;
            }
            set {
                if ((this.LukketField.Equals(value) != true)) {
                    this.LukketField = value;
                    this.RaisePropertyChanged("Lukket");
                }
            }
        }
        
        /// <summary>
        /// - Eventuell merknad knyttet til arkivdelen.
        /// Feltlengde: 2000 tegn.
        /// Tilsvarer NOARK4 feltet AD.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// - Arkivdelens primære arkivnøkkel.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver primært ordningsprinsipp.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp PrimaerArkivnoekkel {
            get {
                return this.PrimaerArkivnoekkelField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaerArkivnoekkelField, value) != true)) {
                    this.PrimaerArkivnoekkelField = value;
                    this.RaisePropertyChanged("PrimaerArkivnoekkel");
                }
            }
        }
        
        /// <summary>
        /// - Det ordningsprinsipp som skal benyttes som primær arkivnøkkel for arkivdelen.
        /// Standardverdi hentes fra Arkiv. Primær arkivnøkkel kan ikke endres etter at arkivdelen er tatt i bruk, dvs at det finnes en eller flere saker og/eller journalposter som er registrert i denne arkivdelen.
        /// Oppslag mot tabellen Ordningsprinsipp.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet AD.PRIMNOK
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaerArkivnoekkelId {
            get {
                return this.PrimaerArkivnoekkelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaerArkivnoekkelIdField, value) != true)) {
                    this.PrimaerArkivnoekkelIdField = value;
                    this.RaisePropertyChanged("PrimaerArkivnoekkelId");
                }
            }
        }
        
        /// <summary>
        /// - Dersom denne er angitt, skal alle saker i arkivdelen ha denne som primærkode.
        /// Kan f.eks benyttes for arkivdeler med personalmapper hvor alle sakene skal ha 221 som primærkode når statens arkivnøkkel benyttes.
        /// Primær arkivkode skal ikke kunne endres for den enkelte sak som inngår i arkivdelen når det her er angitt en primærkode for hele arkivdelen.
        /// Oppslag mot tabellen Ordningsverdi med utgangspunkt i verdien i attributtet Primær arkivnøkkel.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet AD.PRIMKOD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaerkodeId {
            get {
                return this.PrimaerkodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaerkodeIdField, value) != true)) {
                    this.PrimaerkodeIdField = value;
                    this.RaisePropertyChanged("PrimaerkodeId");
                }
            }
        }
        
        /// <summary>
        /// - Dersom dokumenter fra flere arkivdeler skal samsorteres i enkelte rapporter eller dersom en ikke ønsker en ren alfabetisk sortering,
        /// kan dette attributtet benyttes for å få til den ønskede sortering.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet AD.RPGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rapportgruppe {
            get {
                return this.RapportgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.RapportgruppeField, value) != true)) {
                    this.RapportgruppeField = value;
                    this.RaisePropertyChanged("Rapportgruppe");
                }
            }
        }
        
        /// <summary>
        /// - Ved eksport eller rapportering som skal omfatte et antall arkivdeler, benyttes dette attributtet for å gruppere alle arkivdeler som skal inngå.
        /// Innholdet av attributtet benyttes som utvalgskriterium for rapporten/eksportkjøringen.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet AD.RAPUTV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rapportutvalg {
            get {
                return this.RapportutvalgField;
            }
            set {
                if ((object.ReferenceEquals(this.RapportutvalgField, value) != true)) {
                    this.RapportutvalgField = value;
                    this.RaisePropertyChanged("Rapportutvalg");
                }
            }
        }
        
        /// <summary>
        /// - Arkivdelens primære arkivnøkkel.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver sekundært ordningsprinsipp .</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp SekundaertOrdningsprinsipp {
            get {
                return this.SekundaertOrdningsprinsippField;
            }
            set {
                if ((object.ReferenceEquals(this.SekundaertOrdningsprinsippField, value) != true)) {
                    this.SekundaertOrdningsprinsippField = value;
                    this.RaisePropertyChanged("SekundaertOrdningsprinsipp");
                }
            }
        }
        
        /// <summary>
        /// - Unik referanse til et ordningsprinsipp som om ønskelig kan benyttes til videre inndeling under
        /// de ordningsverdier hvor det ikke er angitt et eget sekundært ordningsprinsipp.
        /// Oppslag mot tabellen Ordningsprinsipp.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet AD.SEKNOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SekundaertOrdningsprinsippId {
            get {
                return this.SekundaertOrdningsprinsippIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SekundaertOrdningsprinsippIdField, value) != true)) {
                    this.SekundaertOrdningsprinsippIdField = value;
                    this.RaisePropertyChanged("SekundaertOrdningsprinsippId");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom det hverken skal kunne legges inn nye saker eller nye dokumenter i arkivdelen.
        /// Attributtinformasjon skal imidlertid ennå kunne korrigeres.
        /// Tilsvarer NOARK4 feltet AD.SPEFDOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SperretForNyeDokumenter {
            get {
                return this.SperretForNyeDokumenterField;
            }
            set {
                if ((this.SperretForNyeDokumenterField.Equals(value) != true)) {
                    this.SperretForNyeDokumenterField = value;
                    this.RaisePropertyChanged("SperretForNyeDokumenter");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom det ikke skal kunne opprettes nye saker i arkivdelen. Nye dokumenter i eksisterende saker skal imidlertid fortsatt kunne legges inn.
        /// Denne muligheten benyttes spesielt i de tilfeller hvor virksomheten skal avslutte bruken av sin gamle arkivnøkkel for å ta i bruk en ny,
        /// men likevel ønsker å fullføre arbeidet med pågående saker uten å måtte flytte disse til en ny arkivdel.
        /// Tilsvarer NOARK4 feltet AD.SPEFSAK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SperretForNyeSaker {
            get {
                return this.SperretForNyeSakerField;
            }
            set {
                if ((this.SperretForNyeSakerField.Equals(value) != true)) {
                    this.SperretForNyeSakerField = value;
                    this.RaisePropertyChanged("SperretForNyeSaker");
                }
            }
        }
        
        /// <summary>
        /// - Arkivdelens standard nummerserie.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver standard nummerserie.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Nummerserie StandardNummerserie {
            get {
                return this.StandardNummerserieField;
            }
            set {
                if ((object.ReferenceEquals(this.StandardNummerserieField, value) != true)) {
                    this.StandardNummerserieField = value;
                    this.RaisePropertyChanged("StandardNummerserie");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til den nummerserie som skal benyttes for sekvensnummer til saker og journalposter tilhørende denne arkivdelen.
        /// Standardverdi fra Arkiv.
        /// Oppslag mot tabellen Nummerserie.
        /// Tilsvarer NOARK4 feltet AD.NUMSER.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StandardNummerserieId {
            get {
                return this.StandardNummerserieIdField;
            }
            set {
                if ((this.StandardNummerserieIdField.Equals(value) != true)) {
                    this.StandardNummerserieIdField = value;
                    this.RaisePropertyChanged("StandardNummerserieId");
                }
            }
        }
        
        /// <summary>
        /// - Dato for det eldste materialet som inngår i arkivdelen.
        /// Tilsvarer NOARK4 feltet AD.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Startdato {
            get {
                return this.StartdatoField;
            }
            set {
                if ((this.StartdatoField.Equals(value) != true)) {
                    this.StartdatoField = value;
                    this.RaisePropertyChanged("Startdato");
                }
            }
        }
        
        /// <summary>
        /// -
        /// Valgt dersom sekundært ordningsprinsipp kan velges fritt i denne arkivdelen,
        /// uavhengig av den primære ordningsverdien, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet AD.FRISEK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ValgfriSekundaertOrdningsprinsipp {
            get {
                return this.ValgfriSekundaertOrdningsprinsippField;
            }
            set {
                if ((this.ValgfriSekundaertOrdningsprinsippField.Equals(value) != true)) {
                    this.ValgfriSekundaertOrdningsprinsippField = value;
                    this.RaisePropertyChanged("ValgfriSekundaertOrdningsprinsipp");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver de arkiv virksomheten har.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Arkiv", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Arkiv : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ArkivbaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivskaperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FraDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp StandardArkivnoekkelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StandardArkivnoekkelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Nummerserie StandardNummerserieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StandardNummerserieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TilDatoField;
        
        /// <summary>
        /// Unik ID som skiller virksomhetens arkivbase fra alle andre arkivbaser.
        /// Hvis arkivet er overført fra en annen virksomhet, f. eks. ved omorganisering, må attributtet oppdateres.
        /// Ved avlevering til arkivdepot må attributtet være utfylt med en ID som er avtalt med mottakeren
        /// for å skille denne basen fra alle andre baser i depotet.
        /// Tilsvarer NOARK4 feltet AR.ABASEID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Arkivbase {
            get {
                return this.ArkivbaseField;
            }
            set {
                if ((this.ArkivbaseField.Equals(value) != true)) {
                    this.ArkivbaseField = value;
                    this.RaisePropertyChanged("Arkivbase");
                }
            }
        }
        
        /// <summary>
        /// Arkivskaper.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet AR.SKAPER.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Arkivskaper {
            get {
                return this.ArkivskaperField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivskaperField, value) != true)) {
                    this.ArkivskaperField = value;
                    this.RaisePropertyChanged("Arkivskaper");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet AR.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Dato for det eldste materialet som inngår i arkivet.
        /// Tilsvarer NOARK4 feltet AR.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FraDato {
            get {
                return this.FraDatoField;
            }
            set {
                if ((this.FraDatoField.Equals(value) != true)) {
                    this.FraDatoField = value;
                    this.RaisePropertyChanged("FraDato");
                }
            }
        }
        
        /// <summary>
        /// Kortkode for arkiv.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet AR.ARKIV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Eventuell merknad knyttet til arkivet.
        /// Feltlengde: 2000 tegn.
        /// Tilsvarer NOARK4 feltet AR.MERKNAD
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Arkivets standard arkivnøkkel.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver standard ordningsprinsipp.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp StandardArkivnoekkel {
            get {
                return this.StandardArkivnoekkelField;
            }
            set {
                if ((object.ReferenceEquals(this.StandardArkivnoekkelField, value) != true)) {
                    this.StandardArkivnoekkelField = value;
                    this.RaisePropertyChanged("StandardArkivnoekkel");
                }
            }
        }
        
        /// <summary>
        /// Referanse til det ordningsprinsipp som skal benyttes som standardverdi for attributtet Primær arkivnøkkel
        /// i de arkivdeler som inngår i arkivet.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Ordningsprinsipp.
        /// Tilsvarer NOARK4 feltet AR.PRIMNOK
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StandardArkivnoekkelId {
            get {
                return this.StandardArkivnoekkelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StandardArkivnoekkelIdField, value) != true)) {
                    this.StandardArkivnoekkelIdField = value;
                    this.RaisePropertyChanged("StandardArkivnoekkelId");
                }
            }
        }
        
        /// <summary>
        /// Arkivets standard nummerserie.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver standard nummerserie.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Nummerserie StandardNummerserie {
            get {
                return this.StandardNummerserieField;
            }
            set {
                if ((object.ReferenceEquals(this.StandardNummerserieField, value) != true)) {
                    this.StandardNummerserieField = value;
                    this.RaisePropertyChanged("StandardNummerserie");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den nummerserie som normalt skal benyttes for sekvensnummer til saker og journalposter
        /// tilhørende arkivdeler som inngår i dette arkivet.
        /// Oppslag mot tabellen Nummerserie.
        /// Tilsvarer NOARK4 feltet AR.NUMSER
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StandardNummerserieId {
            get {
                return this.StandardNummerserieIdField;
            }
            set {
                if ((this.StandardNummerserieIdField.Equals(value) != true)) {
                    this.StandardNummerserieIdField = value;
                    this.RaisePropertyChanged("StandardNummerserieId");
                }
            }
        }
        
        /// <summary>
        /// Dato som angir når arkivet ble nedlagt.
        /// Når en dato er angitt her, skal det ikke kunne opprettes nye arkivdeler under dette arkivet.
        /// Ved registrering skal datoen overføres til alle arkivdeler i dette arkivet som ikke allerede har Til dato utfylt.
        /// Tilsvarer NOARK4 feltet AR.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TilDato {
            get {
                return this.TilDatoField;
            }
            set {
                if ((this.TilDatoField.Equals(value) != true)) {
                    this.TilDatoField = value;
                    this.RaisePropertyChanged("TilDato");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver de ordningsprinsipper (emnebaserte og objektbaserte) som virksomheten
    /// benytter som arkivnøkler og/eller til andre formål.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ordningsprinsipp", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Ordningsprinsipp : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AutomatiskInnleggingAvEgendefinerteVerdierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EgendefinerteVerdierTillattField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FraDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KanBenyttesVedKlasseringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LedetekstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaksimalLengdeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipptype OrdningsprinsipptypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrdningsprinsipptypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> OrdningsverdierMaaBeskrivesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp SekundaertOrdningsprinsippField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SekundaertOrdningsprinsippIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SekundarInndelingTillattField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TilDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        /// <summary>
        /// Valgt dersom det skal være mulig automatisk å legges inn nye ordningsverdier knyttet til dette ordningsprinsippet som en
        /// følge av at brukeren registrerer en ordningsverdi (som klassifisering eller på journalpost) som ikke finnes i settet av ordningsverdier
        /// som tilhører ordningsprinsippet, ikke valgt ellers.
        /// Det skal alltid gis et kontrollspørsmål til brukeren før en ny ordningsverdi kan registreres på denne måten.
        /// Tilsvarer NOARK4 feltet OP.EVAUTO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AutomatiskInnleggingAvEgendefinerteVerdier {
            get {
                return this.AutomatiskInnleggingAvEgendefinerteVerdierField;
            }
            set {
                if ((this.AutomatiskInnleggingAvEgendefinerteVerdierField.Equals(value) != true)) {
                    this.AutomatiskInnleggingAvEgendefinerteVerdierField = value;
                    this.RaisePropertyChanged("AutomatiskInnleggingAvEgendefinerteVerdier");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst for ordningsprinsippet.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet OP.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom det skal være tillatt å angi ordningsverdier (som klassifisering eller på journalpost) som ikke
        /// finnes i settet av ordningsverdier som tilhører ordningsprinsippet, ikke valgt ellers.
        /// Benyttes f.eks for søkernavn mv hvor det er uhensiktsmessig å kreve at alle søkerne skal være registrert på forhånd.
        /// Tilsvarer NOARK4 feltet OP.EVOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EgendefinerteVerdierTillatt {
            get {
                return this.EgendefinerteVerdierTillattField;
            }
            set {
                if ((this.EgendefinerteVerdierTillattField.Equals(value) != true)) {
                    this.EgendefinerteVerdierTillattField = value;
                    this.RaisePropertyChanged("EgendefinerteVerdierTillatt");
                }
            }
        }
        
        /// <summary>
        /// Den dato hvor dette ordningsprinsippet tas i bruk.
        /// Tilsvarer NOARK4 feltet OP.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FraDato {
            get {
                return this.FraDatoField;
            }
            set {
                if ((this.FraDatoField.Equals(value) != true)) {
                    this.FraDatoField = value;
                    this.RaisePropertyChanged("FraDato");
                }
            }
        }
        
        /// <summary>
        /// Kode for ordningsprinsipp.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet OP.ORDNPRI.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom dette ordningsprinsippet skal kunne benyttes ved klassering av saker, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet OP.KLFLAGG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KanBenyttesVedKlassering {
            get {
                return this.KanBenyttesVedKlasseringField;
            }
            set {
                if ((this.KanBenyttesVedKlasseringField.Equals(value) != true)) {
                    this.KanBenyttesVedKlasseringField = value;
                    this.RaisePropertyChanged("KanBenyttesVedKlassering");
                }
            }
        }
        
        /// <summary>
        /// Den ledetekst som skal benyttes når ordningsverdier tilhørende dette ordningsprinsippet skal registreres eller presenteres.
        /// Feltlengde: 20 tegn.
        /// Tilsvarer NOARK4 feltet OP.LTEKST.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ledetekst {
            get {
                return this.LedetekstField;
            }
            set {
                if ((object.ReferenceEquals(this.LedetekstField, value) != true)) {
                    this.LedetekstField = value;
                    this.RaisePropertyChanged("Ledetekst");
                }
            }
        }
        
        /// <summary>
        /// Den maksimale lengde som skal tillates for ordningsverdier som hører inn under dette ordningsprinsipp. Lengden må være mindre
        /// eller lik 70, den maksimale lengden for noen ordningsverdi. Lengde av felt i skjermbilder mv bør automatisk tilpasses til denne lengden.
        /// Tilsvarer NOARK4 feltet OP.MAKSLEN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaksimalLengde {
            get {
                return this.MaksimalLengdeField;
            }
            set {
                if ((this.MaksimalLengdeField.Equals(value) != true)) {
                    this.MaksimalLengdeField = value;
                    this.RaisePropertyChanged("MaksimalLengde");
                }
            }
        }
        
        /// <summary>
        /// Eventuell merknad knyttet til ordningsprinsippet.
        /// Tilsvarer NOARK4 feltet OP.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Type ordningsprinsipp.
        /// </summary>
        /// <value>Inneholder attributter som beskriver type ordningsprinsipp ordningsprinsippet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipptype Ordningsprinsipptype {
            get {
                return this.OrdningsprinsipptypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdningsprinsipptypeField, value) != true)) {
                    this.OrdningsprinsipptypeField = value;
                    this.RaisePropertyChanged("Ordningsprinsipptype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hvilken type ordningsprinsipp ordningsprinsippet tilhører.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Ordningsprinsipptype.
        /// Tilsvarer NOARK4 feltet OP.TYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrdningsprinsipptypeId {
            get {
                return this.OrdningsprinsipptypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdningsprinsipptypeIdField, value) != true)) {
                    this.OrdningsprinsipptypeIdField = value;
                    this.RaisePropertyChanged("OrdningsprinsipptypeId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom det kreves en beskrivende tekst (gruppetekst) til ordningsverdier knyttet
        /// til dette ordningsprinsippet, ikke valgt dersom denne teksten kan utelates.
        /// Tilsvarer NOARK4 feltet OP.OVBESK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> OrdningsverdierMaaBeskrives {
            get {
                return this.OrdningsverdierMaaBeskrivesField;
            }
            set {
                if ((this.OrdningsverdierMaaBeskrivesField.Equals(value) != true)) {
                    this.OrdningsverdierMaaBeskrivesField = value;
                    this.RaisePropertyChanged("OrdningsverdierMaaBeskrives");
                }
            }
        }
        
        /// <summary>
        /// Sekundært ordningsprinsipp.
        /// </summary>
        /// <value>Inneholder attributter som beskriver sekundært ordningsprinsipp.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp SekundaertOrdningsprinsipp {
            get {
                return this.SekundaertOrdningsprinsippField;
            }
            set {
                if ((object.ReferenceEquals(this.SekundaertOrdningsprinsippField, value) != true)) {
                    this.SekundaertOrdningsprinsippField = value;
                    this.RaisePropertyChanged("SekundaertOrdningsprinsipp");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til et ordningsprinsipp som om ønskelig kan benyttes til videre inndeling under de ordningsverdier hvor det ikke er angitt
        /// et eget sekundært ordningsprinsipp. Skal bare kunne angis når attributtet Sekundær inndeling tillatt har verdien 1.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Ordningsprinsipp.
        /// Tilsvarer NOARK4 feltet OP.SEKNOK
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SekundaertOrdningsprinsippId {
            get {
                return this.SekundaertOrdningsprinsippIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SekundaertOrdningsprinsippIdField, value) != true)) {
                    this.SekundaertOrdningsprinsippIdField = value;
                    this.RaisePropertyChanged("SekundaertOrdningsprinsippId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom det skal være tillatt å benytte en sekundær inndeling for alle ordningsverdier som tilhører dette
        /// ordningsprinsippet, ikke valgt ellers. Skal ikke kunne endres etter at det er registrert saker med klassering etter denne regelen.
        /// Dersom sekundær inndeling kun er tillatt på enkelte av ordningsverdiene tilknyttet ordningsprinsippet kan dette angis på den enkelte ordningsverdi.
        /// Tilsvarer NOARK4 feltet OP.SEKFLAGG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SekundarInndelingTillatt {
            get {
                return this.SekundarInndelingTillattField;
            }
            set {
                if ((this.SekundarInndelingTillattField.Equals(value) != true)) {
                    this.SekundarInndelingTillattField = value;
                    this.RaisePropertyChanged("SekundarInndelingTillatt");
                }
            }
        }
        
        /// <summary>
        /// Den dato hvor bruken av dette ordningsprinsippet skal opphøre. Når en dato er angitt her, skal det ikke kunne opprettes nye
        /// arkivdeler eller saker hvor dette ordningsprinsippet benyttes.
        /// Tilsvarer NOARK4 feltet OP.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TilDato {
            get {
                return this.TilDatoField;
            }
            set {
                if ((this.TilDatoField.Equals(value) != true)) {
                    this.TilDatoField = value;
                    this.RaisePropertyChanged("TilDato");
                }
            }
        }
        
        /// <summary>
        /// Tilgangkode.
        /// </summary>
        /// <value>Inneholder attributter som beskriver tilgangskoden.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Dersom alle ordningsverdier tilknyttet dette ordningsprinsippet (klientnavn) skal unntas offentlighetens innsyn, angis tilgangskoden her.
        /// Dette skal både hindre brukere som ikke er autorisert for tilgangskoden i å se verdiene i tabellen Ordningsverdi, og hindre at verdien blir
        /// brukt på saker uten tilgangskode. Koden skal automatisk overføres til alle ordningsverdier som inngår i ordningsprinsippet.
        /// Oppslag mot tabellen Tilgangskode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet OP.TGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder detaljer om typer av ordningsprinsipper.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ordningsprinsipptype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Ordningsprinsipptype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer  NOARK4 feltet OT.BETEGN
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet OT.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om de tilgangskoder som skal kunne benyttes.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tilgangskode", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Tilgangskode : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FraDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SerieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SkjermAvsenderMottakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SkjermTittelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TilDatoField;
        
        /// <summary>
        /// Description - Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet TK.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Date valid from - Den dato tilgangskoden ble tatt i bruk.
        /// Tilsvarer NOARK4 feltet TK.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FraDato {
            get {
                return this.FraDatoField;
            }
            set {
                if ((this.FraDatoField.Equals(value) != true)) {
                    this.FraDatoField = value;
                    this.RaisePropertyChanged("FraDato");
                }
            }
        }
        
        /// <summary>
        /// Unique ID (Maximum 2 letters)- Tilgangskode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet TK.TGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// - Rang innen serien. Dersom gruppering i serier benyttes, skal autorisasjon
        /// for en tilgangskode i en serie implisitt innebærer autorisasjon for andre tilgangskoder
        /// med lavere (men ikke samme) rang i samme serie.
        /// Tilsvarer NOARK4 feltet TK.RANG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rang {
            get {
                return this.RangField;
            }
            set {
                if ((this.RangField.Equals(value) != true)) {
                    this.RangField = value;
                    this.RaisePropertyChanged("Rang");
                }
            }
        }
        
        /// <summary>
        /// - Benyttes dersom tilgangskodene skal grupperes i serier (f.eks beskyttelsesinstruksen
        /// og sikkerhetsinstruksen) for innbyrdes rangering i serien.
        /// Tilsvarer NOARK4 feltet TK.SERIE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Serie {
            get {
                return this.SerieField;
            }
            set {
                if ((this.SerieField.Equals(value) != true)) {
                    this.SerieField = value;
                    this.RaisePropertyChanged("Serie");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the sender/recipient should be hidden by default - Valgt dersom avsender/mottaker skal automatisk skjermes ved opprettelse når tilhørende journalpost
        /// er knyttet til denne tilgangskoden, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SkjermAvsenderMottaker {
            get {
                return this.SkjermAvsenderMottakerField;
            }
            set {
                if ((this.SkjermAvsenderMottakerField.Equals(value) != true)) {
                    this.SkjermAvsenderMottakerField = value;
                    this.RaisePropertyChanged("SkjermAvsenderMottaker");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the title should be automatically hidden by default- Valgt dersom tittel automatisk skal skjermes ved opprettelse av ny sak eller journalpost og objektet er
        /// er knyttet til denne tilgangskoden, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SkjermTittel {
            get {
                return this.SkjermTittelField;
            }
            set {
                if ((this.SkjermTittelField.Equals(value) != true)) {
                    this.SkjermTittelField = value;
                    this.RaisePropertyChanged("SkjermTittel");
                }
            }
        }
        
        /// <summary>
        /// Date valid to - Den dato bruken av tilgangskoden opphørte. Kun tilgangskoder hvor dette attributtet
        /// er tomt, skal kunne benyttes på nye dokumenter mv.
        /// Tilsvarer NOARK4 feltet TK.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TilDato {
            get {
                return this.TilDatoField;
            }
            set {
                if ((this.TilDatoField.Equals(value) != true)) {
                    this.TilDatoField = value;
                    this.RaisePropertyChanged("TilDato");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver de nummerserier som benyttes ved automatisk nummerering av ulike elementer.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Nummerserie", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Nummerserie : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AarstallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AutomatiskAarsskifteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Sekvensnummer1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Sekvensnummer2Field;
        
        /// <summary>
        /// Benyttes når nummereringen skal være fortløpende innenfor et år, slik det er vanlig for utvalgssaker.
        /// Når feltet er tomt (NULL), nummereres fortløpende uavhengig av år.
        /// Tilsvarer NOARK4 feltet NU.AAR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Aarstall {
            get {
                return this.AarstallField;
            }
            set {
                if ((this.AarstallField.Equals(value) != true)) {
                    this.AarstallField = value;
                    this.RaisePropertyChanged("Aarstall");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom ny nummerserie automatisk skal initialiseres ved årsskifte, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet NU.AARAUTO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AutomatiskAarsskifte {
            get {
                return this.AutomatiskAarsskifteField;
            }
            set {
                if ((this.AutomatiskAarsskifteField.Equals(value) != true)) {
                    this.AutomatiskAarsskifteField = value;
                    this.RaisePropertyChanged("AutomatiskAarsskifte");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet NU.BETEGN
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse for nummerserien.
        /// Tilsvarer NOARK4 feltet NU.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Sist benyttede verdi av sekvensnummer 1. For saker i journalen benyttes dette til saksnummeret.
        /// Tilsvarer NOARK4 feltet NU.SEKNR1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sekvensnummer1 {
            get {
                return this.Sekvensnummer1Field;
            }
            set {
                if ((this.Sekvensnummer1Field.Equals(value) != true)) {
                    this.Sekvensnummer1Field = value;
                    this.RaisePropertyChanged("Sekvensnummer1");
                }
            }
        }
        
        /// <summary>
        /// Sist benyttede verdi av sekvensnummer 2. For saker i journalen benyttes dette til løpenummeret.
        /// Tilsvarer NOARK4 feltet NU.SEKNR2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sekvensnummer2 {
            get {
                return this.Sekvensnummer2Field;
            }
            set {
                if ((this.Sekvensnummer2Field.Equals(value) != true)) {
                    this.Sekvensnummer2Field = value;
                    this.RaisePropertyChanged("Sekvensnummer2");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver de arkivperioder virksomheten benytter til å dele inn sitt arkivmateriale i.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Arkivperiode", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Arkivperiode : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkiv ArkivField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkivstatus ArkivstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivstatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FradatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TildatoField;
        
        /// <summary>
        /// Arkivet arkivperioden er tilknyttet.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver arkivet arkivperioden er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkiv Arkiv {
            get {
                return this.ArkivField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivField, value) != true)) {
                    this.ArkivField = value;
                    this.RaisePropertyChanged("Arkiv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til det arkiv som arkivperioden er knyttet til.
        /// Oppslag mot tabellen Arkiv.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet AP.ARKIV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivId {
            get {
                return this.ArkivIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivIdField, value) != true)) {
                    this.ArkivIdField = value;
                    this.RaisePropertyChanged("ArkivId");
                }
            }
        }
        
        /// <summary>
        /// Arkivperiodens arkivstatus.
        /// </summary>
        /// <value>Inneholder attributter som beskriver hvilken arkivmessig tilstand en sak er i.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkivstatus Arkivstatus {
            get {
                return this.ArkivstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivstatusField, value) != true)) {
                    this.ArkivstatusField = value;
                    this.RaisePropertyChanged("Arkivstatus");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hvilken status perioden har.
        /// Oppslag mot tabellen Arkivstatus.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet AP.STATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivstatusId {
            get {
                return this.ArkivstatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivstatusIdField, value) != true)) {
                    this.ArkivstatusIdField = value;
                    this.RaisePropertyChanged("ArkivstatusId");
                }
            }
        }
        
        /// <summary>
        /// Dato som perioden ble påbegynt.
        /// Tilsvarer NOARK4 feltet AP.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Fradato {
            get {
                return this.FradatoField;
            }
            set {
                if ((this.FradatoField.Equals(value) != true)) {
                    this.FradatoField = value;
                    this.RaisePropertyChanged("Fradato");
                }
            }
        }
        
        /// <summary>
        /// Unikt nummer som identifiserer perioden.
        /// Tilsvarer NOARK4 feltet AP.PERIODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Eventuell merknad knyttet til arkivperioden.
        /// Feltlengde: 2000 tegn.
        /// Tilsvarer NOARK4 feltet AP.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Dato som perioden ble avsluttet.
        /// Tilsvarer NOARK4 feltet AP.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Tildato {
            get {
                return this.TildatoField;
            }
            set {
                if ((this.TildatoField.Equals(value) != true)) {
                    this.TildatoField = value;
                    this.RaisePropertyChanged("Tildato");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver hvilken status en periode eller en arkivdel har.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Arkivstatus", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Arkivstatus : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LukketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SperretForNyeDokumenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SperretForNyeSakerField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet AS.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet AS.STATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom det ikke kunne gjøres noen endringer i arkivdelen.
        /// Tilsvarer NOARK4 feltet AS.LUKKET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Lukket {
            get {
                return this.LukketField;
            }
            set {
                if ((this.LukketField.Equals(value) != true)) {
                    this.LukketField = value;
                    this.RaisePropertyChanged("Lukket");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom det hverken skal kunne legges inn nye saker eller nye dokumenter i arkivdelen.
        /// Tilsvarer NOARK4 feltet AS.SPEFDOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SperretForNyeDokumenter {
            get {
                return this.SperretForNyeDokumenterField;
            }
            set {
                if ((this.SperretForNyeDokumenterField.Equals(value) != true)) {
                    this.SperretForNyeDokumenterField = value;
                    this.RaisePropertyChanged("SperretForNyeDokumenter");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom det ikke skal kunne opprettes nye saker i arkivdelen.
        /// Tilsvarer NOARK4 feltet AS.SPEFSAK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SperretForNyeSaker {
            get {
                return this.SperretForNyeSakerField;
            }
            set {
                if ((this.SperretForNyeSakerField.Equals(value) != true)) {
                    this.SperretForNyeSakerField = value;
                    this.RaisePropertyChanged("SperretForNyeSaker");
                }
            }
        }
    }
    
    /// <summary>
    /// Kode som angir hvilket prinsipp som skal benyttes ved bortsetting.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bortsettingskode", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Bortsettingskode : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet BK.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet BK.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver de ordningsverdier (emnekoder og objektkoder) som inngår i de enkelte ordningsprinsipp.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ordningsverdi", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Ordningsverdi : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkivdel ArkivdelForDenneOrdningsverdiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivdelForDenneOrdningsverdiIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BevaringstidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KanBenyttesVedRegistreringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Kassasjonskode KassasjonskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KassasjonskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KassasjonsregelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrdnVerdiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp OrdningsprinsippField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrdningsprinsippIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Ordningsverdi OrdningsverdiFarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrdningsverdiFarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp SekundaerInndelingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SekundaerInndelingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SekundaerInndelingTillattField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        /// <summary>
        /// Arkivdel for denne ordningsverdi.
        /// </summary>
        /// <value>Inneholder attributter som beskriver arkivdel for denne ordningsverdi.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkivdel ArkivdelForDenneOrdningsverdi {
            get {
                return this.ArkivdelForDenneOrdningsverdiField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivdelForDenneOrdningsverdiField, value) != true)) {
                    this.ArkivdelForDenneOrdningsverdiField = value;
                    this.RaisePropertyChanged("ArkivdelForDenneOrdningsverdi");
                }
            }
        }
        
        /// <summary>
        /// Referanse til arkivdel for denne ordningsverdi.
        /// For noen ordningsverdier kan det enkelte ganger være ønskelig å opprette egne arkivdeler hvor en har en sekundær inndeling etter et annet
        /// ordningsprinsipp, jf kapittel 7.2.2. F.eks kan en ha en ordningsverdi for personalmapper (221 i den statlige arkivnøkkelen) med de ansattes
        /// navn el. som sekundær inndeling. Dersom en da ønsker å håndtere personalmappene som en egen arkivdel, gjerne med annet bortsettingsprinsipp,
        /// kan kortkoden til denne arkivdelen angis her.
        /// I et slikt tilfelle skal bruk av koden 221 som primærnøkkel automatisk innebære at sakens arkivdel endres til "Personalarkiv".
        /// Primær arkivnøkkel for Arkivdel for denne ordningsverdi må være det ordningsprinsipp som ordningsverdien inngår i.
        /// Oppslag mot tabellen Arkivdel.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet OV.ARKDEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivdelForDenneOrdningsverdiId {
            get {
                return this.ArkivdelForDenneOrdningsverdiIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivdelForDenneOrdningsverdiIdField, value) != true)) {
                    this.ArkivdelForDenneOrdningsverdiIdField = value;
                    this.RaisePropertyChanged("ArkivdelForDenneOrdningsverdiId");
                }
            }
        }
        
        /// <summary>
        /// Beskrivelse i klartekst av det som skal arkiveres under denne ordningsverdien.
        /// Må ha innhold dersom det på ordningsprinsippet er angitt at ordningsverdier må beskrives.
        /// Tilsvarer NOARK4 feltet OV.BESKR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Beskrivelse {
            get {
                return this.BeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BeskrivelseField, value) != true)) {
                    this.BeskrivelseField = value;
                    this.RaisePropertyChanged("Beskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Standardverdi for Bevaringstid (i antall år) for saker med denne ordningsverdien som primærkode.
        /// Tilsvarer NOARK4 feltet OV.BEVTID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Bevaringstid {
            get {
                return this.BevaringstidField;
            }
            set {
                if ((this.BevaringstidField.Equals(value) != true)) {
                    this.BevaringstidField = value;
                    this.RaisePropertyChanged("Bevaringstid");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom denne ordningsverdien skal tillates benyttet ved registrering, ikke valgt dersom den er videre inndelt
        /// og kun verdier på laveste nivå tillates benyttet, eller dersom ordningsverdien utgår men er benyttet på eksisterende saker slik at den må bevares.
        /// Tilsvarer NOARK4 feltet OV.REGFLAGG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KanBenyttesVedRegistrering {
            get {
                return this.KanBenyttesVedRegistreringField;
            }
            set {
                if ((this.KanBenyttesVedRegistreringField.Equals(value) != true)) {
                    this.KanBenyttesVedRegistreringField = value;
                    this.RaisePropertyChanged("KanBenyttesVedRegistrering");
                }
            }
        }
        
        /// <summary>
        /// Standard kassasjonskode.
        /// </summary>
        /// <value>Inneholder attributter som beskriver standard kassasjonskode for denne ordningsverdi.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Kassasjonskode Kassasjonskode {
            get {
                return this.KassasjonskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KassasjonskodeField, value) != true)) {
                    this.KassasjonskodeField = value;
                    this.RaisePropertyChanged("Kassasjonskode");
                }
            }
        }
        
        /// <summary>
        /// Standardverdi for Kassasjonskode for saker med denne ordningsverdien. Oppslag mot tabellen Kassasjonskode. Se denne for beskrivelse av standard koder.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet OV.KASKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KassasjonskodeId {
            get {
                return this.KassasjonskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.KassasjonskodeIdField, value) != true)) {
                    this.KassasjonskodeIdField = value;
                    this.RaisePropertyChanged("KassasjonskodeId");
                }
            }
        }
        
        /// <summary>
        /// Beskrivelse av reglene som skal følges ved kassasjon.
        /// Feltlengde: 1000 tegn.
        /// Tilsvarer NOARK4 feltet OV.KASREGEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kassasjonsregel {
            get {
                return this.KassasjonsregelField;
            }
            set {
                if ((object.ReferenceEquals(this.KassasjonsregelField, value) != true)) {
                    this.KassasjonsregelField = value;
                    this.RaisePropertyChanged("Kassasjonsregel");
                }
            }
        }
        
        /// <summary>
        /// Ordningsverdi i klartekst.
        /// Unik verdi innenfor ordningsprinsippet.
        /// Tilsvarer NOARK4 feltet OV.ORDNVER.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrdnVerdi {
            get {
                return this.OrdnVerdiField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdnVerdiField, value) != true)) {
                    this.OrdnVerdiField = value;
                    this.RaisePropertyChanged("OrdnVerdi");
                }
            }
        }
        
        /// <summary>
        /// Ordningsprinsippet ordningsverdien tilhører.
        /// </summary>
        /// <value>Inneholder attributter som beskriver ordningsprinsippet ordningsverdien tilhører.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp Ordningsprinsipp {
            get {
                return this.OrdningsprinsippField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdningsprinsippField, value) != true)) {
                    this.OrdningsprinsippField = value;
                    this.RaisePropertyChanged("Ordningsprinsipp");
                }
            }
        }
        
        /// <summary>
        /// Referanse til det ordningsprinsipp ordningsverdien inngår i. Skal ikke kunne endres.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet OV.ORDNPRI.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrdningsprinsippId {
            get {
                return this.OrdningsprinsippIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdningsprinsippIdField, value) != true)) {
                    this.OrdningsprinsippIdField = value;
                    this.RaisePropertyChanged("OrdningsprinsippId");
                }
            }
        }
        
        /// <summary>
        /// Ordningsverdien som denne ordningsverdien er underlagt.
        /// </summary>
        /// <value>Inneholder attributter som beskriver ordningsverdien som denne ordningsverdien er underlagt.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Ordningsverdi OrdningsverdiFar {
            get {
                return this.OrdningsverdiFarField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdningsverdiFarField, value) != true)) {
                    this.OrdningsverdiFarField = value;
                    this.RaisePropertyChanged("OrdningsverdiFar");
                }
            }
        }
        
        /// <summary>
        /// Referanse til ordningsverdien som denne ordningsverdien er underlagt.
        /// Dersom dette ordningsprinsippet er hierarkisk organisert slik som f.eks statens arkivnøkkel,
        /// angis her ordningsverdien som denne koden ligger under.
        /// Tilsvarer NOARK4 feltet OV.FAR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrdningsverdiFarId {
            get {
                return this.OrdningsverdiFarIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdningsverdiFarIdField, value) != true)) {
                    this.OrdningsverdiFarIdField = value;
                    this.RaisePropertyChanged("OrdningsverdiFarId");
                }
            }
        }
        
        /// <summary>
        /// Sekundær inndeling.
        /// </summary>
        /// <value>Inneholder attributter som beskriver ordningsprinsippet for sekundær inndeling .</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp SekundaerInndeling {
            get {
                return this.SekundaerInndelingField;
            }
            set {
                if ((object.ReferenceEquals(this.SekundaerInndelingField, value) != true)) {
                    this.SekundaerInndelingField = value;
                    this.RaisePropertyChanged("SekundaerInndeling");
                }
            }
        }
        
        /// <summary>
        /// Referanse til sekundær inndeling.
        /// Det ordningsprinsipp som skal benyttes for videre inndeling under denne ordningsverdien.
        /// Oppslag mot tabellen Ordningsprinsipp.
        /// Tilsvarer NOARK4 feltet OV.SEKNOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SekundaerInndelingId {
            get {
                return this.SekundaerInndelingIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SekundaerInndelingIdField, value) != true)) {
                    this.SekundaerInndelingIdField = value;
                    this.RaisePropertyChanged("SekundaerInndelingId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom det skal være tillatt å benytte en sekundær inndeling under denne ordningsverdien, ikke valgt ellers.
        /// Skal ikke kunne endres etter at det er registrert saker med klassering etter denne regelen. Dersom sekundær inndeling er tillatt for hele
        /// ordningsprinsippet, skal verdien automatisk settes til valgt og ikke kunne endres for den enkelte ordningsverdi.
        /// Tilsvarer NOARK4 feltet OV.SEKFLAGG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SekundaerInndelingTillatt {
            get {
                return this.SekundaerInndelingTillattField;
            }
            set {
                if ((this.SekundaerInndelingTillattField.Equals(value) != true)) {
                    this.SekundaerInndelingTillattField = value;
                    this.RaisePropertyChanged("SekundaerInndelingTillatt");
                }
            }
        }
        
        /// <summary>
        /// Tilgangskode.
        /// </summary>
        /// <value>Inneholder attributter som beskriver tilgangskoden.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangskode.
        /// Dersom denne ordningsverdien (f.eks et klientnavn) skal unntas offentlighetens innsyn, angis tilgangskoden her.
        /// Dette skal både hindre brukere som ikke er autorisert for tilgangskoden i å se verdien i tabellen Ordningsverdi, og
        /// hindre at verdien blir brukt på saker uten tilgangskode.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Tilgangskode.
        /// Tilsvarer NOARK4 feltet OV_TGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder koder som angir hva som skal skje når angitt kassasjonstidspunkt er nådd.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Kassasjonskode", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Kassasjonskode : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 2 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet KK.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet KK.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver hvordan sakskartet til de forskjellige utvalg skal bygges, hvilke sakstyper som skal inngå og prinsipper for nummerering.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SakskartUtvalgssakstype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class SakskartUtvalgssakstype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AdministrativeVedtakIInnkallingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BehandlingshistorikkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatUtvalgssaksnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Nummerserie NummerserieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NummerserieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OverskriftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SaksprotokollField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentmal SaksprotokollmalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaksprotokollmalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SakstypeprefiksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SeparatProtokollForBehandlingOgVedtakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SkrivAlltidOverskriftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SkrivKunOverskriftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SorteringPaaSakskartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TekstdokumentIInnkallingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtskriftAvArkivsaksnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtskriftAvAvsenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtskriftAvDokumentdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtskriftAvDokumentinnholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtskriftAvSakOgDokumentnrFraArkivsakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtskriftAvUtvalgssaksnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtskriftAvUtvalgssakstittelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalg UtvalgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtvalgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype UtvalgssakstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtvalgssakstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VedleggIInnkallingField;
        
        /// <summary>
        /// Valgt dersom administrative vedtak skal ta med i møteinnkalling for denne sakstypen, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AdministrativeVedtakIInnkalling {
            get {
                return this.AdministrativeVedtakIInnkallingField;
            }
            set {
                if ((this.AdministrativeVedtakIInnkallingField.Equals(value) != true)) {
                    this.AdministrativeVedtakIInnkallingField = value;
                    this.RaisePropertyChanged("AdministrativeVedtakIInnkalling");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hva slags behandlingshistorikk som skal vises i møteprotokoll for denne sakstypen.
        /// Oppslag mot tabellen UtvProHist_G.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BehandlingshistorikkId {
            get {
                return this.BehandlingshistorikkIdField;
            }
            set {
                if ((this.BehandlingshistorikkIdField.Equals(value) != true)) {
                    this.BehandlingshistorikkIdField = value;
                    this.RaisePropertyChanged("BehandlingshistorikkId");
                }
            }
        }
        
        /// <summary>
        /// Format som skal benyttes ved utskrift av utvalgssaksnummeret.
        /// Feltlengde: 30 tegn.
        /// Følgende verdier tillates:
        /// åå angir årstall med to siffer,
        /// åååå årstall med fire siffer,
        /// # sekvensnummer uten ledende 0,
        /// mens et antall 0-er angir at sekvensnummeret skal skrives ut med et fast antall siffer med ledende 0.
        /// Alle andre tegn i formatstrengen skrives ut som de er.
        /// Tilsvarer NOARK4 feltet SK.NUMFORM.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatUtvalgssaksnr {
            get {
                return this.FormatUtvalgssaksnrField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatUtvalgssaksnrField, value) != true)) {
                    this.FormatUtvalgssaksnrField = value;
                    this.RaisePropertyChanged("FormatUtvalgssaksnr");
                }
            }
        }
        
        /// <summary>
        /// Nummerserien som skal benyttes for denne sakstypen i utvalget.
        /// </summary>
        /// <value>Inneholder informasjon om nummerserien som skal benyttes for denne sakstypen i utvalget.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Nummerserie Nummerserie {
            get {
                return this.NummerserieField;
            }
            set {
                if ((object.ReferenceEquals(this.NummerserieField, value) != true)) {
                    this.NummerserieField = value;
                    this.RaisePropertyChanged("Nummerserie");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den nummerserie som skal benyttes for denne sakstypen i utvalget.
        /// Tilsvarer NOARK4 feltet SK.NUMSER.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NummerserieId {
            get {
                return this.NummerserieIdField;
            }
            set {
                if ((this.NummerserieIdField.Equals(value) != true)) {
                    this.NummerserieIdField = value;
                    this.RaisePropertyChanged("NummerserieId");
                }
            }
        }
        
        /// <summary>
        /// Overskrift som skal benyttes ved utskrift av denne sakstypen på sakskartet.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet SK.TITTEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Overskrift {
            get {
                return this.OverskriftField;
            }
            set {
                if ((object.ReferenceEquals(this.OverskriftField, value) != true)) {
                    this.OverskriftField = value;
                    this.RaisePropertyChanged("Overskrift");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom det skal genereres saksprotokoll for denne sakstypen, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Saksprotokoll {
            get {
                return this.SaksprotokollField;
            }
            set {
                if ((this.SaksprotokollField.Equals(value) != true)) {
                    this.SaksprotokollField = value;
                    this.RaisePropertyChanged("Saksprotokoll");
                }
            }
        }
        
        /// <summary>
        /// Malen som eventuelt skal benyttes for saksprotokoll for denne sakstypen.
        /// </summary>
        /// <value> Inneholder informasjon om malen som eventuelt skal benyttes for saksprotokoll for denne sakstypen. </value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentmal Saksprotokollmal {
            get {
                return this.SaksprotokollmalField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksprotokollmalField, value) != true)) {
                    this.SaksprotokollmalField = value;
                    this.RaisePropertyChanged("Saksprotokollmal");
                }
            }
        }
        
        /// <summary>
        /// Referanse til malen som eventuelt skal benyttes for saksprotokoll for denne sakstypen.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SaksprotokollmalId {
            get {
                return this.SaksprotokollmalIdField;
            }
            set {
                if ((this.SaksprotokollmalIdField.Equals(value) != true)) {
                    this.SaksprotokollmalIdField = value;
                    this.RaisePropertyChanged("SaksprotokollmalId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom utvalgssaksnummeret skal innledes med sakstypeprefiks, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Sakstypeprefiks {
            get {
                return this.SakstypeprefiksField;
            }
            set {
                if ((this.SakstypeprefiksField.Equals(value) != true)) {
                    this.SakstypeprefiksField = value;
                    this.RaisePropertyChanged("Sakstypeprefiks");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom det skal føres separate protokolldokumenter for behandling og vedtak for denne sakstypen, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SeparatProtokollForBehandlingOgVedtak {
            get {
                return this.SeparatProtokollForBehandlingOgVedtakField;
            }
            set {
                if ((this.SeparatProtokollForBehandlingOgVedtakField.Equals(value) != true)) {
                    this.SeparatProtokollForBehandlingOgVedtakField = value;
                    this.RaisePropertyChanged("SeparatProtokollForBehandlingOgVedtak");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom overskriften skal skrives ut selv om det ikke er noen utvalgssaker med denne sakstypen, ikke valgt ellers.
        /// Benyttes til faste poster på sakskartet, f.eks Godkjenning av protokoll.
        /// Tilsvarer NOARK4 feltet SK.OVSKR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SkrivAlltidOverskrift {
            get {
                return this.SkrivAlltidOverskriftField;
            }
            set {
                if ((this.SkrivAlltidOverskriftField.Equals(value) != true)) {
                    this.SkrivAlltidOverskriftField = value;
                    this.RaisePropertyChanged("SkrivAlltidOverskrift");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom kun overskriften og ikke sakstitlene skal skrives ut for denne sakstypen, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet SK.KUNOVSKR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SkrivKunOverskrift {
            get {
                return this.SkrivKunOverskriftField;
            }
            set {
                if ((this.SkrivKunOverskriftField.Equals(value) != true)) {
                    this.SkrivKunOverskriftField = value;
                    this.RaisePropertyChanged("SkrivKunOverskrift");
                }
            }
        }
        
        /// <summary>
        /// Angir hvordan denne sakstypen skal sorteres på sakskartet.
        /// Tilsvarer NOARK4 feltet SK.SORT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SorteringPaaSakskart {
            get {
                return this.SorteringPaaSakskartField;
            }
            set {
                if ((this.SorteringPaaSakskartField.Equals(value) != true)) {
                    this.SorteringPaaSakskartField = value;
                    this.RaisePropertyChanged("SorteringPaaSakskart");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom tekstdokument skal tas med i møteinnkalling for denne sakstypen, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TekstdokumentIInnkalling {
            get {
                return this.TekstdokumentIInnkallingField;
            }
            set {
                if ((this.TekstdokumentIInnkallingField.Equals(value) != true)) {
                    this.TekstdokumentIInnkallingField = value;
                    this.RaisePropertyChanged("TekstdokumentIInnkalling");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom saksnummeret for arkivsaken skal skrives ut for denne sakstypen, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet SK.ARKSNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UtskriftAvArkivsaksnr {
            get {
                return this.UtskriftAvArkivsaksnrField;
            }
            set {
                if ((this.UtskriftAvArkivsaksnrField.Equals(value) != true)) {
                    this.UtskriftAvArkivsaksnrField = value;
                    this.RaisePropertyChanged("UtskriftAvArkivsaksnr");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom avsender fra den journalpost som er angitt på utvalgssaken, skal skrives ut, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet SK.AVS
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UtskriftAvAvsender {
            get {
                return this.UtskriftAvAvsenderField;
            }
            set {
                if ((this.UtskriftAvAvsenderField.Equals(value) != true)) {
                    this.UtskriftAvAvsenderField = value;
                    this.RaisePropertyChanged("UtskriftAvAvsender");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom feltet Dokumentdato fra den journalpost som er angitt på utvalgssaken, skal skrives ut, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet SK.DOKDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UtskriftAvDokumentdato {
            get {
                return this.UtskriftAvDokumentdatoField;
            }
            set {
                if ((this.UtskriftAvDokumentdatoField.Equals(value) != true)) {
                    this.UtskriftAvDokumentdatoField = value;
                    this.RaisePropertyChanged("UtskriftAvDokumentdato");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom feltet Dokumentinnhold fra den journalpost som er angitt på utvalgssaken skal skrives ut, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet SK.DOKIH.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UtskriftAvDokumentinnhold {
            get {
                return this.UtskriftAvDokumentinnholdField;
            }
            set {
                if ((this.UtskriftAvDokumentinnholdField.Equals(value) != true)) {
                    this.UtskriftAvDokumentinnholdField = value;
                    this.RaisePropertyChanged("UtskriftAvDokumentinnhold");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom saks- og dokumentnummeret fra den journalpost som er angitt på utvalgssaken skal skrives ut for denne sakstypen, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet SK.ARKSDNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UtskriftAvSakOgDokumentnrFraArkivsaken {
            get {
                return this.UtskriftAvSakOgDokumentnrFraArkivsakenField;
            }
            set {
                if ((this.UtskriftAvSakOgDokumentnrFraArkivsakenField.Equals(value) != true)) {
                    this.UtskriftAvSakOgDokumentnrFraArkivsakenField = value;
                    this.RaisePropertyChanged("UtskriftAvSakOgDokumentnrFraArkivsaken");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom utvalgssaksnummeret skal skrives ut for denne sakstypen, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet SK.UTVSNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UtskriftAvUtvalgssaksnr {
            get {
                return this.UtskriftAvUtvalgssaksnrField;
            }
            set {
                if ((this.UtskriftAvUtvalgssaksnrField.Equals(value) != true)) {
                    this.UtskriftAvUtvalgssaksnrField = value;
                    this.RaisePropertyChanged("UtskriftAvUtvalgssaksnr");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom utvalgssakstittelen skal skrives ut for denne sakstypen, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet SK.UTVSTIT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UtskriftAvUtvalgssakstittel {
            get {
                return this.UtskriftAvUtvalgssakstittelField;
            }
            set {
                if ((this.UtskriftAvUtvalgssakstittelField.Equals(value) != true)) {
                    this.UtskriftAvUtvalgssakstittelField = value;
                    this.RaisePropertyChanged("UtskriftAvUtvalgssakstittel");
                }
            }
        }
        
        /// <summary>
        /// Utvalget som sakskartet tilhører.
        /// </summary>
        /// <value>Inneholder informasjon om utvalget som sakskartet tilhører.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalg Utvalg {
            get {
                return this.UtvalgField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgField, value) != true)) {
                    this.UtvalgField = value;
                    this.RaisePropertyChanged("Utvalg");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalget som sakskartet tilhører.
        /// Tilsvarer NOARK4 feltet SK.UTVID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtvalgId {
            get {
                return this.UtvalgIdField;
            }
            set {
                if ((this.UtvalgIdField.Equals(value) != true)) {
                    this.UtvalgIdField = value;
                    this.RaisePropertyChanged("UtvalgId");
                }
            }
        }
        
        /// <summary>
        /// Utvalgssakstype som sakskartet tilhører.
        /// </summary>
        /// <value>Inneholder informasjon om utvalgssakstype som sakskartet tilhører.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype Utvalgssakstype {
            get {
                return this.UtvalgssakstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgssakstypeField, value) != true)) {
                    this.UtvalgssakstypeField = value;
                    this.RaisePropertyChanged("Utvalgssakstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalgssakstype sakskartet tilhører.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet SK.UTVID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtvalgssakstypeId {
            get {
                return this.UtvalgssakstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgssakstypeIdField, value) != true)) {
                    this.UtvalgssakstypeIdField = value;
                    this.RaisePropertyChanged("UtvalgssakstypeId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom eventuelle vedlegg skal tas med i møteinnkalling for denne sakstypen, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VedleggIInnkalling {
            get {
                return this.VedleggIInnkallingField;
            }
            set {
                if ((this.VedleggIInnkallingField.Equals(value) != true)) {
                    this.VedleggIInnkallingField = value;
                    this.RaisePropertyChanged("VedleggIInnkalling");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver dokumentmaler.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dokumentmal", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Dokumentmal : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativInndelingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdministrativInndelingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutotekstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatafilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentmaltype DokumentmaltypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DokumentmaltypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumenttypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiletternavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Lagringsformat LagringsformatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LagringsformatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Mappetype MappetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MappetypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OppstartsmakroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsmalField;
        
        /// <summary>
        /// Administrative inndeling som malen skal begrenses til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver den administrative inndeling som malen skal begrenses til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativInndeling {
            get {
                return this.AdministrativInndelingField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativInndelingField, value) != true)) {
                    this.AdministrativInndelingField = value;
                    this.RaisePropertyChanged("AdministrativInndeling");
                }
            }
        }
        
        /// <summary>
        /// Referanse til administrative inndeling som malen skal begrenses til.
        /// Oppslag mot tabellen Administrativ inndeling.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdministrativInndelingId {
            get {
                return this.AdministrativInndelingIdField;
            }
            set {
                if ((this.AdministrativInndelingIdField.Equals(value) != true)) {
                    this.AdministrativInndelingIdField = value;
                    this.RaisePropertyChanged("AdministrativInndelingId");
                }
            }
        }
        
        /// <summary>
        /// Navn på autotekst som skal settes inn ved opprettelse av nytt dokument basert på malen.
        /// Feltlengde: 25 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Autotekst {
            get {
                return this.AutotekstField;
            }
            set {
                if ((object.ReferenceEquals(this.AutotekstField, value) != true)) {
                    this.AutotekstField = value;
                    this.RaisePropertyChanged("Autotekst");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Obligatorisk.
        /// Feltlengde: 50 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Datafil.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Datafil {
            get {
                return this.DatafilField;
            }
            set {
                if ((object.ReferenceEquals(this.DatafilField, value) != true)) {
                    this.DatafilField = value;
                    this.RaisePropertyChanged("Datafil");
                }
            }
        }
        
        /// <summary>
        /// Dokumentmalkategorien denne dokumentmalen er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om hvilken dokumentmalkategorien denne dokumentmalen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentmaltype Dokumentmaltype {
            get {
                return this.DokumentmaltypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentmaltypeField, value) != true)) {
                    this.DokumentmaltypeField = value;
                    this.RaisePropertyChanged("Dokumentmaltype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til dokumentmalkategori.
        /// I tilfelle virksomheten opererer med mange maler, kan dette feltet brukes til å kategorisere malene.
        /// Oppslag mot tabellen Dokumentmaltype.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DokumentmaltypeId {
            get {
                return this.DokumentmaltypeIdField;
            }
            set {
                if ((this.DokumentmaltypeIdField.Equals(value) != true)) {
                    this.DokumentmaltypeIdField = value;
                    this.RaisePropertyChanged("DokumentmaltypeId");
                }
            }
        }
        
        /// <summary>
        /// Type tekstdokument eller rapport som dokumentmalen skal gjelde for.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DokumenttypeId {
            get {
                return this.DokumenttypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeIdField, value) != true)) {
                    this.DokumenttypeIdField = value;
                    this.RaisePropertyChanged("DokumenttypeId");
                }
            }
        }
        
        /// <summary>
        /// Filetternavn som skal gis filen.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filetternavn {
            get {
                return this.FiletternavnField;
            }
            set {
                if ((object.ReferenceEquals(this.FiletternavnField, value) != true)) {
                    this.FiletternavnField = value;
                    this.RaisePropertyChanged("Filetternavn");
                }
            }
        }
        
        /// <summary>
        /// Unik id for malen. Tildeles automatisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Hvilket lagringsformat som denne dokumentmalen er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om hvilket lagringsformat som denne dokumentmalen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Lagringsformat Lagringsformat {
            get {
                return this.LagringsformatField;
            }
            set {
                if ((object.ReferenceEquals(this.LagringsformatField, value) != true)) {
                    this.LagringsformatField = value;
                    this.RaisePropertyChanged("Lagringsformat");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hvilket lagringsformatet som dokumentmalen er knyttet til.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Lagringsformat.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LagringsformatId {
            get {
                return this.LagringsformatIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LagringsformatIdField, value) != true)) {
                    this.LagringsformatIdField = value;
                    this.RaisePropertyChanged("LagringsformatId");
                }
            }
        }
        
        /// <summary>
        /// Mappetypen som malen skal begrenses til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver mappetypen som malen skal begrenses til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Mappetype Mappetype {
            get {
                return this.MappetypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MappetypeField, value) != true)) {
                    this.MappetypeField = value;
                    this.RaisePropertyChanged("Mappetype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til mappetypen som malen skal begrenses til.
        /// Oppslag mot saksmappetype.
        /// Feltlengde: 2 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MappetypeId {
            get {
                return this.MappetypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MappetypeIdField, value) != true)) {
                    this.MappetypeIdField = value;
                    this.RaisePropertyChanged("MappetypeId");
                }
            }
        }
        
        /// <summary>
        /// Navn på makro som eventuelt skal utføres umiddelbart etter at dokumentet er ferdig flettet.
        /// Feltlengde: 25 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oppstartsmakro {
            get {
                return this.OppstartsmakroField;
            }
            set {
                if ((object.ReferenceEquals(this.OppstartsmakroField, value) != true)) {
                    this.OppstartsmakroField = value;
                    this.RaisePropertyChanged("Oppstartsmakro");
                }
            }
        }
        
        /// <summary>
        /// Personen som malen skal begrenses til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver personen som malen skal begrenses til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        /// <summary>
        /// Referanse til personen som malen skal begrenses til.
        /// Oppslag mot tabellen person.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        /// <summary>
        /// Filnavn på tilleggsmal (autotekster og makroer) som skal lastes ved opprettelse av nytt dokument basert på malen.
        /// Feltlengde: 100 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsmal {
            get {
                return this.TilleggsmalField;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsmalField, value) != true)) {
                    this.TilleggsmalField = value;
                    this.RaisePropertyChanged("Tilleggsmal");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om kategorisering av dokumentmaler.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dokumentmaltype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Dokumentmaltype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 255 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Unik id.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Benyttes for å angi hvilket hovedformat en bestemt variant av et saksdokument finnes i.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lagringsformat", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Lagringsformat : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ArkivformatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiltypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Valgt dersom dette formatet er et godkjent arkivformat, ikke valgt ellers.
        /// Kun formater som er valgt her skal kunne registreres med variant A.
        /// Tilsvarer NOARK4 feltet LF.ARKIV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Arkivformat {
            get {
                return this.ArkivformatField;
            }
            set {
                if ((this.ArkivformatField.Equals(value) != true)) {
                    this.ArkivformatField = value;
                    this.RaisePropertyChanged("Arkivformat");
                }
            }
        }
        
        /// <summary>
        /// Beskrivelse som er tilstrekkelig detaljert til i ettertid å kunne identifisere det program som dokumentet ble skapt med.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet LF.BESKRIV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Beskrivelse {
            get {
                return this.BeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BeskrivelseField, value) != true)) {
                    this.BeskrivelseField = value;
                    this.RaisePropertyChanged("Beskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Standard filtype (filetternavn) for dette lagringsformatet.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet LF.FILTYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filtype {
            get {
                return this.FiltypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FiltypeField, value) != true)) {
                    this.FiltypeField = value;
                    this.RaisePropertyChanged("Filtype");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet LF.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver mappetype.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mappetype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Mappetype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkivdel ArkivdelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivdelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> KategoriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        /// <summary>
        /// Arkivdelen mappetypen er begrenset til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver arkivdelen mappetypen er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkivdel Arkivdel {
            get {
                return this.ArkivdelField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivdelField, value) != true)) {
                    this.ArkivdelField = value;
                    this.RaisePropertyChanged("Arkivdel");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den arkivdelen som mappetypen eventuelt er begrenset til.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Arkivdel.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivdelId {
            get {
                return this.ArkivdelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivdelIdField, value) != true)) {
                    this.ArkivdelIdField = value;
                    this.RaisePropertyChanged("ArkivdelId");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 25 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode for mappetype.
        /// Feltlengde: 5 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Mappetype kategori. Lovlige verdier er:
        /// 0 - Noark saksmappe
        /// 1 - Privat mappe
        /// 2 - Adm. inndel mappe
        /// 3 - Adm. struktur mappe
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Kategori {
            get {
                return this.KategoriField;
            }
            set {
                if ((this.KategoriField.Equals(value) != true)) {
                    this.KategoriField = value;
                    this.RaisePropertyChanged("Kategori");
                }
            }
        }
        
        /// <summary>
        /// Standard tilgangskode.
        /// </summary>
        /// <value>Inneholder attributter som beskriver standard tilgangskode.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Standard tilgangskode for saker med denne mappetypen.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Tilgangskode.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver de sakstyper som benyttes ved utvalgsbehandling.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utvalgssakstype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Utvalgssakstype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet SU.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet SU.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver de møter som holdes av utvalg.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utvalgsmoete", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Utvalgsmoete : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DokumentfristField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Frammoete[] FrammoeteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HjemmelUOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LukketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MoeteNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Moetedokument[] MoetedokumenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MoeteprotokollLaastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoeteromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoetestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SakskartLaastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SluttidspunktField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StarttidspunktField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalg UtvalgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtvalgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgsbehandling[] UtvalgsbehandlingerField;
        
        /// <summary>
        /// Dato for møte.
        /// Tilsvarer NOARK4 feltet MO.DATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Dato {
            get {
                return this.DatoField;
            }
            set {
                if ((this.DatoField.Equals(value) != true)) {
                    this.DatoField = value;
                    this.RaisePropertyChanged("Dato");
                }
            }
        }
        
        /// <summary>
        /// Frist for ferdigstilling av saksframlegg til møtet.
        /// Tilsvarer NOARK4 feltet MO.FRIST.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Dokumentfrist {
            get {
                return this.DokumentfristField;
            }
            set {
                if ((this.DokumentfristField.Equals(value) != true)) {
                    this.DokumentfristField = value;
                    this.RaisePropertyChanged("Dokumentfrist");
                }
            }
        }
        
        /// <summary>
        /// Hvem som møtte i møtet.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver hvem som møtte i møtet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Frammoete[] Frammoete {
            get {
                return this.FrammoeteField;
            }
            set {
                if ((object.ReferenceEquals(this.FrammoeteField, value) != true)) {
                    this.FrammoeteField = value;
                    this.RaisePropertyChanged("Frammoete");
                }
            }
        }
        
        /// <summary>
        /// Henvisning til kommuneloven og/eller annet lovverk.
        /// Feltlengde: 70 tegn.
        /// Må ha innhold dersom Lukket er valgt.
        /// Tilsvarer NOARK4 feltet MO.UOFF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HjemmelUOff {
            get {
                return this.HjemmelUOffField;
            }
            set {
                if ((object.ReferenceEquals(this.HjemmelUOffField, value) != true)) {
                    this.HjemmelUOffField = value;
                    this.RaisePropertyChanged("HjemmelUOff");
                }
            }
        }
        
        /// <summary>
        /// ID som identifiserer et møte på tvers av alle utvalg.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet MO.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom møtet skal være lukket, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet MO.LUKKET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Lukket {
            get {
                return this.LukketField;
            }
            set {
                if ((this.LukketField.Equals(value) != true)) {
                    this.LukketField = value;
                    this.RaisePropertyChanged("Lukket");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet MO.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Nummer i rekkefølgen av møter som dette utvalget har hatt.
        /// Genereres automatisk ut fra nummerserien angitt for utvalget.
        /// Tilsvarer NOARK4 feltet MO.NR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MoeteNr {
            get {
                return this.MoeteNrField;
            }
            set {
                if ((this.MoeteNrField.Equals(value) != true)) {
                    this.MoeteNrField = value;
                    this.RaisePropertyChanged("MoeteNr");
                }
            }
        }
        
        /// <summary>
        /// Møtedokumenter.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver møtedokumenter.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Moetedokument[] Moetedokumenter {
            get {
                return this.MoetedokumenterField;
            }
            set {
                if ((object.ReferenceEquals(this.MoetedokumenterField, value) != true)) {
                    this.MoetedokumenterField = value;
                    this.RaisePropertyChanged("Moetedokumenter");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom møteprotokollen er låst, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet MO.PROTOKOLL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> MoeteprotokollLaast {
            get {
                return this.MoeteprotokollLaastField;
            }
            set {
                if ((this.MoeteprotokollLaastField.Equals(value) != true)) {
                    this.MoeteprotokollLaastField = value;
                    this.RaisePropertyChanged("MoeteprotokollLaast");
                }
            }
        }
        
        /// <summary>
        /// Møterom.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet MO.ROM.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Moeterom {
            get {
                return this.MoeteromField;
            }
            set {
                if ((object.ReferenceEquals(this.MoeteromField, value) != true)) {
                    this.MoeteromField = value;
                    this.RaisePropertyChanged("Moeterom");
                }
            }
        }
        
        /// <summary>
        /// Møtested.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet MO.STED.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Moetested {
            get {
                return this.MoetestedField;
            }
            set {
                if ((object.ReferenceEquals(this.MoetestedField, value) != true)) {
                    this.MoetestedField = value;
                    this.RaisePropertyChanged("Moetested");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom sakskartet er låst, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet MO.SAKSKART.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SakskartLaast {
            get {
                return this.SakskartLaastField;
            }
            set {
                if ((this.SakskartLaastField.Equals(value) != true)) {
                    this.SakskartLaastField = value;
                    this.RaisePropertyChanged("SakskartLaast");
                }
            }
        }
        
        /// <summary>
        /// Sluttidspunkt for møtet.
        /// Tilsvarer NOARK4 feltet MO.SLUTT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Sluttidspunkt {
            get {
                return this.SluttidspunktField;
            }
            set {
                if ((this.SluttidspunktField.Equals(value) != true)) {
                    this.SluttidspunktField = value;
                    this.RaisePropertyChanged("Sluttidspunkt");
                }
            }
        }
        
        /// <summary>
        /// Starttidspunkt for møtet.
        /// Tilsvarer NOARK4 feltet MO.START.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Starttidspunkt {
            get {
                return this.StarttidspunktField;
            }
            set {
                if ((this.StarttidspunktField.Equals(value) != true)) {
                    this.StarttidspunktField = value;
                    this.RaisePropertyChanged("Starttidspunkt");
                }
            }
        }
        
        /// <summary>
        /// Utvalget som holder møtet.
        /// </summary>
        /// <value>Inneholder informasjon om utvalget som holder møtet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalg Utvalg {
            get {
                return this.UtvalgField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgField, value) != true)) {
                    this.UtvalgField = value;
                    this.RaisePropertyChanged("Utvalg");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalget som holder møtet.
        /// Tilsvarer NOARK4 feltet MO.UTVID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtvalgId {
            get {
                return this.UtvalgIdField;
            }
            set {
                if ((this.UtvalgIdField.Equals(value) != true)) {
                    this.UtvalgIdField = value;
                    this.RaisePropertyChanged("UtvalgId");
                }
            }
        }
        
        /// <summary>
        /// Utvalgssaker til behandling i møtet.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver utvalgssaker til behandling i møtet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgsbehandling[] Utvalgsbehandlinger {
            get {
                return this.UtvalgsbehandlingerField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgsbehandlingerField, value) != true)) {
                    this.UtvalgsbehandlingerField = value;
                    this.RaisePropertyChanged("Utvalgsbehandlinger");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver hvem som deltok i et utvalgsmøte.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Frammoete", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Frammoete : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn DeltagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DeltagerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.FunksjonIUtvalg FrammoetekodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrammoetekodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MotegodtgjoerelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SorteringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgsmoete UtvalgsmoeteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtvalgsmoeteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtvalgssekretaerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn VararepresentantForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VararepresentantForIdField;
        
        /// <summary>
        /// Personen som deltok på møtet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som deltok på møtet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn Deltager {
            get {
                return this.DeltagerField;
            }
            set {
                if ((object.ReferenceEquals(this.DeltagerField, value) != true)) {
                    this.DeltagerField = value;
                    this.RaisePropertyChanged("Deltager");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person som deltok på møtet.
        /// Tilsvarer NOARK4 feltet FU.PNID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeltagerId {
            get {
                return this.DeltagerIdField;
            }
            set {
                if ((this.DeltagerIdField.Equals(value) != true)) {
                    this.DeltagerIdField = value;
                    this.RaisePropertyChanged("DeltagerId");
                }
            }
        }
        
        /// <summary>
        /// Kode som angir hvilken funksjon denne personen hadde i dette møtet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver koden som angir hvilken funksjon denne personen hadde i dette møtet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.FunksjonIUtvalg Frammoetekode {
            get {
                return this.FrammoetekodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FrammoetekodeField, value) != true)) {
                    this.FrammoetekodeField = value;
                    this.RaisePropertyChanged("Frammoetekode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til kode som angir hvilken funksjon denne personen hadde i dette møtet.
        /// Oppslag mot tabellen Funksjon i utvalg.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet FU.FUNK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrammoetekodeId {
            get {
                return this.FrammoetekodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FrammoetekodeIdField, value) != true)) {
                    this.FrammoetekodeIdField = value;
                    this.RaisePropertyChanged("FrammoetekodeId");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet FU_MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Møtegodtgjørelse.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Motegodtgjoerelse {
            get {
                return this.MotegodtgjoerelseField;
            }
            set {
                if ((this.MotegodtgjoerelseField.Equals(value) != true)) {
                    this.MotegodtgjoerelseField = value;
                    this.RaisePropertyChanged("Motegodtgjoerelse");
                }
            }
        }
        
        /// <summary>
        /// Benyttes dersom medlemmer skal sorteres på en bestemt måte når oversikt over deltakere skal skrives ut.
        /// Tilsvarer NOARK4 feltet FU.SORT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sortering {
            get {
                return this.SorteringField;
            }
            set {
                if ((this.SorteringField.Equals(value) != true)) {
                    this.SorteringField = value;
                    this.RaisePropertyChanged("Sortering");
                }
            }
        }
        
        /// <summary>
        /// Utvalgsmøtet fremmøtet gjelder.
        /// </summary>
        /// <value>Inneholder attributter om utvalgsmøtet fremmøtet gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgsmoete Utvalgsmoete {
            get {
                return this.UtvalgsmoeteField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgsmoeteField, value) != true)) {
                    this.UtvalgsmoeteField = value;
                    this.RaisePropertyChanged("Utvalgsmoete");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalgsmøtet.
        /// Tilsvarer NOARK4 feltet FU.MOID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtvalgsmoeteId {
            get {
                return this.UtvalgsmoeteIdField;
            }
            set {
                if ((this.UtvalgsmoeteIdField.Equals(value) != true)) {
                    this.UtvalgsmoeteIdField = value;
                    this.RaisePropertyChanged("UtvalgsmoeteId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom denne personen var sekretær i dette møtet, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet FU_SEKR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Utvalgssekretaer {
            get {
                return this.UtvalgssekretaerField;
            }
            set {
                if ((this.UtvalgssekretaerField.Equals(value) != true)) {
                    this.UtvalgssekretaerField = value;
                    this.RaisePropertyChanged("Utvalgssekretaer");
                }
            }
        }
        
        /// <summary>
        /// Personen som vedkommende stiller i møtet for.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen vedkommende stiller i møtet for.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn VararepresentantFor {
            get {
                return this.VararepresentantForField;
            }
            set {
                if ((object.ReferenceEquals(this.VararepresentantForField, value) != true)) {
                    this.VararepresentantForField = value;
                    this.RaisePropertyChanged("VararepresentantFor");
                }
            }
        }
        
        /// <summary>
        /// Benyttes for å knytte et varamedlem opp mot den person vedkommende stiller i møtet for.
        /// Tilsvarer NOARK4 feltet FU.VARAFOR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VararepresentantForId {
            get {
                return this.VararepresentantForIdField;
            }
            set {
                if ((this.VararepresentantForIdField.Equals(value) != true)) {
                    this.VararepresentantForIdField = value;
                    this.RaisePropertyChanged("VararepresentantForId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver de arkivverdige dokumentene (møteprotokoll mv) som er knyttet
    /// til utvalgsmøter, men som ikke er knyttet til enkeltsaker registrert i journalen.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Moetedokument", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Moetedokument : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativInndelingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdministrativInndelingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ArkiveresPaaPapirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Ordningsverdi ArkivkodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivkodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AvgraderDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Avgraderingskode AvgraderingskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvgraderingskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BevaringstidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.DokumenttypeForUtvalgsbehandling DokumenttypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumenttypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HjemmelUOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnholdsbeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InnholdsbeskrivelseUOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> KassasjonsdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Kassasjonskode KassasjonskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KassasjonskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OffentligInnholdsbeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RegistreringsdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn SaksbehandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaksbehandlerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.StatusForMoetedokument StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe TilgangsgruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilgangsgruppeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalg UtvalgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtvalgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgsmoete UtvalgsmoeteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtvalgsmoeteIdField;
        
        /// <summary>
        /// Den administrative enhet som har ansvaret for ferdigstillelse av dette dokumentet.
        /// </summary>
        /// <value>Inneholder attributter om den administrative enhet som har ansvaret for ferdigstillelse av dette dokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativInndeling {
            get {
                return this.AdministrativInndelingField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativInndelingField, value) != true)) {
                    this.AdministrativInndelingField = value;
                    this.RaisePropertyChanged("AdministrativInndeling");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den administrative enhet som har ansvaret for ferdigstillelse av dette dokumentet.
        /// Oppslag mot tabellen Administrativ inndeling.
        /// Mappes til NOARK4 feltet MD_ADMID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdministrativInndelingId {
            get {
                return this.AdministrativInndelingIdField;
            }
            set {
                if ((this.AdministrativInndelingIdField.Equals(value) != true)) {
                    this.AdministrativInndelingIdField = value;
                    this.RaisePropertyChanged("AdministrativInndelingId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom dokumentet skal arkiveres på papir, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet MD.PAPIRDOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ArkiveresPaaPapir {
            get {
                return this.ArkiveresPaaPapirField;
            }
            set {
                if ((this.ArkiveresPaaPapirField.Equals(value) != true)) {
                    this.ArkiveresPaaPapirField = value;
                    this.RaisePropertyChanged("ArkiveresPaaPapir");
                }
            }
        }
        
        /// <summary>
        /// Arkivkode som skal benyttes ved arkivering av dette dokumentet
        /// </summary>
        /// <value>Inneholder attributter som beskriver arkivkode som skal benyttes ved arkivering av dette dokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Ordningsverdi Arkivkode {
            get {
                return this.ArkivkodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivkodeField, value) != true)) {
                    this.ArkivkodeField = value;
                    this.RaisePropertyChanged("Arkivkode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til arkivkode som skal benyttes ved arkivering av dette dokumentet.
        /// Oppslag mot tabellen Ordningsverdi på grunnlag av attributtet Primær arkivnøkkel knyttet til den arkivdel som er registrert på utvalget.
        /// Tilsvarer NOARK4 feltet MD.ARKKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivkodeId {
            get {
                return this.ArkivkodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivkodeIdField, value) != true)) {
                    this.ArkivkodeIdField = value;
                    this.RaisePropertyChanged("ArkivkodeId");
                }
            }
        }
        
        /// <summary>
        /// Dato for avgradering eller annen aksjon i henhold til avgraderingskoden.
        /// Må ha innhold dersom Tilgangskode har innhold.
        /// Tilsvarer NOARK4 feltet MD.AGDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AvgraderDato {
            get {
                return this.AvgraderDatoField;
            }
            set {
                if ((this.AvgraderDatoField.Equals(value) != true)) {
                    this.AvgraderDatoField = value;
                    this.RaisePropertyChanged("AvgraderDato");
                }
            }
        }
        
        /// <summary>
        /// Avgraderingskoden som møtedokumentet er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om avgraderingskoden som møtedokumentet er knyttet til</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Avgraderingskode Avgraderingskode {
            get {
                return this.AvgraderingskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AvgraderingskodeField, value) != true)) {
                    this.AvgraderingskodeField = value;
                    this.RaisePropertyChanged("Avgraderingskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til avgraderingskode som angir hva som skal skje når avgraderingstidspunktet er nådd.
        /// Feltlengde: 2 tegn.
        /// Må ha innhold dersom Tilgangskode har innhold.
        /// Oppslag mot tabellen Avgraderingskode.
        /// Tilsvarer NOARK4 feltet MD.AGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvgraderingskodeId {
            get {
                return this.AvgraderingskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AvgraderingskodeIdField, value) != true)) {
                    this.AvgraderingskodeIdField = value;
                    this.RaisePropertyChanged("AvgraderingskodeId");
                }
            }
        }
        
        /// <summary>
        /// Antall år møtedokumentet skal oppbevares før kassasjon eller før annen aksjon i henhold til kassasjonskoden skal foretas.
        /// Tilsvarer NOARK4 feltet MD.BEVTID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Bevaringstid {
            get {
                return this.BevaringstidField;
            }
            set {
                if ((this.BevaringstidField.Equals(value) != true)) {
                    this.BevaringstidField = value;
                    this.RaisePropertyChanged("Bevaringstid");
                }
            }
        }
        
        /// <summary>
        /// Type utvalgsdokument.
        /// </summary>
        /// <value>Inneholder attributter om type utvalgsdokument.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.DokumenttypeForUtvalgsbehandling Dokumenttype {
            get {
                return this.DokumenttypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeField, value) != true)) {
                    this.DokumenttypeField = value;
                    this.RaisePropertyChanged("Dokumenttype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hvilken type utvalgsdokument dette er.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Dokumenttype for utvalgsbehandling.
        /// Se beskrivelsen av dette for lovlige verdier og bruken av disse.
        /// Mappes til NOARK4 feltet MD_DOKTYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DokumenttypeId {
            get {
                return this.DokumenttypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeIdField, value) != true)) {
                    this.DokumenttypeIdField = value;
                    this.RaisePropertyChanged("DokumenttypeId");
                }
            }
        }
        
        /// <summary>
        /// Henvisning til offentlighetsloven og/eller annet lovverk.
        /// Feltlengde: 70 tegn.
        /// Må ha innhold dersom Tilgangskode har innhold.
        /// Tilsvarer NOARK4 feltet MD.UOFF
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HjemmelUOff {
            get {
                return this.HjemmelUOffField;
            }
            set {
                if ((object.ReferenceEquals(this.HjemmelUOffField, value) != true)) {
                    this.HjemmelUOffField = value;
                    this.RaisePropertyChanged("HjemmelUOff");
                }
            }
        }
        
        /// <summary>
        /// Unik id for møtedokument.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet MD.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Tittel som er rimelig dekkende for dokumentet som registreres.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet MD.INNHOLD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Innholdsbeskrivelse {
            get {
                return this.InnholdsbeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.InnholdsbeskrivelseField, value) != true)) {
                    this.InnholdsbeskrivelseField = value;
                    this.RaisePropertyChanged("Innholdsbeskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom hele eller deler av attributtet Innholdsbeskrivelse skal unntas offentligheten, ikke valgt ellers.
        /// Valgt tillates kun dersom tilgangskode er angitt.
        /// Tilsvarer NOARK4 feltet MD.U1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> InnholdsbeskrivelseUOff {
            get {
                return this.InnholdsbeskrivelseUOffField;
            }
            set {
                if ((this.InnholdsbeskrivelseUOffField.Equals(value) != true)) {
                    this.InnholdsbeskrivelseUOffField = value;
                    this.RaisePropertyChanged("InnholdsbeskrivelseUOff");
                }
            }
        }
        
        /// <summary>
        /// Den dato kassasjon eller annen aksjon i henhold til kassasjonskoden skal foretas.
        /// Tilsvarer NOARK4 feltet MD.KASSDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Kassasjonsdato {
            get {
                return this.KassasjonsdatoField;
            }
            set {
                if ((this.KassasjonsdatoField.Equals(value) != true)) {
                    this.KassasjonsdatoField = value;
                    this.RaisePropertyChanged("Kassasjonsdato");
                }
            }
        }
        
        /// <summary>
        /// Møtedokumentets kassasjonskode.
        /// </summary>
        /// <value>Angir hva som skal skje når angitt kassasjonstidspunkt er nådd.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Kassasjonskode Kassasjonskode {
            get {
                return this.KassasjonskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KassasjonskodeField, value) != true)) {
                    this.KassasjonskodeField = value;
                    this.RaisePropertyChanged("Kassasjonskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til kassasjonskode som angir hva som skal skje når kassasjonsåret er nådd.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Kassasjonskode.
        /// Tilsvarer NOARK4 feltet MD.KASSKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KassasjonskodeId {
            get {
                return this.KassasjonskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.KassasjonskodeIdField, value) != true)) {
                    this.KassasjonskodeIdField = value;
                    this.RaisePropertyChanged("KassasjonskodeId");
                }
            }
        }
        
        /// <summary>
        /// Skjermet tittel.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OffentligInnholdsbeskrivelse {
            get {
                return this.OffentligInnholdsbeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.OffentligInnholdsbeskrivelseField, value) != true)) {
                    this.OffentligInnholdsbeskrivelseField = value;
                    this.RaisePropertyChanged("OffentligInnholdsbeskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Settes automatisk til dagens dato ved registrering av nytt.
        /// Oppdateres automatisk til dagens dato når status for møtedokument endres til J. Kan endres av arkivpersonalet.
        /// Tilsvarer NOARK4 feltet MD.REGDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Registreringsdato {
            get {
                return this.RegistreringsdatoField;
            }
            set {
                if ((this.RegistreringsdatoField.Equals(value) != true)) {
                    this.RegistreringsdatoField = value;
                    this.RaisePropertyChanged("Registreringsdato");
                }
            }
        }
        
        /// <summary>
        /// Personen som har ansvaret for å ferdigstille dokumentet.
        /// </summary>
        /// <value>Inneholder attributter om personen som har ansvaret for å ferdigstille dokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn Saksbehandler {
            get {
                return this.SaksbehandlerField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksbehandlerField, value) != true)) {
                    this.SaksbehandlerField = value;
                    this.RaisePropertyChanged("Saksbehandler");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den personen som har ansvaret for å ferdigstille dokumentet.
        /// Oppslag mot tabellen Personnavn.
        /// Tilsvarer NOARK4 feltet MD.SBHID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SaksbehandlerId {
            get {
                return this.SaksbehandlerIdField;
            }
            set {
                if ((this.SaksbehandlerIdField.Equals(value) != true)) {
                    this.SaksbehandlerIdField = value;
                    this.RaisePropertyChanged("SaksbehandlerId");
                }
            }
        }
        
        /// <summary>
        /// Status for møtedokumentet.
        /// </summary>
        /// <value>Inneholder attributter om status for møtedokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.StatusForMoetedokument Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        /// <summary>
        /// Referanse til status for møtedokumentet.
        /// Tilsvarer NOARK4 feltet MD.STATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusIdField, value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        /// <summary>
        /// Tilgangsgruppen som møtedokumentet er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangsgruppen som møtedokumentet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe Tilgangsgruppe {
            get {
                return this.TilgangsgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeField, value) != true)) {
                    this.TilgangsgruppeField = value;
                    this.RaisePropertyChanged("Tilgangsgruppe");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangsgruppe.
        /// Tilsvarer NOARK4 feltet MD.TGGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilgangsgruppeId {
            get {
                return this.TilgangsgruppeIdField;
            }
            set {
                if ((this.TilgangsgruppeIdField.Equals(value) != true)) {
                    this.TilgangsgruppeIdField = value;
                    this.RaisePropertyChanged("TilgangsgruppeId");
                }
            }
        }
        
        /// <summary>
        /// Tilgangskoden møtedokumentet er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangskoden møtedokumentet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Tilgangskode for møtedokumentet.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Hjemmel for tilgangskode.
        /// Tilsvarer NOARK4 feltet MD.TGKODE
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
        
        /// <summary>
        /// Utvalget som møtedokumentet tilhører.
        /// </summary>
        /// <value>Inneholder detaljer om utvalget som møtedokumentet tilhører.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalg Utvalg {
            get {
                return this.UtvalgField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgField, value) != true)) {
                    this.UtvalgField = value;
                    this.RaisePropertyChanged("Utvalg");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalget som møtedokumentet tilhører.
        /// Tilsvarer NOARK4 feltet MD.UTVID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtvalgId {
            get {
                return this.UtvalgIdField;
            }
            set {
                if ((this.UtvalgIdField.Equals(value) != true)) {
                    this.UtvalgIdField = value;
                    this.RaisePropertyChanged("UtvalgId");
                }
            }
        }
        
        /// <summary>
        /// Utvalgsmøtet dokumentet er tilknyttet.
        /// </summary>
        /// <value>Inneholder attributter om utvalgsmøtet dokumentet er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgsmoete Utvalgsmoete {
            get {
                return this.UtvalgsmoeteField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgsmoeteField, value) != true)) {
                    this.UtvalgsmoeteField = value;
                    this.RaisePropertyChanged("Utvalgsmoete");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til det utvalgsmøte dokumentet er tilknyttet.
        /// Tilsvarer NOARK4 feltet MD.MOID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtvalgsmoeteId {
            get {
                return this.UtvalgsmoeteIdField;
            }
            set {
                if ((this.UtvalgsmoeteIdField.Equals(value) != true)) {
                    this.UtvalgsmoeteIdField = value;
                    this.RaisePropertyChanged("UtvalgsmoeteId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder de avgraderingskoder som skal kunne benyttes. Kode som angir hva som skal skje når angitt avgraderingstidspunkt nås.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Avgraderingskode", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Avgraderingskode : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Description - Betegnelse i klartekst for avgraderingskoden.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet AG.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Short code - Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet AG.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver de dokumenttyper som benyttes ved utvalgsbehandling.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DokumenttypeForUtvalgsbehandling", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class DokumenttypeForUtvalgsbehandling : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumenttype NoarkDokumenttypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoarkDokumenttypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SkalAldriJournalfoeresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SkalAlltidJournalfoeresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SkalRegistreresSomMoetedokumentField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet DU.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet DU.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Den Noark dokumenttype som normalt skal benyttes ved journalføring av denne typen utvalgsdokumenter.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver den Noark dokumenttype som normalt skal benyttes ved journalføring av denne typen utvalgsdokumenter.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumenttype NoarkDokumenttype {
            get {
                return this.NoarkDokumenttypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NoarkDokumenttypeField, value) != true)) {
                    this.NoarkDokumenttypeField = value;
                    this.RaisePropertyChanged("NoarkDokumenttype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den Noark dokumenttype som normalt skal benyttes ved journalføring av denne typen utvalgsdokumenter.
        /// Feltlengde: 1 tegn.
        /// Tilsvarer NOARK4 feltet DU.NDOKTYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoarkDokumenttypeId {
            get {
                return this.NoarkDokumenttypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.NoarkDokumenttypeIdField, value) != true)) {
                    this.NoarkDokumenttypeIdField = value;
                    this.RaisePropertyChanged("NoarkDokumenttypeId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom dokumenter av denne typen aldri skal tillates journalført, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet DU.ALDRIJOUR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SkalAldriJournalfoeres {
            get {
                return this.SkalAldriJournalfoeresField;
            }
            set {
                if ((this.SkalAldriJournalfoeresField.Equals(value) != true)) {
                    this.SkalAldriJournalfoeresField = value;
                    this.RaisePropertyChanged("SkalAldriJournalfoeres");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom alle dokumenter av denne typen automatisk skal journalføres når de opprettes, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet DU.AUTOJOUR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SkalAlltidJournalfoeres {
            get {
                return this.SkalAlltidJournalfoeresField;
            }
            set {
                if ((this.SkalAlltidJournalfoeresField.Equals(value) != true)) {
                    this.SkalAlltidJournalfoeresField = value;
                    this.RaisePropertyChanged("SkalAlltidJournalfoeres");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom alle dokumenter av denne typen automatisk skal registreres som et møtedokument når de opprettes, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet DU.MOTEDOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SkalRegistreresSomMoetedokument {
            get {
                return this.SkalRegistreresSomMoetedokumentField;
            }
            set {
                if ((this.SkalRegistreresSomMoetedokumentField.Equals(value) != true)) {
                    this.SkalRegistreresSomMoetedokumentField = value;
                    this.RaisePropertyChanged("SkalRegistreresSomMoetedokument");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver Noark dokumenttype.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dokumenttype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Dokumenttype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Avskrivingsmaate AvskrivingsmaateSvarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvskrivningsmaateSvarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumenttype DokumenttypeSvarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumenttypeSvarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EksternMottakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EksterntProduserteDokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InternMottakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KreverOppfoelgingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MappedokumenttypeField;
        
        /// <summary>
        /// Default depreciation method - Standard avskrivingsmåte.
        /// </summary>
        /// <value>Inneholder attributter som beskriver standard avskrivingsmåte.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Avskrivingsmaate AvskrivingsmaateSvar {
            get {
                return this.AvskrivingsmaateSvarField;
            }
            set {
                if ((object.ReferenceEquals(this.AvskrivingsmaateSvarField, value) != true)) {
                    this.AvskrivingsmaateSvarField = value;
                    this.RaisePropertyChanged("AvskrivingsmaateSvar");
                }
            }
        }
        
        /// <summary>
        /// Reference to the default depreciation method - Referanse til standard avskrivingsmåte.
        /// Oppslag mot tabellen Avskrivningsmåte.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvskrivningsmaateSvarId {
            get {
                return this.AvskrivningsmaateSvarIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AvskrivningsmaateSvarIdField, value) != true)) {
                    this.AvskrivningsmaateSvarIdField = value;
                    this.RaisePropertyChanged("AvskrivningsmaateSvarId");
                }
            }
        }
        
        /// <summary>
        /// Description - Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet ND.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Default document type used when creatng a respond letter - Standard Noark dokumenttype ved svar.
        /// </summary>
        /// <value>Inneholder attributter som beskriver standard Noark dokumenttype ved svar.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumenttype DokumenttypeSvar {
            get {
                return this.DokumenttypeSvarField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeSvarField, value) != true)) {
                    this.DokumenttypeSvarField = value;
                    this.RaisePropertyChanged("DokumenttypeSvar");
                }
            }
        }
        
        /// <summary>
        /// Reference to default document type used when creatng a respond letter - Referanse til standard Noark dokumenttype ved svar.
        /// Oppslag mot tabellen Noark dokumenttype.
        /// Feltlengde: 1 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DokumenttypeSvarId {
            get {
                return this.DokumenttypeSvarIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeSvarIdField, value) != true)) {
                    this.DokumenttypeSvarIdField = value;
                    this.RaisePropertyChanged("DokumenttypeSvarId");
                }
            }
        }
        
        /// <summary>
        /// - Verdi 0 dersom ekstern mottaker ikke kan angis, verdi 1 dersom ekstern mottaker kan angis og
        /// verdi 2 dersom ekstern mottaker må angis.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet ND.EKSTMOT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EksternMottaker {
            get {
                return this.EksternMottakerField;
            }
            set {
                if ((this.EksternMottakerField.Equals(value) != true)) {
                    this.EksternMottakerField = value;
                    this.RaisePropertyChanged("EksternMottaker");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom dokumentet er produsert eksternt (Dokumenttype I), ikke valgt hvis det er produsert internt.
        /// Eksternt produserte dokumenter må alltid ha en intern mottaker som behandlingsansvarlig.
        /// For internt produserte dokumenter skal avsender alltid være behandlingsansvarlig.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet ND.EKSTPROD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EksterntProduserteDokument {
            get {
                return this.EksterntProduserteDokumentField;
            }
            set {
                if ((this.EksterntProduserteDokumentField.Equals(value) != true)) {
                    this.EksterntProduserteDokumentField = value;
                    this.RaisePropertyChanged("EksterntProduserteDokument");
                }
            }
        }
        
        /// <summary>
        /// Id/short code - Kortkode.
        /// Feltlengde: 1 tegn.
        /// Tilsvarer NOARK4 feltet ND.DOKTYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// - Verdi 0 dersom intern mottaker ikke kan angis, verdi 1 dersom intern mottaker kan angis og
        /// verdi 2 dersom intern mottaker må angis.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet ND.INTMOT
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InternMottaker {
            get {
                return this.InternMottakerField;
            }
            set {
                if ((this.InternMottakerField.Equals(value) != true)) {
                    this.InternMottakerField = value;
                    this.RaisePropertyChanged("InternMottaker");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom dokumentet krever oppfølging (dvs at det må avskrives), ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet ND.OPPF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KreverOppfoelging {
            get {
                return this.KreverOppfoelgingField;
            }
            set {
                if ((this.KreverOppfoelgingField.Equals(value) != true)) {
                    this.KreverOppfoelgingField = value;
                    this.RaisePropertyChanged("KreverOppfoelging");
                }
            }
        }
        
        /// <summary>
        /// - Mappedokumenttype.
        /// Ingen verdi dersom Noark-dokument (I,U,S,X,N)
        /// Verdi 1 dersom saksmappedokument.
        /// verdi 2 dersom mappedokument.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Mappedokumenttype {
            get {
                return this.MappedokumenttypeField;
            }
            set {
                if ((this.MappedokumenttypeField.Equals(value) != true)) {
                    this.MappedokumenttypeField = value;
                    this.RaisePropertyChanged("Mappedokumenttype");
                }
            }
        }
    }
    
    /// <summary>
    /// Angir hvilken behandling et inngående brev eller internt notat har fått.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Avskrivingsmaate", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Avskrivingsmaate : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MidlertidigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SvarRegistrertField;
        
        /// <summary>
        /// Description - Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet AV.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Unique ID - Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet AV.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicate if the method is temporary - Valgt dersom avskrivningsmåten angir en midlertidig avskrivning, ikke valgt hvis det er en endelig avskrivning.
        /// Tilsvarer NOARK4 feltet AV.MIDLERTID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Midlertidig {
            get {
                return this.MidlertidigField;
            }
            set {
                if ((this.MidlertidigField.Equals(value) != true)) {
                    this.MidlertidigField = value;
                    this.RaisePropertyChanged("Midlertidig");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicate that the method is only used if the depriciation is done by replying with a document - Valgt dersom svar er registrert som en egen journalpost, ikke valgt ellers.
        /// Koder med valgt verdi her kan kun benyttes dersom det samtidig angis dokumentnummer til svardokumentet.
        /// Tilsvarer NOARK4 feltet AV.BESVART.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SvarRegistrert {
            get {
                return this.SvarRegistrertField;
            }
            set {
                if ((this.SvarRegistrertField.Equals(value) != true)) {
                    this.SvarRegistrertField = value;
                    this.RaisePropertyChanged("SvarRegistrert");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder verdier for å angi hvor langt en er kommet med behandlingen av et dokument i forhold til registrering i Møtedokument og/eller ved klargjøring av dokument for behandling i utvalg.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusForMoetedokument", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class StatusForMoetedokument : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet MS.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet MS.STATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver saker som skal behandles av et utvalg og selve behandlingen.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utvalgsbehandling", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Utvalgsbehandling : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Behandlingsstatus BehandlingsstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BehandlingsstatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HjemmelUoffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalpostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LukketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MoteSorteringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OffentligTittelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.PolitiskSaksgang PolitiskSaksgangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PolitiskSaksgangIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ProtokollGodkjentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RekkefoelgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling SaksbehandlendeEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaksbehandlendeEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn SaksbehandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaksbehandlerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SakstittelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SakstittelUoffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SamlesakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype SamlesakForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SamlesakForIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SekvensnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe TilgangsgruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangsgruppeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalg UtvalgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtvalgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgsmoete UtvalgsmoeteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtvalgsmoeteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype UtvalgssakstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtvalgssakstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.BehandlingDokument SaksprotokollField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SistOppdatertField;
        
        /// <summary>
        /// Utvalgssaksår.
        /// Tilsvarer NOARK4 feltet UB.AAR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Aar {
            get {
                return this.AarField;
            }
            set {
                if ((this.AarField.Equals(value) != true)) {
                    this.AarField = value;
                    this.RaisePropertyChanged("Aar");
                }
            }
        }
        
        /// <summary>
        /// Behandlingsstatus for utvalgsbehandlingen.
        /// </summary>
        /// <value>Inneholder attributter om behandlingsstatus for utvalgsbehandlingen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Behandlingsstatus Behandlingsstatus {
            get {
                return this.BehandlingsstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.BehandlingsstatusField, value) != true)) {
                    this.BehandlingsstatusField = value;
                    this.RaisePropertyChanged("Behandlingsstatus");
                }
            }
        }
        
        /// <summary>
        /// Angir hvor langt denne behandlingen av saken har kommet i forhold til dette utvalget.
        /// Oppslag mot tabellen Behandlingsstatus.
        /// Tilsvarer NOARK4 feltet UB.BEHSTATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BehandlingsstatusId {
            get {
                return this.BehandlingsstatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BehandlingsstatusIdField, value) != true)) {
                    this.BehandlingsstatusIdField = value;
                    this.RaisePropertyChanged("BehandlingsstatusId");
                }
            }
        }
        
        /// <summary>
        /// Henvisning til offentlighetsloven og/eller annet lovverk. Må ha innhold dersom Tilgangskode er angitt.
        /// Standardverdi fra arkivsaken, men skal kunne endres.
        /// Tilsvarer NOARK4 feltet US.UOFF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HjemmelUoff {
            get {
                return this.HjemmelUoffField;
            }
            set {
                if ((object.ReferenceEquals(this.HjemmelUoffField, value) != true)) {
                    this.HjemmelUoffField = value;
                    this.RaisePropertyChanged("HjemmelUoff");
                }
            }
        }
        
        /// <summary>
        /// Unik ID for behandlingen på tvers av alle utvalg og saker.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet UB.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Journalposten utvalgsbehandlingen er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalposten utvalgsbehandlingen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til det dokument (f.eks en klage) i journalen (i tabellen Journalpost) som initierte denne utvalgsbehandlingen.
        /// Tilsvarer NOARK4 feltet US.JPID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalpostId {
            get {
                return this.JournalpostIdField;
            }
            set {
                if ((this.JournalpostIdField.Equals(value) != true)) {
                    this.JournalpostIdField = value;
                    this.RaisePropertyChanged("JournalpostId");
                }
            }
        }
        
        /// <summary>
        /// Avkrysset dersom saken må behandles i lukket møtet, ikke avkrysset ellers.
        /// Standardverdi fra Politisk saksgang eller Sakstype for (arkiv)saken, men kan endres.
        /// Tilsvarer NOARK4 feltet US.LUKKET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Lukket {
            get {
                return this.LukketField;
            }
            set {
                if ((this.LukketField.Equals(value) != true)) {
                    this.LukketField = value;
                    this.RaisePropertyChanged("Lukket");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet US.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Intern sortering av utvalgssaker i møtet.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MoteSortering {
            get {
                return this.MoteSorteringField;
            }
            set {
                if ((this.MoteSorteringField.Equals(value) != true)) {
                    this.MoteSorteringField = value;
                    this.RaisePropertyChanged("MoteSortering");
                }
            }
        }
        
        /// <summary>
        /// Offentlig tittel.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OffentligTittel {
            get {
                return this.OffentligTittelField;
            }
            set {
                if ((object.ReferenceEquals(this.OffentligTittelField, value) != true)) {
                    this.OffentligTittelField = value;
                    this.RaisePropertyChanged("OffentligTittel");
                }
            }
        }
        
        /// <summary>
        /// Saksgangen (i tabellen Politisk saksgang) som denne utvalgsbehandlingen er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saksgangen som denne utvalgsbehandlingen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.PolitiskSaksgang PolitiskSaksgang {
            get {
                return this.PolitiskSaksgangField;
            }
            set {
                if ((object.ReferenceEquals(this.PolitiskSaksgangField, value) != true)) {
                    this.PolitiskSaksgangField = value;
                    this.RaisePropertyChanged("PolitiskSaksgang");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til den saksgang (i tabellen Politisk saksgang) som denne utvalgsbehandlingen er knyttet til.
        /// Tilsvarer NOARK4 feltet US.POLSGID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PolitiskSaksgangId {
            get {
                return this.PolitiskSaksgangIdField;
            }
            set {
                if ((this.PolitiskSaksgangIdField.Equals(value) != true)) {
                    this.PolitiskSaksgangIdField = value;
                    this.RaisePropertyChanged("PolitiskSaksgangId");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis saksprotokoll er godkjent og låst, ikke valgt ellers.
        /// Skal oppdateres automatisk når møteprotokollen låses.
        /// Tilsvarer NOARK4 feltet UB.PROTOKOLL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ProtokollGodkjent {
            get {
                return this.ProtokollGodkjentField;
            }
            set {
                if ((this.ProtokollGodkjentField.Equals(value) != true)) {
                    this.ProtokollGodkjentField = value;
                    this.RaisePropertyChanged("ProtokollGodkjent");
                }
            }
        }
        
        /// <summary>
        /// Rekkefølge i det behandlingsforløpet saken går gjennom i de forskjellige utvalg.
        /// Skal være i overensstemmelse med avhengighet til behandling
        /// i andre utvalg registrert i tabellen Behandlingsavhengighet eller i eget saksbehandlingssystem.
        /// Tilsvarer NOARK4 feltet UB.RFOLGE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rekkefoelge {
            get {
                return this.RekkefoelgeField;
            }
            set {
                if ((this.RekkefoelgeField.Equals(value) != true)) {
                    this.RekkefoelgeField = value;
                    this.RaisePropertyChanged("Rekkefoelge");
                }
            }
        }
        
        /// <summary>
        /// Saken utvalgsbehandlingen er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken utvalgsbehandlingen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til den arkivsaken (i tabellen Sak) som utvalgsbehandlingen tilhører.
        /// Tilsvarer NOARK4 feltet US.SAID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
        
        /// <summary>
        /// Den administrative enhet som har ansvaret for denne saken ved behandling i dette utvalget.
        /// </summary>
        /// <value>Inneholder attributter om den administrative enhet som har ansvaret for denne saken ved behandling i dette utvalget.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling SaksbehandlendeEnhet {
            get {
                return this.SaksbehandlendeEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksbehandlendeEnhetField, value) != true)) {
                    this.SaksbehandlendeEnhetField = value;
                    this.RaisePropertyChanged("SaksbehandlendeEnhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den adm. enhet som har ansvaret for denne saken ved behandling i dette utvalget. Standardverdi 0 (ikke angitt).
        /// Oppslag mot tabellen Administrativ inndeling.
        /// Tilsvarer NOARK4 feltet UB.ADMID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SaksbehandlendeEnhetId {
            get {
                return this.SaksbehandlendeEnhetIdField;
            }
            set {
                if ((this.SaksbehandlendeEnhetIdField.Equals(value) != true)) {
                    this.SaksbehandlendeEnhetIdField = value;
                    this.RaisePropertyChanged("SaksbehandlendeEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Saksbehandler for denne saken ved behandling i dette utvalget.
        /// </summary>
        /// <value>Inneholder attributter om personen som er saksbehandler for denne saken ved behandling i dette utvalget.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn Saksbehandler {
            get {
                return this.SaksbehandlerField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksbehandlerField, value) != true)) {
                    this.SaksbehandlerField = value;
                    this.RaisePropertyChanged("Saksbehandler");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person som er saksbehandler for denne saken ved behandling i dette utvalget. Standardverdi 0 (ikke angitt).
        /// Oppslag mot tabellen Personnavn.
        /// Tilsvarer NOARK4 feltet UB.SBHID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SaksbehandlerId {
            get {
                return this.SaksbehandlerIdField;
            }
            set {
                if ((this.SaksbehandlerIdField.Equals(value) != true)) {
                    this.SaksbehandlerIdField = value;
                    this.RaisePropertyChanged("SaksbehandlerId");
                }
            }
        }
        
        /// <summary>
        /// Sakens tittel ved behandling i utvalget. Kopieres fra arkivsakens tittel, men kan endres.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet US.JPID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sakstittel {
            get {
                return this.SakstittelField;
            }
            set {
                if ((object.ReferenceEquals(this.SakstittelField, value) != true)) {
                    this.SakstittelField = value;
                    this.RaisePropertyChanged("Sakstittel");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom hele eller deler av attributtet Sakstittel skal unntas offentligheten, ikke valgt ellers.
        /// Tillates kun valgt dersom tilgangskode er angitt.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SakstittelUoff {
            get {
                return this.SakstittelUoffField;
            }
            set {
                if ((this.SakstittelUoffField.Equals(value) != true)) {
                    this.SakstittelUoffField = value;
                    this.RaisePropertyChanged("SakstittelUoff");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom dette er en samlesak, ikke valgt ellers.
        /// Med samlesak menes en sak som inneholder andre saker - f.eks Referatsaker.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Samlesak {
            get {
                return this.SamlesakField;
            }
            set {
                if ((this.SamlesakField.Equals(value) != true)) {
                    this.SamlesakField = value;
                    this.RaisePropertyChanged("Samlesak");
                }
            }
        }
        
        /// <summary>
        /// Sakstypen utvalgsbehandlingen er samlesak for.
        /// </summary>
        /// <value>Inneholder attributter om sakstypen utvalgsbehandlingen er samlesak for.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype SamlesakFor {
            get {
                return this.SamlesakForField;
            }
            set {
                if ((object.ReferenceEquals(this.SamlesakForField, value) != true)) {
                    this.SamlesakForField = value;
                    this.RaisePropertyChanged("SamlesakFor");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den sakstypen utvalgsbehandlingen er samlesak for.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SamlesakForId {
            get {
                return this.SamlesakForIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SamlesakForIdField, value) != true)) {
                    this.SamlesakForIdField = value;
                    this.RaisePropertyChanged("SamlesakForId");
                }
            }
        }
        
        /// <summary>
        /// Sekvensnummer innenfor år og eventuelt også sakstype for utvalgssaken. Fylles ut automatisk ut fra den nummerserie som er knyttet
        /// til denne sakstypen i dette utvalget, når sakskartet for det møtet saken skal behandles på, settes opp.
        /// Tilsvarer NOARK4 feltet UB.USEKNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sekvensnummer {
            get {
                return this.SekvensnummerField;
            }
            set {
                if ((this.SekvensnummerField.Equals(value) != true)) {
                    this.SekvensnummerField = value;
                    this.RaisePropertyChanged("Sekvensnummer");
                }
            }
        }
        
        /// <summary>
        /// Tilgangsgruppen som utvalgsbehandlingen er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangsgruppen som utvalgsbehandlingen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe Tilgangsgruppe {
            get {
                return this.TilgangsgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeField, value) != true)) {
                    this.TilgangsgruppeField = value;
                    this.RaisePropertyChanged("Tilgangsgruppe");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangsgruppe.
        /// Dersom tilgangskode er angitt, skal medlemmene av gruppen gis tilgang dersom de er klarert for tilgangskoden.
        /// Tilsvarer NOARK4 feltet US.TGGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangsgruppeId {
            get {
                return this.TilgangsgruppeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeIdField, value) != true)) {
                    this.TilgangsgruppeIdField = value;
                    this.RaisePropertyChanged("TilgangsgruppeId");
                }
            }
        }
        
        /// <summary>
        /// Tilgangskoden utvalgsbehandlingen er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangskoden utvalgsbehandlingen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Tilgangskode for utvalgsbehandlingen.
        /// Feltlengde: 2 tegn.
        /// Standardverdi fra (arkiv)saken, men skal kunne endres.
        /// Oppslag mot tabellen Hjemmel for tilgangskode.
        /// Tilsvarer NOARK4 feltet US.TGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
        
        /// <summary>
        /// Utvalget som behandler saken.
        /// </summary>
        /// <value>Inneholder detaljer om utvalget som behandler saken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalg Utvalg {
            get {
                return this.UtvalgField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgField, value) != true)) {
                    this.UtvalgField = value;
                    this.RaisePropertyChanged("Utvalg");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalget som behandler saken.
        /// Tilsvarer NOARK4 feltet US.UTVID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtvalgId {
            get {
                return this.UtvalgIdField;
            }
            set {
                if ((this.UtvalgIdField.Equals(value) != true)) {
                    this.UtvalgIdField = value;
                    this.RaisePropertyChanged("UtvalgId");
                }
            }
        }
        
        /// <summary>
        /// Utvalgsmøtet saken behandles i.
        /// </summary>
        /// <value>Inneholder attributter om utvalgsmøtet saken behandles i.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgsmoete Utvalgsmoete {
            get {
                return this.UtvalgsmoeteField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgsmoeteField, value) != true)) {
                    this.UtvalgsmoeteField = value;
                    this.RaisePropertyChanged("Utvalgsmoete");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalgsmøtet saken behandles i.
        /// Tilsvarer NOARK4 feltet UB.MOID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtvalgsmoeteId {
            get {
                return this.UtvalgsmoeteIdField;
            }
            set {
                if ((this.UtvalgsmoeteIdField.Equals(value) != true)) {
                    this.UtvalgsmoeteIdField = value;
                    this.RaisePropertyChanged("UtvalgsmoeteId");
                }
            }
        }
        
        /// <summary>
        /// Utvalgssakstype som utvalgsbehandlingen er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter om utvalgssakstype som utvalgsbehandlingen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype Utvalgssakstype {
            get {
                return this.UtvalgssakstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgssakstypeField, value) != true)) {
                    this.UtvalgssakstypeField = value;
                    this.RaisePropertyChanged("Utvalgssakstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalgssakstype som utvalgsbehandlingen er knyttet til.
        /// Tilsvarer NOARK4 feltet US.SAKSTYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtvalgssakstypeId {
            get {
                return this.UtvalgssakstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgssakstypeIdField, value) != true)) {
                    this.UtvalgssakstypeIdField = value;
                    this.RaisePropertyChanged("UtvalgssakstypeId");
                }
            }
        }
        
        /// <summary>
        /// Saksprotokoll tilhørende utvalgsbehandlingen.
        /// </summary>
        /// <value>Inneholder attributter som beskriver behandlingsdokument for tilhørende saksprotokoll.</value>
        [System.Runtime.Serialization.DataMemberAttribute(Order=37)]
        public Gecko.NCore.Client.ObjectModel.V1.BehandlingDokument Saksprotokoll {
            get {
                return this.SaksprotokollField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksprotokollField, value) != true)) {
                    this.SaksprotokollField = value;
                    this.RaisePropertyChanged("Saksprotokoll");
                }
            }
        }
        
        /// <summary>
        /// Date and time created - Dato og klokkeslett for oppretting av recorden
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=38)]
        public System.Nullable<System.DateTime> Opprettet {
            get {
                return this.OpprettetField;
            }
            set {
                if ((this.OpprettetField.Equals(value) != true)) {
                    this.OpprettetField = value;
                    this.RaisePropertyChanged("Opprettet");
                }
            }
        }
        
        /// <summary>
        /// Date and time last updated - Dato og klokkeslett for sist oppdatering.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=39)]
        public System.Nullable<System.DateTime> SistOppdatert {
            get {
                return this.SistOppdatertField;
            }
            set {
                if ((this.SistOppdatertField.Equals(value) != true)) {
                    this.SistOppdatertField = value;
                    this.RaisePropertyChanged("SistOppdatert");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver de koder for behandlingsstatus som kan benyttes for saker som er til behandling i utvalg.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Behandlingsstatus", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Behandlingsstatus : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BehandletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KanSettesPaaSakskartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KoelisteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PaaSakskartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SorteringKoelisteField;
        
        /// <summary>
        /// Valgt dersom denne behandlingsstatus innebærer at saken har vært oppe til behandling (uavhengig av resultatet),
        /// og all informasjon knyttet til behandlingen skal låses for endringer, ikke valgt ellers.
        /// Dersom valgt skal det ikke være mulig å endre behandlingsstatus på noen av de foregående behandlingene i saken.
        /// Tilsvarer NOARK4 feltet BS.BEHANDLET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Behandlet {
            get {
                return this.BehandletField;
            }
            set {
                if ((this.BehandletField.Equals(value) != true)) {
                    this.BehandletField = value;
                    this.RaisePropertyChanged("Behandlet");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet BS.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet BS.STATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom saker med denne status kan settes på sakskartet, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet BS.KANSKART.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KanSettesPaaSakskart {
            get {
                return this.KanSettesPaaSakskartField;
            }
            set {
                if ((this.KanSettesPaaSakskartField.Equals(value) != true)) {
                    this.KanSettesPaaSakskartField = value;
                    this.RaisePropertyChanged("KanSettesPaaSakskart");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom saker med denne behandlingsstatus skal tas med i kølisten, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet BS.KOLISTE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Koeliste {
            get {
                return this.KoelisteField;
            }
            set {
                if ((this.KoelisteField.Equals(value) != true)) {
                    this.KoelisteField = value;
                    this.RaisePropertyChanged("Koeliste");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom saken er ferdig fra foregående ledd (administrasjonen, forrige utvalg) og er satt på sakskartet, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet BS.SAKSKART.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PaaSakskart {
            get {
                return this.PaaSakskartField;
            }
            set {
                if ((this.PaaSakskartField.Equals(value) != true)) {
                    this.PaaSakskartField = value;
                    this.RaisePropertyChanged("PaaSakskart");
                }
            }
        }
        
        /// <summary>
        /// Angir i hvilken rekkefølge saksframlegg med denne status og samme møtedato skal sorteres i kølisten for sakskart.
        /// Tilsvarer NOARK4 feltet BS.SORT1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SorteringKoeliste {
            get {
                return this.SorteringKoelisteField;
            }
            set {
                if ((this.SorteringKoelisteField.Equals(value) != true)) {
                    this.SorteringKoelisteField = value;
                    this.RaisePropertyChanged("SorteringKoeliste");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver journalføringen av et saksdokument i en sak.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Journalpost", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Journalpost : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdministrativEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AntallVedleggField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkivdel ArkivdelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivdelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ArkiveresPaaPapirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AvgraderingsdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Avgraderingskode AvgraderingskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvgraderingskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvsenderMottakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AvsenderMottaker[] AvsendereMottakereField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AvskrevetDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumentKategoriIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DokumentdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentlink[] DokumenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentkategori DokumentkategoriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DokumentnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumenttype DokumenttypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumenttypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EkspedertDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ForfallsdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FraAktivitetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn GodkjentAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GodkjentAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GodkjentDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HarRestanseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HjemmelUOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoveddokumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnholdsbeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InnholdsbeskrivelseUOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalaarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JournaldatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalenhet JournalenhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalenhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalstatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Lenke[] LenkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Merknad[] MerknaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OffentligInnholdsbeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OffentlighetsvurdertDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.PolitiskSaksgang[] PolitiskSaksgangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PublisertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn SaksbehandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaksbehandlerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SekvensnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SkjermAvsenderMottakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe TilgangsgruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilgangsgruppeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilleggskode TilleggskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UdatertDokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UtlaantDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn UtlaantTilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtlaantTilIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnholdsbeskrivelsePersonnavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MottattDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SistOppdatertField;
        
        /// <summary>
        /// The administrative unit of the case worker - Den administrative enhet som journalposten er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om den administrative enhet som journalposten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhet {
            get {
                return this.AdministrativEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativEnhetField, value) != true)) {
                    this.AdministrativEnhetField = value;
                    this.RaisePropertyChanged("AdministrativEnhet");
                }
            }
        }
        
        /// <summary>
        /// Reference to the administrative unit of the case worker - Referanse til den administrative enhet som journalposten er knyttet til.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdministrativEnhetId {
            get {
                return this.AdministrativEnhetIdField;
            }
            set {
                if ((this.AdministrativEnhetIdField.Equals(value) != true)) {
                    this.AdministrativEnhetIdField = value;
                    this.RaisePropertyChanged("AdministrativEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Count of appendices - Feltet skal automatisk oppdateres med det antall vedlegg som er tilknyttet journalposten, men skal kunne endres.
        /// Tilsvarer NOARK4 feltet JP.ANTVED.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AntallVedlegg {
            get {
                return this.AntallVedleggField;
            }
            set {
                if ((this.AntallVedleggField.Equals(value) != true)) {
                    this.AntallVedleggField = value;
                    this.RaisePropertyChanged("AntallVedlegg");
                }
            }
        }
        
        /// <summary>
        /// The record section of the registry entry -  Arkivdel som journalposten er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om arkivdelen som journalposten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkivdel Arkivdel {
            get {
                return this.ArkivdelField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivdelField, value) != true)) {
                    this.ArkivdelField = value;
                    this.RaisePropertyChanged("Arkivdel");
                }
            }
        }
        
        /// <summary>
        /// Reference to the record section of the registry entry - Referanse til arkivdelen hvor saksdokumentet skal arkiveres.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet JP.ARKDEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivdelId {
            get {
                return this.ArkivdelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivdelIdField, value) != true)) {
                    this.ArkivdelIdField = value;
                    this.RaisePropertyChanged("ArkivdelId");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicate that the registry entry is archived on paper - Valgt dersom hoveddokumentet tilknyttet denne journalposten skal arkiveres på papir, ikke valgt hvis hoveddokumentet skal
        /// arkiveres på elektronisk form.
        /// Tilsvarer NOARK4 feltet JP.PAPIR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ArkiveresPaaPapir {
            get {
                return this.ArkiveresPaaPapirField;
            }
            set {
                if ((this.ArkiveresPaaPapirField.Equals(value) != true)) {
                    this.ArkiveresPaaPapirField = value;
                    this.RaisePropertyChanged("ArkiveresPaaPapir");
                }
            }
        }
        
        /// <summary>
        /// Degrading date - Dato for avgradering eller annen aksjon i henhold til AvgraderingskodeId.
        /// Tilsvarer NOARK4 feltet JP.AGDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Avgraderingsdato {
            get {
                return this.AvgraderingsdatoField;
            }
            set {
                if ((this.AvgraderingsdatoField.Equals(value) != true)) {
                    this.AvgraderingsdatoField = value;
                    this.RaisePropertyChanged("Avgraderingsdato");
                }
            }
        }
        
        /// <summary>
        /// Degrading code - Avgraderingskoden som journalposten er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om avgraderingskoden som journalposten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Avgraderingskode Avgraderingskode {
            get {
                return this.AvgraderingskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AvgraderingskodeField, value) != true)) {
                    this.AvgraderingskodeField = value;
                    this.RaisePropertyChanged("Avgraderingskode");
                }
            }
        }
        
        /// <summary>
        /// Referance to the degrading code - Referanse til avgraderingsmåte.
        /// Oppslag mot tabellen Avgraderingskode.
        /// Tilsvarer NOARK4 feltet JP.AGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvgraderingskodeId {
            get {
                return this.AvgraderingskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AvgraderingskodeIdField, value) != true)) {
                    this.AvgraderingskodeIdField = value;
                    this.RaisePropertyChanged("AvgraderingskodeId");
                }
            }
        }
        
        /// <summary>
        /// Name of the first sender/receiver - Navn til første avsender/mottaker.
        /// Oppdateres automatisk på grunnlag av innholdet i tabellen AvsenderMottaker.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvsenderMottaker {
            get {
                return this.AvsenderMottakerField;
            }
            set {
                if ((object.ReferenceEquals(this.AvsenderMottakerField, value) != true)) {
                    this.AvsenderMottakerField = value;
                    this.RaisePropertyChanged("AvsenderMottaker");
                }
            }
        }
        
        /// <summary>
        /// Senders/Recipients - Avsendere/mottakere tilhørende journalposten.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver avsendere/mottakere tilhørende journalposten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AvsenderMottaker[] AvsendereMottakere {
            get {
                return this.AvsendereMottakereField;
            }
            set {
                if ((object.ReferenceEquals(this.AvsendereMottakereField, value) != true)) {
                    this.AvsendereMottakereField = value;
                    this.RaisePropertyChanged("AvsendereMottakere");
                }
            }
        }
        
        /// <summary>
        /// Depreciate date - Avskrivingsdato.
        /// Skal oppdateres automatisk når avskrivning er registrert på alle mottakere (med unntak av kopimottakere) og settes
        /// da til den seneste dato som der er angitt.
        /// Tilsvarer NOARK4 feltet JP.AVSKDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AvskrevetDato {
            get {
                return this.AvskrevetDatoField;
            }
            set {
                if ((this.AvskrevetDatoField.Equals(value) != true)) {
                    this.AvskrevetDatoField = value;
                    this.RaisePropertyChanged("AvskrevetDato");
                }
            }
        }
        
        /// <summary>
        /// Reference to the document category - Referanse til dokumentkategori.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DokumentKategoriId {
            get {
                return this.DokumentKategoriIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentKategoriIdField, value) != true)) {
                    this.DokumentKategoriIdField = value;
                    this.RaisePropertyChanged("DokumentKategoriId");
                }
            }
        }
        
        /// <summary>
        /// Document date - Den dato som er påført dokumentet.
        /// Tilsvarer NOARK4 feltet JP.DOKDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Dokumentdato {
            get {
                return this.DokumentdatoField;
            }
            set {
                if ((this.DokumentdatoField.Equals(value) != true)) {
                    this.DokumentdatoField = value;
                    this.RaisePropertyChanged("Dokumentdato");
                }
            }
        }
        
        /// <summary>
        /// Documents belonging to the registry entry- Dokumenter tilhørende journalposten.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver koblinger til dokumenter journalposten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentlink[] Dokumenter {
            get {
                return this.DokumenterField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenterField, value) != true)) {
                    this.DokumenterField = value;
                    this.RaisePropertyChanged("Dokumenter");
                }
            }
        }
        
        /// <summary>
        /// Document category - Dokumentkategorien som journalposten er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver dokumentkategorien som journalposten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentkategori Dokumentkategori {
            get {
                return this.DokumentkategoriField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentkategoriField, value) != true)) {
                    this.DokumentkategoriField = value;
                    this.RaisePropertyChanged("Dokumentkategori");
                }
            }
        }
        
        /// <summary>
        /// Document sequence number within the case - Dokumentnummer innen saken.
        /// Tildeles automatisk og kan ikke endres på annen måte enn ved flytting eller renummerering av en sak.
        /// Tilsvarer NOARK4 feltet JP.JPOSTNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Dokumentnr {
            get {
                return this.DokumentnrField;
            }
            set {
                if ((this.DokumentnrField.Equals(value) != true)) {
                    this.DokumentnrField = value;
                    this.RaisePropertyChanged("Dokumentnr");
                }
            }
        }
        
        /// <summary>
        /// Document type - Dokumenttypen journalposten er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver dokumenttypen journalposten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumenttype Dokumenttype {
            get {
                return this.DokumenttypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeField, value) != true)) {
                    this.DokumenttypeField = value;
                    this.RaisePropertyChanged("Dokumenttype");
                }
            }
        }
        
        /// <summary>
        /// Reference to the document type - Referanse til dokumenttype.
        /// Feltlengde: 1 tegn.
        /// Oppslag mot tabellen Noark dokumenttype.
        /// Tilsvarer NOARK4 feltet JP.NDOKTYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DokumenttypeId {
            get {
                return this.DokumenttypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeIdField, value) != true)) {
                    this.DokumenttypeIdField = value;
                    this.RaisePropertyChanged("DokumenttypeId");
                }
            }
        }
        
        /// <summary>
        /// Effectuation date - Dato for ekspedering. Oppdateres automatisk når ekspedering er registrert på alle mottakere
        /// (inkludert kopimottakere) og settes da til seneste dato.
        /// Tilsvarer NOARK4 feltet JP.EKSPDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EkspedertDato {
            get {
                return this.EkspedertDatoField;
            }
            set {
                if ((this.EkspedertDatoField.Equals(value) != true)) {
                    this.EkspedertDatoField = value;
                    this.RaisePropertyChanged("EkspedertDato");
                }
            }
        }
        
        /// <summary>
        /// Maturity date - Forfallsdato gitt av brevets avsender.
        /// Må ligge etter Dokumentdato i tid.
        /// Tilsvarer NOARK4 feltet JP.FORFDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Forfallsdato {
            get {
                return this.ForfallsdatoField;
            }
            set {
                if ((this.ForfallsdatoField.Equals(value) != true)) {
                    this.ForfallsdatoField = value;
                    this.RaisePropertyChanged("Forfallsdato");
                }
            }
        }
        
        /// <summary>
        /// From activity ID - Fra aktivitet.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FraAktivitet {
            get {
                return this.FraAktivitetField;
            }
            set {
                if ((this.FraAktivitetField.Equals(value) != true)) {
                    this.FraAktivitetField = value;
                    this.RaisePropertyChanged("FraAktivitet");
                }
            }
        }
        
        /// <summary>
        /// The person who will approve the registry entry - Personen som skal godkjenne/har godkjent journalposten.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som skal godkjenne/har godkjent journalposten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn GodkjentAv {
            get {
                return this.GodkjentAvField;
            }
            set {
                if ((object.ReferenceEquals(this.GodkjentAvField, value) != true)) {
                    this.GodkjentAvField = value;
                    this.RaisePropertyChanged("GodkjentAv");
                }
            }
        }
        
        /// <summary>
        /// Reference to the person who will approve the registry entry - Referanse til personen som skal godkjenne/har godkjent journalposten.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GodkjentAvid {
            get {
                return this.GodkjentAvidField;
            }
            set {
                if ((this.GodkjentAvidField.Equals(value) != true)) {
                    this.GodkjentAvidField = value;
                    this.RaisePropertyChanged("GodkjentAvid");
                }
            }
        }
        
        /// <summary>
        /// Approval date - Dato for godkjenning av journalpost.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GodkjentDato {
            get {
                return this.GodkjentDatoField;
            }
            set {
                if ((this.GodkjentDatoField.Equals(value) != true)) {
                    this.GodkjentDatoField = value;
                    this.RaisePropertyChanged("GodkjentDato");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the registry entry has arrears - Valgt dersom journalposten har restanse, ikke valgt ellers.
        /// Oppdateres automatisk basert på innholdet i tabellen AvsenderMottaker og journalstatus.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HarRestanse {
            get {
                return this.HarRestanseField;
            }
            set {
                if ((this.HarRestanseField.Equals(value) != true)) {
                    this.HarRestanseField = value;
                    this.RaisePropertyChanged("HarRestanse");
                }
            }
        }
        
        /// <summary>
        /// Authority to exempt from public access -  Henvisning til offentlighetsloven og/eller annet lovverk.
        /// Må ha innhold dersom Tilgangskode har et innhold forskjellig fra XX.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet JP.UOFF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HjemmelUOff {
            get {
                return this.HjemmelUOffField;
            }
            set {
                if ((object.ReferenceEquals(this.HjemmelUOffField, value) != true)) {
                    this.HjemmelUOffField = value;
                    this.RaisePropertyChanged("HjemmelUOff");
                }
            }
        }
        
        /// <summary>
        /// The file extension of the main docuemnt file. Used to show the proper icon for the file. Angivelse av type hoveddokument (filtype).
        /// Feltlengde: 10 tegn.
        /// Oppdateres automatisk - avledet fra hoveddokument.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HoveddokumentType {
            get {
                return this.HoveddokumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.HoveddokumentTypeField, value) != true)) {
                    this.HoveddokumentTypeField = value;
                    this.RaisePropertyChanged("HoveddokumentType");
                }
            }
        }
        
        /// <summary>
        /// Unique ID of the registry entry - Unik nøkkel til journalposten.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet JP.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Title/subject - Tittel.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet JP.INNHOLD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Innholdsbeskrivelse {
            get {
                return this.InnholdsbeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.InnholdsbeskrivelseField, value) != true)) {
                    this.InnholdsbeskrivelseField = value;
                    this.RaisePropertyChanged("Innholdsbeskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom hele eller deler av attributtet Innholdsbeskrivelse skal unntas offentligheten, ikke valgt ellers.
        /// Tillates kun valgt dersom tilgangskode er angitt. Skal settes automatisk til valgt ved nyregistrering med tilgangskode XX.
        /// Tilsvarer NOARK4 feltet JP.U1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> InnholdsbeskrivelseUOff {
            get {
                return this.InnholdsbeskrivelseUOffField;
            }
            set {
                if ((this.InnholdsbeskrivelseUOffField.Equals(value) != true)) {
                    this.InnholdsbeskrivelseUOffField = value;
                    this.RaisePropertyChanged("InnholdsbeskrivelseUOff");
                }
            }
        }
        
        /// <summary>
        /// Løpenummer, 1. ledd.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet JP.JAAR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Journalaar {
            get {
                return this.JournalaarField;
            }
            set {
                if ((this.JournalaarField.Equals(value) != true)) {
                    this.JournalaarField = value;
                    this.RaisePropertyChanged("Journalaar");
                }
            }
        }
        
        /// <summary>
        /// Dato ved journalføring av journalpost.
        /// Tilsvarer NOARK4 feltet JP.JDATO
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Journaldato {
            get {
                return this.JournaldatoField;
            }
            set {
                if ((this.JournaldatoField.Equals(value) != true)) {
                    this.JournaldatoField = value;
                    this.RaisePropertyChanged("Journaldato");
                }
            }
        }
        
        /// <summary>
        /// Journalenhet journalposten er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver journalenheten journalposten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalenhet Journalenhet {
            get {
                return this.JournalenhetField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetField, value) != true)) {
                    this.JournalenhetField = value;
                    this.RaisePropertyChanged("Journalenhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til journalenheten journalposten er knyttet til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalenhetId {
            get {
                return this.JournalenhetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetIdField, value) != true)) {
                    this.JournalenhetIdField = value;
                    this.RaisePropertyChanged("JournalenhetId");
                }
            }
        }
        
        /// <summary>
        /// Journalstatus som journalposten har.
        /// </summary>
        /// <value>Inneholder detaljer om den journalstatus som journalposten har.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalstatus Journalstatus {
            get {
                return this.JournalstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusField, value) != true)) {
                    this.JournalstatusField = value;
                    this.RaisePropertyChanged("Journalstatus");
                }
            }
        }
        
        /// <summary>
        /// Referanse til journalstatus.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Journalstatus.
        /// Tilsvarer NOARK4 feltet JP.STATUS
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalstatusId {
            get {
                return this.JournalstatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusIdField, value) != true)) {
                    this.JournalstatusIdField = value;
                    this.RaisePropertyChanged("JournalstatusId");
                }
            }
        }
        
        /// <summary>
        /// Lenker til journalposten.
        /// </summary>
        /// <value>Inneholder attributter som beskriver lenker som er tilknyttet journalposten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Lenke[] Lenker {
            get {
                return this.LenkerField;
            }
            set {
                if ((object.ReferenceEquals(this.LenkerField, value) != true)) {
                    this.LenkerField = value;
                    this.RaisePropertyChanged("Lenker");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom journalposten har vært lest (åpnet i detaljvisning eller for redigering) av pålogget bruker,
        /// ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Lest {
            get {
                return this.LestField;
            }
            set {
                if ((this.LestField.Equals(value) != true)) {
                    this.LestField = value;
                    this.RaisePropertyChanged("Lest");
                }
            }
        }
        
        /// <summary>
        /// Merknader knyttet til journalposten.
        /// </summary>
        /// <value></value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Merknad[] Merknader {
            get {
                return this.MerknaderField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknaderField, value) != true)) {
                    this.MerknaderField = value;
                    this.RaisePropertyChanged("Merknader");
                }
            }
        }
        
        /// <summary>
        /// The title of the case visible to the public - Bearbeidet innholdsbeskrivelse hvor informasjon som skal unntas offentligheten er skjermet/fjernet.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OffentligInnholdsbeskrivelse {
            get {
                return this.OffentligInnholdsbeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.OffentligInnholdsbeskrivelseField, value) != true)) {
                    this.OffentligInnholdsbeskrivelseField = value;
                    this.RaisePropertyChanged("OffentligInnholdsbeskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Den dato offentlighetsvurdering er foretatt.
        /// Tilsvarer NOARK4 feltet JP.OVDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OffentlighetsvurdertDato {
            get {
                return this.OffentlighetsvurdertDatoField;
            }
            set {
                if ((this.OffentlighetsvurdertDatoField.Equals(value) != true)) {
                    this.OffentlighetsvurdertDatoField = value;
                    this.RaisePropertyChanged("OffentlighetsvurdertDato");
                }
            }
        }
        
        /// <summary>
        /// - Politisk saksgang knyttet til journalposten.
        /// </summary>
        /// <value></value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.PolitiskSaksgang[] PolitiskSaksgang {
            get {
                return this.PolitiskSaksgangField;
            }
            set {
                if ((object.ReferenceEquals(this.PolitiskSaksgangField, value) != true)) {
                    this.PolitiskSaksgangField = value;
                    this.RaisePropertyChanged("PolitiskSaksgang");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the registry entry is published - Valgt dersom journalposten kan publiseres, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Publisert {
            get {
                return this.PublisertField;
            }
            set {
                if ((this.PublisertField.Equals(value) != true)) {
                    this.PublisertField = value;
                    this.RaisePropertyChanged("Publisert");
                }
            }
        }
        
        /// <summary>
        /// The case the registry entry belongs to - Saken journalposten er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken journalposten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// reference to the case the registry entry belongs to - Referanse til sak.
        /// Overført fra saken og kan ikke endres annet enn i forbindelse med flytting av journalpost til ny sak.
        /// Tilsvarer NOARK4 feltet JP.SAID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
        
        /// <summary>
        /// Case worker/officer - Journalpostens saksbehandler.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som er journalpostens saksbehandler.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn Saksbehandler {
            get {
                return this.SaksbehandlerField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksbehandlerField, value) != true)) {
                    this.SaksbehandlerField = value;
                    this.RaisePropertyChanged("Saksbehandler");
                }
            }
        }
        
        /// <summary>
        /// Reference to the case worker/officer  Referanse til den personen som er påført som journalpostens saksbehandler.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SaksbehandlerId {
            get {
                return this.SaksbehandlerIdField;
            }
            set {
                if ((this.SaksbehandlerIdField.Equals(value) != true)) {
                    this.SaksbehandlerIdField = value;
                    this.RaisePropertyChanged("SaksbehandlerId");
                }
            }
        }
        
        /// <summary>
        /// Sequence number of the registry entry within a calendar year - Løpenummer, 2. ledd.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet JP.SEKNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sekvensnummer {
            get {
                return this.SekvensnummerField;
            }
            set {
                if ((this.SekvensnummerField.Equals(value) != true)) {
                    this.SekvensnummerField = value;
                    this.RaisePropertyChanged("Sekvensnummer");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the sender/recipient should be hidden - Valgt dersom avsender-/mottakerfeltet skal skjermes, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SkjermAvsenderMottaker {
            get {
                return this.SkjermAvsenderMottakerField;
            }
            set {
                if ((this.SkjermAvsenderMottakerField.Equals(value) != true)) {
                    this.SkjermAvsenderMottakerField = value;
                    this.RaisePropertyChanged("SkjermAvsenderMottaker");
                }
            }
        }
        
        /// <summary>
        /// Access group - Tilgangsgruppen som journalposten er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangsgruppen som journalposten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe Tilgangsgruppe {
            get {
                return this.TilgangsgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeField, value) != true)) {
                    this.TilgangsgruppeField = value;
                    this.RaisePropertyChanged("Tilgangsgruppe");
                }
            }
        }
        
        /// <summary>
        /// Reference to the access group - Referanse til tilgangsgruppe.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet JP.TGGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilgangsgruppeId {
            get {
                return this.TilgangsgruppeIdField;
            }
            set {
                if ((this.TilgangsgruppeIdField.Equals(value) != true)) {
                    this.TilgangsgruppeIdField = value;
                    this.RaisePropertyChanged("TilgangsgruppeId");
                }
            }
        }
        
        /// <summary>
        /// Access code - Tilgangskoden journalposten er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangskoden journalposten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Reference to the access code - Referanse til tilgangskode.
        /// Tilsvarer NOARK4 feltet JP.TGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #1 - Tilleggsattributt nummer 1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt1 {
            get {
                return this.TilleggsAttributt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt1Field, value) != true)) {
                    this.TilleggsAttributt1Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt1");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #10 - Tilleggsattributt nummer 10.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt10 {
            get {
                return this.TilleggsAttributt10Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt10Field, value) != true)) {
                    this.TilleggsAttributt10Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt10");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #2 - Tilleggsattributt nummer 2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt2 {
            get {
                return this.TilleggsAttributt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt2Field, value) != true)) {
                    this.TilleggsAttributt2Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt2");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #3 - Tilleggsattributt nummer 3.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt3 {
            get {
                return this.TilleggsAttributt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt3Field, value) != true)) {
                    this.TilleggsAttributt3Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt3");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #4 - Tilleggsattributt nummer 4.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt4 {
            get {
                return this.TilleggsAttributt4Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt4Field, value) != true)) {
                    this.TilleggsAttributt4Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt4");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #5 - Tilleggsattributt nummer 5.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt5 {
            get {
                return this.TilleggsAttributt5Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt5Field, value) != true)) {
                    this.TilleggsAttributt5Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt5");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #6 - Tilleggsattributt nummer 6.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt6 {
            get {
                return this.TilleggsAttributt6Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt6Field, value) != true)) {
                    this.TilleggsAttributt6Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt6");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #7 - Tilleggsattributt nummer 7.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt7 {
            get {
                return this.TilleggsAttributt7Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt7Field, value) != true)) {
                    this.TilleggsAttributt7Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt7");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #8 - Tilleggsattributt nummer 8.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt8 {
            get {
                return this.TilleggsAttributt8Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt8Field, value) != true)) {
                    this.TilleggsAttributt8Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt8");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #9 - Tilleggsattributt nummer 9.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt9 {
            get {
                return this.TilleggsAttributt9Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt9Field, value) != true)) {
                    this.TilleggsAttributt9Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt9");
                }
            }
        }
        
        /// <summary>
        /// Additional code - Tilleggskoden som journalposten er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon om tilleggskoden som journalposten er knyttet til</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilleggskode Tilleggskode {
            get {
                return this.TilleggskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggskodeField, value) != true)) {
                    this.TilleggskodeField = value;
                    this.RaisePropertyChanged("Tilleggskode");
                }
            }
        }
        
        /// <summary>
        /// Reference to the additional code -  Referanse til tilleggskode for K-kodesystemet eller andre tilleggskoder.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tilleggskoder for K-kodesystemet eller eget tabellen Tilleggskode.
        /// Tilsvarer NOARK4 feltet JP.TLKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggskodeId {
            get {
                return this.TilleggskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggskodeIdField, value) != true)) {
                    this.TilleggskodeIdField = value;
                    this.RaisePropertyChanged("TilleggskodeId");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicate that the document date is empty - Valgt dersom dokumentene tilknyttet denne journalposten ikke er datert, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet JP.UDATERT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UdatertDokument {
            get {
                return this.UdatertDokumentField;
            }
            set {
                if ((this.UdatertDokumentField.Equals(value) != true)) {
                    this.UdatertDokumentField = value;
                    this.RaisePropertyChanged("UdatertDokument");
                }
            }
        }
        
        /// <summary>
        /// Loan date - Dato for utlån.
        /// Tilsvarer NOARK4 feltet JP.UTLDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UtlaantDato {
            get {
                return this.UtlaantDatoField;
            }
            set {
                if ((this.UtlaantDatoField.Equals(value) != true)) {
                    this.UtlaantDatoField = value;
                    this.RaisePropertyChanged("UtlaantDato");
                }
            }
        }
        
        /// <summary>
        /// The person that have loaned the papers of the registry entry - Personen som har lånt journalposten.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som har lånt journalposten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn UtlaantTil {
            get {
                return this.UtlaantTilField;
            }
            set {
                if ((object.ReferenceEquals(this.UtlaantTilField, value) != true)) {
                    this.UtlaantTilField = value;
                    this.RaisePropertyChanged("UtlaantTil");
                }
            }
        }
        
        /// <summary>
        /// Reference to the person that have loaned the papers of the registry entry - Referanse til den person som har lånt dokumentet.
        /// Tilsvarer NOARK4 feltet JP.UTLTIL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtlaantTilId {
            get {
                return this.UtlaantTilIdField;
            }
            set {
                if ((this.UtlaantTilIdField.Equals(value) != true)) {
                    this.UtlaantTilIdField = value;
                    this.RaisePropertyChanged("UtlaantTilId");
                }
            }
        }
        
        /// <summary>
        /// The title of the registry entry including tagging of any instances of names in the text - Jorunalposttittel med skjerming og tagging av personnavn.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=70)]
        public string InnholdsbeskrivelsePersonnavn {
            get {
                return this.InnholdsbeskrivelsePersonnavnField;
            }
            set {
                if ((object.ReferenceEquals(this.InnholdsbeskrivelsePersonnavnField, value) != true)) {
                    this.InnholdsbeskrivelsePersonnavnField = value;
                    this.RaisePropertyChanged("InnholdsbeskrivelsePersonnavn");
                }
            }
        }
        
        /// <summary>
        /// Dato for når journalposten er mottatt.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=71)]
        public System.Nullable<System.DateTime> MottattDato {
            get {
                return this.MottattDatoField;
            }
            set {
                if ((this.MottattDatoField.Equals(value) != true)) {
                    this.MottattDatoField = value;
                    this.RaisePropertyChanged("MottattDato");
                }
            }
        }
        
        /// <summary>
        /// Date and time created - Dato og klokkeslett for oppretting av recorden
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=72)]
        public System.Nullable<System.DateTime> Opprettet {
            get {
                return this.OpprettetField;
            }
            set {
                if ((this.OpprettetField.Equals(value) != true)) {
                    this.OpprettetField = value;
                    this.RaisePropertyChanged("Opprettet");
                }
            }
        }
        
        /// <summary>
        /// Date and time last updated - Dato og klokkeslett for sist oppdatering.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=73)]
        public System.Nullable<System.DateTime> SistOppdatert {
            get {
                return this.SistOppdatertField;
            }
            set {
                if ((this.SistOppdatertField.Equals(value) != true)) {
                    this.SistOppdatertField = value;
                    this.RaisePropertyChanged("SistOppdatert");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder avsendere og mottakere.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvsenderMottaker", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AvsenderMottaker : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdministrativEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Adresseregister AdressatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdressatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AvsenderMottakerUOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost AvskrivesAvDokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AvskrivesAvDokumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Avskrivingsmaate AvskrivingsmaateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AvskrivningsdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvskrivningsmaateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BehandlingsansvarligField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BehandlingsfristField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost BesvarerDokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BesvarerDokumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPostAdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Forsendelsesmaate ForsendelsesmaateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForsendelsesmaateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Forsendelsesstatus ForsendelsesstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForsendelsesstatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GruppemottakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrupperingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HarRestanseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InnholdstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalenhet JournalenhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalenhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalpostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KontaktField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KopimottakerMedavsenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KortnavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostadresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoststedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferanseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReferansedatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn SaksbehandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaksbehandlerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TildeltSaksbehandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtlandsadresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VarsleMedEpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Identifikasjonstype IdentifikasjonstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifikasjonstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganisasjonsnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SistOppdatertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PersonField;
        
        /// <summary>
        /// Administrative unit of the case worker - Saksbehandlerens administrative enhet.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saksbehandlerens administrative enhet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhet {
            get {
                return this.AdministrativEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativEnhetField, value) != true)) {
                    this.AdministrativEnhetField = value;
                    this.RaisePropertyChanged("AdministrativEnhet");
                }
            }
        }
        
        /// <summary>
        /// Reference to the administrative unit of the case worker - Referanse til saksbehandlerens adm. enhet. For avsender hentes standardverdi fra innlogget bruker
        /// når saksbehandleren selv registrerer, ellers fast verdi 0 (ikke angitt). For eksterne
        /// avsendere og mottakere benyttes alltid fast verdi 0.
        /// Oppslag mot tabellen Administrativ inndeling.
        /// Tilsvarer NOARK4 feltet AM.ADMID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdministrativEnhetId {
            get {
                return this.AdministrativEnhetIdField;
            }
            set {
                if ((this.AdministrativEnhetIdField.Equals(value) != true)) {
                    this.AdministrativEnhetIdField = value;
                    this.RaisePropertyChanged("AdministrativEnhetId");
                }
            }
        }
        
        /// <summary>
        /// - Addressat i adresseregisteret.
        /// </summary>
        /// <value>Inneholder attributter som beskriver adressaten som avsender/mottaker er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Adresseregister Adressat {
            get {
                return this.AdressatField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressatField, value) != true)) {
                    this.AdressatField = value;
                    this.RaisePropertyChanged("Adressat");
                }
            }
        }
        
        /// <summary>
        /// - Henvisning til adressat i adresseregister.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdressatId {
            get {
                return this.AdressatIdField;
            }
            set {
                if ((this.AdressatIdField.Equals(value) != true)) {
                    this.AdressatIdField = value;
                    this.RaisePropertyChanged("AdressatId");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the Address entry is exempt from public access -  Valgt dersom navn (og adresse) til den avsender (kun dokumenttype I) eller mottaker
        /// (kun dokumenttype U) registreringen gjelder, skal unntas offentligheten, ikke valgt ellers.
        /// Kun tillatt valgt dersom tilgangskode er angitt på journalposten.
        /// Settes automatisk til valgt ved nyregistrering når journalposten har tilgangskode XX.
        /// Tilsvarer NOARK4 feltet AM.U1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AvsenderMottakerUOff {
            get {
                return this.AvsenderMottakerUOffField;
            }
            set {
                if ((this.AvsenderMottakerUOffField.Equals(value) != true)) {
                    this.AvsenderMottakerUOffField = value;
                    this.RaisePropertyChanged("AvsenderMottakerUOff");
                }
            }
        }
        
        /// <summary>
        /// The registry entry that depreciate this address entry - Journalposten som avskriver denne journalposten.
        /// </summary>
        /// <value>Inneholder attributter som beskriver journalposten som avskriver denne journalposten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost AvskrivesAvDokument {
            get {
                return this.AvskrivesAvDokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.AvskrivesAvDokumentField, value) != true)) {
                    this.AvskrivesAvDokumentField = value;
                    this.RaisePropertyChanged("AvskrivesAvDokument");
                }
            }
        }
        
        /// <summary>
        /// Reference to the registry entry that depreciate this address entry - Referanse til journalpost som avskriver dette dokumentet for denne mottakeren.
        /// Må ha innhold dersom Avskrivningsmåte er BU.
        /// Benyttes for mottakere på dokumenttype I, N og eventuelt X og skal da
        /// inneholde Journalpost ID til det dokumentet som avskriver (besvarer) dette dokumentet
        /// for denne mottakeren. Kan også benyttes på dokumenttype U for å registrere
        /// referanse til et inngående dokument som besvarer det utgående.
        /// Tilsvarer NOARK4 feltet AM.AVSKAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AvskrivesAvDokumentId {
            get {
                return this.AvskrivesAvDokumentIdField;
            }
            set {
                if ((this.AvskrivesAvDokumentIdField.Equals(value) != true)) {
                    this.AvskrivesAvDokumentIdField = value;
                    this.RaisePropertyChanged("AvskrivesAvDokumentId");
                }
            }
        }
        
        /// <summary>
        /// Mode of depreciation - Avskrivingsmåte.
        /// </summary>
        /// <value>Inneholder attributter som beskriver avskrivingsmåten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Avskrivingsmaate Avskrivingsmaate {
            get {
                return this.AvskrivingsmaateField;
            }
            set {
                if ((object.ReferenceEquals(this.AvskrivingsmaateField, value) != true)) {
                    this.AvskrivingsmaateField = value;
                    this.RaisePropertyChanged("Avskrivingsmaate");
                }
            }
        }
        
        /// <summary>
        /// Depriciation date - Avskrivingsdato.
        /// Må ha innhold dersom Avskrivningsmåte har innhold. Benyttes kun for mottakere
        /// på dokumenttype I og N. Ved avskrivning med svardokument skal feltet
        /// automatisk oppdateres med dokumentdato til svardokumentet og ikke kunne endres.
        /// For andre avskrivningsmåter oppdateres feltet manuelt men skal ikke kunne
        /// inneholde en dato som ligger før journaldato i tid.
        /// Tilsvarer NOARK4 feltet AM.AVSKDATO
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Avskrivningsdato {
            get {
                return this.AvskrivningsdatoField;
            }
            set {
                if ((this.AvskrivningsdatoField.Equals(value) != true)) {
                    this.AvskrivningsdatoField = value;
                    this.RaisePropertyChanged("Avskrivningsdato");
                }
            }
        }
        
        /// <summary>
        /// Reference to the mode of depreciation - Avskrivingsmåte. Benyttes kun for mottakere på dokumenttype I og N.
        /// Oppslag mot tabellen Avskrivningsmåte.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet AM.AVSKM.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvskrivningsmaateId {
            get {
                return this.AvskrivningsmaateIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AvskrivningsmaateIdField, value) != true)) {
                    this.AvskrivningsmaateIdField = value;
                    this.RaisePropertyChanged("AvskrivningsmaateId");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the address entry contains information about who is responsible for the handling of the registry entry - case worker is the Valgt dersom det primære ansvar for behandlingen av dokumentet ligger hos den adm. enhet
        /// som er angitt på denne posten, ikke valgt ellers. En og bare en av avsender/mottakerpostene som
        /// er knyttet til en journalpost skal være valgt her. For dokumenter av type I skal dette være
        /// en mottakerpost, for de øvrige dokumenttyper en avsenderpost. Det tillates ikke at
        /// Kopimottaker og Behandlingsansvarlig begge er valgt på samme post.
        /// Tilsvarer NOARK4 feltet AM.BEHANSV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Behandlingsansvarlig {
            get {
                return this.BehandlingsansvarligField;
            }
            set {
                if ((this.BehandlingsansvarligField.Equals(value) != true)) {
                    this.BehandlingsansvarligField = value;
                    this.RaisePropertyChanged("Behandlingsansvarlig");
                }
            }
        }
        
        /// <summary>
        /// - Frist for behandling.
        /// Benyttes for mottakere av dokumenttype I og N
        /// Tilsvarer NOARK4 feltet AM_FRIST.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Behandlingsfrist {
            get {
                return this.BehandlingsfristField;
            }
            set {
                if ((this.BehandlingsfristField.Equals(value) != true)) {
                    this.BehandlingsfristField = value;
                    this.RaisePropertyChanged("Behandlingsfrist");
                }
            }
        }
        
        /// <summary>
        /// The registry entry that is replied to by this registry entry - Journalposten som denne journalposten besvarer.
        /// </summary>
        /// <value>Inneholder attributter som beskriver journalposten som denne journalposten besvarer.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost BesvarerDokument {
            get {
                return this.BesvarerDokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.BesvarerDokumentField, value) != true)) {
                    this.BesvarerDokumentField = value;
                    this.RaisePropertyChanged("BesvarerDokument");
                }
            }
        }
        
        /// <summary>
        /// Reference to the registry entry that is replied to by this registry entry - Referanse til journalpost som besvares med dette dokument.
        /// Attributtet benyttes for mottakere på dokumenttype U, N og X og skal da inneholde
        /// Journalpost ID til det dokumentet som besvares. Dersom samme dokument besvarer flere
        /// dokumenter fra samme avsender benyttes verdien 0 for å signalisere dette. Hvilke
        /// dokumenter som besvares framgår da av Avskrives av dokument på avsenderpostene til
        /// de dokumentene som besvares.
        /// Tilsvarer NOARK4 feltet AM.BESVAR
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BesvarerDokumentId {
            get {
                return this.BesvarerDokumentIdField;
            }
            set {
                if ((this.BesvarerDokumentIdField.Equals(value) != true)) {
                    this.BesvarerDokumentIdField = value;
                    this.RaisePropertyChanged("BesvarerDokumentId");
                }
            }
        }
        
        /// <summary>
        /// E-mail address - E-post adresse.
        /// Feltlengde: 1200 tegn.
        /// Tilsvarer NOARK4 feltet AM.EPOSTADR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPostAdresse {
            get {
                return this.EPostAdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.EPostAdresseField, value) != true)) {
                    this.EPostAdresseField = value;
                    this.RaisePropertyChanged("EPostAdresse");
                }
            }
        }
        
        /// <summary>
        /// Telefax number - Telefaksnummer.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Faks {
            get {
                return this.FaksField;
            }
            set {
                if ((object.ReferenceEquals(this.FaksField, value) != true)) {
                    this.FaksField = value;
                    this.RaisePropertyChanged("Faks");
                }
            }
        }
        
        /// <summary>
        /// Sending method - Forsendelsesmåte.
        /// </summary>
        /// <value>Inneholder attributter som beskriver forsendelsesmåten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Forsendelsesmaate Forsendelsesmaate {
            get {
                return this.ForsendelsesmaateField;
            }
            set {
                if ((object.ReferenceEquals(this.ForsendelsesmaateField, value) != true)) {
                    this.ForsendelsesmaateField = value;
                    this.RaisePropertyChanged("Forsendelsesmaate");
                }
            }
        }
        
        /// <summary>
        /// Reference to the sending method - Referanse til forsendelsesmåte.
        /// Oppslag mot tabellen Forsendelsesmåte.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet AM.FORSEND.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForsendelsesmaateId {
            get {
                return this.ForsendelsesmaateIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ForsendelsesmaateIdField, value) != true)) {
                    this.ForsendelsesmaateIdField = value;
                    this.RaisePropertyChanged("ForsendelsesmaateId");
                }
            }
        }
        
        /// <summary>
        /// Sending status - Forsendelsesstatus.
        /// </summary>
        /// <value>Inneholder attributter som beskriver forsendelsesstatusen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Forsendelsesstatus Forsendelsesstatus {
            get {
                return this.ForsendelsesstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ForsendelsesstatusField, value) != true)) {
                    this.ForsendelsesstatusField = value;
                    this.RaisePropertyChanged("Forsendelsesstatus");
                }
            }
        }
        
        /// <summary>
        /// Reference to the sending status - Referanse til forsendelsesstatus. Benyttes for dokument sendt eller mottatt elektronisk.
        /// Oppslag mot tabellen Forsendelsesstatus.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet AM.FSSTATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForsendelsesstatusId {
            get {
                return this.ForsendelsesstatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ForsendelsesstatusIdField, value) != true)) {
                    this.ForsendelsesstatusIdField = value;
                    this.RaisePropertyChanged("ForsendelsesstatusId");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the recipient is a group of recipients - Valgt dersom denne mottakerposten representerer en gruppe av mottakere, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet AM.GRUPPEMOT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Gruppemottaker {
            get {
                return this.GruppemottakerField;
            }
            set {
                if ((this.GruppemottakerField.Equals(value) != true)) {
                    this.GruppemottakerField = value;
                    this.RaisePropertyChanged("Gruppemottaker");
                }
            }
        }
        
        /// <summary>
        /// Kode, f.eks. et kortnavn, som benyttes til å binde sammen registreringen av medlemmene i en
        /// adressegruppe og registreringen av gruppen selv.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet AM.GRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gruppering {
            get {
                return this.GrupperingField;
            }
            set {
                if ((object.ReferenceEquals(this.GrupperingField, value) != true)) {
                    this.GrupperingField = value;
                    this.RaisePropertyChanged("Gruppering");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the address entry has arrears - Valgt hvis behandlingsansvarlig har restanse, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HarRestanse {
            get {
                return this.HarRestanseField;
            }
            set {
                if ((this.HarRestanseField.Equals(value) != true)) {
                    this.HarRestanseField = value;
                    this.RaisePropertyChanged("HarRestanse");
                }
            }
        }
        
        /// <summary>
        /// Unique ID - Unik id. Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet AM.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Flag that is true if the address entry is a recipient and false if it is a sender - Valgt hvis posten inneholder en mottaker, ikke valgt hvis den inneholder en avsender.
        /// Standardverdi ikke valgt for dokumenttype I og valgt for de øvrige dokumenttyper.
        /// Tilsvarer NOARK4 feltet AM.IHTYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Innholdstype {
            get {
                return this.InnholdstypeField;
            }
            set {
                if ((this.InnholdstypeField.Equals(value) != true)) {
                    this.InnholdstypeField = value;
                    this.RaisePropertyChanged("Innholdstype");
                }
            }
        }
        
        /// <summary>
        /// Case workers record unit - Saksbehandlers journalenhet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver saksbehandlers journalenhet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalenhet Journalenhet {
            get {
                return this.JournalenhetField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetField, value) != true)) {
                    this.JournalenhetField = value;
                    this.RaisePropertyChanged("Journalenhet");
                }
            }
        }
        
        /// <summary>
        /// Reference to the case workers record unit. Referanse til saksbehandlers journalenhet. (Interne avsendere og mottakere kan tilhøre forskjellige
        /// journalenheter.)
        /// Oppslag mot tabellen Journalenhet.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet AM.JENHET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalenhetId {
            get {
                return this.JournalenhetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetIdField, value) != true)) {
                    this.JournalenhetIdField = value;
                    this.RaisePropertyChanged("JournalenhetId");
                }
            }
        }
        
        /// <summary>
        /// The record entry the recipient is connected to - Journalposten avsender/mottaker er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalposten som avsender/mottaker er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Reference to the record entry the recipient is connected to - Unik referanse til journalpost som avsender/mottaker er knyttet til. Oppdateres automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet AM.JPID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalpostId {
            get {
                return this.JournalpostIdField;
            }
            set {
                if ((this.JournalpostIdField.Equals(value) != true)) {
                    this.JournalpostIdField = value;
                    this.RaisePropertyChanged("JournalpostId");
                }
            }
        }
        
        /// <summary>
        /// Attention - Kontaktperson.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kontakt {
            get {
                return this.KontaktField;
            }
            set {
                if ((object.ReferenceEquals(this.KontaktField, value) != true)) {
                    this.KontaktField = value;
                    this.RaisePropertyChanged("Kontakt");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the recipient is on the CC-list - iValgt dersom mottakeren er en kopimottaker eller dersom avsenderen er en medavsender,
        /// ikke valgt ellers. Minst en mottaker og kun en avsender skal ikke være kopimottaker.
        /// Tilsvarer NOARK4 feltet AM.KOPIMOT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KopimottakerMedavsender {
            get {
                return this.KopimottakerMedavsenderField;
            }
            set {
                if ((this.KopimottakerMedavsenderField.Equals(value) != true)) {
                    this.KopimottakerMedavsenderField = value;
                    this.RaisePropertyChanged("KopimottakerMedavsender");
                }
            }
        }
        
        /// <summary>
        /// Shortname -  Kortkode.
        /// Feltlengde: 15 tegn.
        /// Tilsvarer NOARK4 feltet AM.KORTNAVN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kortnavn {
            get {
                return this.KortnavnField;
            }
            set {
                if ((object.ReferenceEquals(this.KortnavnField, value) != true)) {
                    this.KortnavnField = value;
                    this.RaisePropertyChanged("Kortnavn");
                }
            }
        }
        
        /// <summary>
        /// Date and time when case worker read the record entry - Tidspunkt for når saksbehandler har lest journalpost.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Lest {
            get {
                return this.LestField;
            }
            set {
                if ((this.LestField.Equals(value) != true)) {
                    this.LestField = value;
                    this.RaisePropertyChanged("Lest");
                }
            }
        }
        
        /// <summary>
        /// Name of the sender/recipient - Avsender eller mottakers navn.
        /// Må være angitt for eksterne mottakere ved dokumenttype U og avsendere ved dokumenttype I.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet AM.NAVN
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Navn {
            get {
                return this.NavnField;
            }
            set {
                if ((object.ReferenceEquals(this.NavnField, value) != true)) {
                    this.NavnField = value;
                    this.RaisePropertyChanged("Navn");
                }
            }
        }
        
        /// <summary>
        /// Mail address - Postadresse.
        /// Feltlengde: 120 tegn.
        /// Tilsvarer NOARK4 feltet AM.ADRESSE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postadresse {
            get {
                return this.PostadresseField;
            }
            set {
                if ((object.ReferenceEquals(this.PostadresseField, value) != true)) {
                    this.PostadresseField = value;
                    this.RaisePropertyChanged("Postadresse");
                }
            }
        }
        
        /// <summary>
        /// Postal code - Postnummer.
        /// Feltlengde: 5 tegn.
        /// Tilsvarer NOARK4 feltet AM.POSTNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postnr {
            get {
                return this.PostnrField;
            }
            set {
                if ((object.ReferenceEquals(this.PostnrField, value) != true)) {
                    this.PostnrField = value;
                    this.RaisePropertyChanged("Postnr");
                }
            }
        }
        
        /// <summary>
        /// City/Post town -  Poststed.
        /// Feltlengde: 60 tegn.
        /// Tilsvarer NOARK4 feltet AM.POSTSTED.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Poststed {
            get {
                return this.PoststedField;
            }
            set {
                if ((object.ReferenceEquals(this.PoststedField, value) != true)) {
                    this.PoststedField = value;
                    this.RaisePropertyChanged("Poststed");
                }
            }
        }
        
        /// <summary>
        /// Reference - Referanse. For "Vår referanse" på inngående brev og "Deres referanse" på utgående brev.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet AM.REF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Referanse {
            get {
                return this.ReferanseField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferanseField, value) != true)) {
                    this.ReferanseField = value;
                    this.RaisePropertyChanged("Referanse");
                }
            }
        }
        
        /// <summary>
        /// Reference date in the document - Referansedato på dokument.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Referansedato {
            get {
                return this.ReferansedatoField;
            }
            set {
                if ((this.ReferansedatoField.Equals(value) != true)) {
                    this.ReferansedatoField = value;
                    this.RaisePropertyChanged("Referansedato");
                }
            }
        }
        
        /// <summary>
        /// The case worker - Personen som er saksbehandler.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som er saksbehandler.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn Saksbehandler {
            get {
                return this.SaksbehandlerField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksbehandlerField, value) != true)) {
                    this.SaksbehandlerField = value;
                    this.RaisePropertyChanged("Saksbehandler");
                }
            }
        }
        
        /// <summary>
        /// Reference to the caseworker - Referanse til den person som er saksbehandler. For avsender hentes standardverdi
        /// fra innlogget bruker når saksbehandleren selv registrerer, ellers fast verdi 0 (ikke angitt).
        /// For eksterne avsendere og mottakere benyttes alltid fast verdi 0.
        /// Oppslag mot tabellen Personnavn.
        /// Tilsvarer NOARK4 feltet AM_SBHID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SaksbehandlerId {
            get {
                return this.SaksbehandlerIdField;
            }
            set {
                if ((this.SaksbehandlerIdField.Equals(value) != true)) {
                    this.SaksbehandlerIdField = value;
                    this.RaisePropertyChanged("SaksbehandlerId");
                }
            }
        }
        
        /// <summary>
        /// Telephone number - Telefonnummer.
        /// Feltlengde: 20 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefon {
            get {
                return this.TelefonField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonField, value) != true)) {
                    this.TelefonField = value;
                    this.RaisePropertyChanged("Telefon");
                }
            }
        }
        
        /// <summary>
        /// Date when the case worker was assigned the record entry - Dato for når saksbehandler er tildelt journalposten.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TildeltSaksbehandler {
            get {
                return this.TildeltSaksbehandlerField;
            }
            set {
                if ((this.TildeltSaksbehandlerField.Equals(value) != true)) {
                    this.TildeltSaksbehandlerField = value;
                    this.RaisePropertyChanged("TildeltSaksbehandler");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #1 - Tilleggsattributt nummer 1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt1 {
            get {
                return this.TilleggsAttributt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt1Field, value) != true)) {
                    this.TilleggsAttributt1Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt1");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #10 - Tilleggsattributt nummer 10.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt10 {
            get {
                return this.TilleggsAttributt10Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt10Field, value) != true)) {
                    this.TilleggsAttributt10Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt10");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #2 - Tilleggsattributt nummer 2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt2 {
            get {
                return this.TilleggsAttributt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt2Field, value) != true)) {
                    this.TilleggsAttributt2Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt2");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #3 - Tilleggsattributt nummer 3.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt3 {
            get {
                return this.TilleggsAttributt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt3Field, value) != true)) {
                    this.TilleggsAttributt3Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt3");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #4 - Tilleggsattributt nummer 4.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt4 {
            get {
                return this.TilleggsAttributt4Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt4Field, value) != true)) {
                    this.TilleggsAttributt4Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt4");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #5 - Tilleggsattributt nummer 5.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt5 {
            get {
                return this.TilleggsAttributt5Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt5Field, value) != true)) {
                    this.TilleggsAttributt5Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt5");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #6 - Tilleggsattributt nummer 6.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt6 {
            get {
                return this.TilleggsAttributt6Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt6Field, value) != true)) {
                    this.TilleggsAttributt6Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt6");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #7 - Tilleggsattributt nummer 7.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt7 {
            get {
                return this.TilleggsAttributt7Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt7Field, value) != true)) {
                    this.TilleggsAttributt7Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt7");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #8 - Tilleggsattributt nummer 8.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt8 {
            get {
                return this.TilleggsAttributt8Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt8Field, value) != true)) {
                    this.TilleggsAttributt8Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt8");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #9 - Tilleggsattributt nummer 9.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt9 {
            get {
                return this.TilleggsAttributt9Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt9Field, value) != true)) {
                    this.TilleggsAttributt9Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt9");
                }
            }
        }
        
        /// <summary>
        /// Address abroad - Erstatter Postnr og Poststed for adresser i utlandet.
        /// Feltlengde: 120 tegn.
        /// Tilsvarer NOARK4 feltet AM.UTLAND.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Utlandsadresse {
            get {
                return this.UtlandsadresseField;
            }
            set {
                if ((object.ReferenceEquals(this.UtlandsadresseField, value) != true)) {
                    this.UtlandsadresseField = value;
                    this.RaisePropertyChanged("Utlandsadresse");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the responsible case worker should be notified by emaii - Valgt dersom behandlingsansvarlig skal varsles med e-post, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VarsleMedEpost {
            get {
                return this.VarsleMedEpostField;
            }
            set {
                if ((this.VarsleMedEpostField.Equals(value) != true)) {
                    this.VarsleMedEpostField = value;
                    this.RaisePropertyChanged("VarsleMedEpost");
                }
            }
        }
        
        /// <summary>
        /// Identification type - Identifikasjonstype. Benyttes for å angi type identifikasjon for eksterne personer eller virksomheter.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver identifikasjonstypen adressaten er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute(Order=55)]
        public Gecko.NCore.Client.ObjectModel.V1.Identifikasjonstype Identifikasjonstype {
            get {
                return this.IdentifikasjonstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifikasjonstypeField, value) != true)) {
                    this.IdentifikasjonstypeField = value;
                    this.RaisePropertyChanged("Identifikasjonstype");
                }
            }
        }
        
        /// <summary>
        /// Reference to the identification type - Referanse til identifikasjonstype for adressat.
        /// Oppslag mot tabellen Identifikasjonstype.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=56)]
        public string IdentifikasjonstypeId {
            get {
                return this.IdentifikasjonstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifikasjonstypeIdField, value) != true)) {
                    this.IdentifikasjonstypeIdField = value;
                    this.RaisePropertyChanged("IdentifikasjonstypeId");
                }
            }
        }
        
        /// <summary>
        /// Organization number (public ID for the (organization) - Virksomhetens organisasjonsnummer eller annen entydig referanse opplyst av korrespondansepartneren selv.
        /// Kan inneholde fødselsnummer for personer. Danner sammen med IdentifikasjonstypeId en unik identifikasjon av adressaten.
        /// Feltlengde: 20 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=57)]
        public string Organisasjonsnr {
            get {
                return this.OrganisasjonsnrField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisasjonsnrField, value) != true)) {
                    this.OrganisasjonsnrField = value;
                    this.RaisePropertyChanged("Organisasjonsnr");
                }
            }
        }
        
        /// <summary>
        /// Date and time last updated - Dato og klokkeslett for sist oppdatering.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=58)]
        public System.Nullable<System.DateTime> SistOppdatert {
            get {
                return this.SistOppdatertField;
            }
            set {
                if ((this.SistOppdatertField.Equals(value) != true)) {
                    this.SistOppdatertField = value;
                    this.RaisePropertyChanged("SistOppdatert");
                }
            }
        }
        
        /// <summary>
        /// Date and time created - Dato og klokkeslett for oppretting av recorden
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=59)]
        public System.Nullable<System.DateTime> Opprettet {
            get {
                return this.OpprettetField;
            }
            set {
                if ((this.OpprettetField.Equals(value) != true)) {
                    this.OpprettetField = value;
                    this.RaisePropertyChanged("Opprettet");
                }
            }
        }
        
        /// <summary>
        /// Indicates if this sender/reciepient is a person or an organization.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=60)]
        public System.Nullable<bool> Person {
            get {
                return this.PersonField;
            }
            set {
                if ((this.PersonField.Equals(value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om forsendelsesmåter av dokumenter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Forsendelsesmaate", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Forsendelsesmaate : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Description - Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet FM.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Unique ID - Kortkode.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet FM.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om status for forsendelse av dokumenter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Forsendelsesstatus", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Forsendelsesstatus : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet FS.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet FS.STATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver de enkelte journalenheter som inngår i arkivorganisasjonen.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Journalenhet", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Journalenhet : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AvsluttetDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusArkivpersonale1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalstatusArkivpersonale1IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusArkivpersonale2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalstatusArkivpersonale2IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusArkivpersonale3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalstatusArkivpersonale3IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusSaksbehandler1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalstatusSaksbehandler1IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusSaksbehandler2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalstatusSaksbehandler2IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusSaksbehandler3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalstatusSaksbehandler3IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KanPubliseresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LokaliseringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RapportgruppeField;
        
        /// <summary>
        /// Dersom en journalenhet nedlegges, angis datoen i dette attributtet.
        /// Journalenheten skal da ikke lenger kunne benyttes ved registrering.
        /// Tilsvarer NOARK4 feltet JE.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AvsluttetDato {
            get {
                return this.AvsluttetDatoField;
            }
            set {
                if ((this.AvsluttetDatoField.Equals(value) != true)) {
                    this.AvsluttetDatoField = value;
                    this.RaisePropertyChanged("AvsluttetDato");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet JE.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode for journalenhet.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet JE.JENHET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Journalstatus når arkivpersonalet registrerer eksternt produserte dokumenter
        /// </summary>
        /// <value>Angir hvor langt en er kommet med behandlingen av et dokument i forhold til registrering i journalen og arkivering av dokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusArkivpersonale1 {
            get {
                return this.JournalstatusArkivpersonale1Field;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusArkivpersonale1Field, value) != true)) {
                    this.JournalstatusArkivpersonale1Field = value;
                    this.RaisePropertyChanged("JournalstatusArkivpersonale1");
                }
            }
        }
        
        /// <summary>
        /// Standardverdi for attributtet Journalstatus (JP.STATUS) i tabellen Journalpost
        /// når arkivpersonalet registrerer eksternt produserte dokumenter (dokumenttype I) i denne journalenheten.
        /// Verdi J skal benyttes dersom systemet ikke gir mulighet for konfigurering.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Journalstatus.
        /// Tilsvarer NOARK4 feltet JE.JSARKIV1
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalstatusArkivpersonale1Id {
            get {
                return this.JournalstatusArkivpersonale1IdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusArkivpersonale1IdField, value) != true)) {
                    this.JournalstatusArkivpersonale1IdField = value;
                    this.RaisePropertyChanged("JournalstatusArkivpersonale1Id");
                }
            }
        }
        
        /// <summary>
        /// Journalstatus når arkivpersonalet registrerer internt produserte dokumenter
        /// </summary>
        /// <value>Angir hvor langt en er kommet med behandlingen av et dokument i forhold til registrering i journalen og arkivering av dokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusArkivpersonale2 {
            get {
                return this.JournalstatusArkivpersonale2Field;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusArkivpersonale2Field, value) != true)) {
                    this.JournalstatusArkivpersonale2Field = value;
                    this.RaisePropertyChanged("JournalstatusArkivpersonale2");
                }
            }
        }
        
        /// <summary>
        /// Standardverdi for attributtet Journalstatus (JP.STATUS) i tabellen Journalpost
        /// når arkivpersonalet registrerer internt produserte dokumenter i denne journalenheten.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Journalstatus.
        /// Tilsvarer NOARK4 feltet JE.JSARKIV2
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalstatusArkivpersonale2Id {
            get {
                return this.JournalstatusArkivpersonale2IdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusArkivpersonale2IdField, value) != true)) {
                    this.JournalstatusArkivpersonale2IdField = value;
                    this.RaisePropertyChanged("JournalstatusArkivpersonale2Id");
                }
            }
        }
        
        /// <summary>
        /// Journalstatus når arkivpersonalet registrerer interne dokumenter
        /// </summary>
        /// <value>Angir hvor langt en er kommet med behandlingen av et dokument i forhold til registrering i journalen og arkivering av dokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusArkivpersonale3 {
            get {
                return this.JournalstatusArkivpersonale3Field;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusArkivpersonale3Field, value) != true)) {
                    this.JournalstatusArkivpersonale3Field = value;
                    this.RaisePropertyChanged("JournalstatusArkivpersonale3");
                }
            }
        }
        
        /// <summary>
        /// Standardverdi for attributtet Journalstatus (JP.STATUS) i tabellen Journalpost
        /// når arkivpersonalet registrerer interne dokumenter i denne journalenheten.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Journalstatus.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalstatusArkivpersonale3Id {
            get {
                return this.JournalstatusArkivpersonale3IdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusArkivpersonale3IdField, value) != true)) {
                    this.JournalstatusArkivpersonale3IdField = value;
                    this.RaisePropertyChanged("JournalstatusArkivpersonale3Id");
                }
            }
        }
        
        /// <summary>
        /// Journalstatus når saksbehandler registrerer eksternt produserte dokumenter
        /// </summary>
        /// <value>Angir hvor langt en er kommet med behandlingen av et dokument i forhold til registrering i journalen og arkivering av dokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusSaksbehandler1 {
            get {
                return this.JournalstatusSaksbehandler1Field;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusSaksbehandler1Field, value) != true)) {
                    this.JournalstatusSaksbehandler1Field = value;
                    this.RaisePropertyChanged("JournalstatusSaksbehandler1");
                }
            }
        }
        
        /// <summary>
        /// Standardverdi for attributtet Journalstatus (JP.STATUS) i tabellen Journalpost
        /// når saksbehandler registrerer eksternt produserte dokumenter (dokumenttype I) i denne journalenheten.
        /// Verdi S skal benyttes dersom systemet ikke gir mulighet for konfigurering.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Journalstatus.
        /// Tilsvarer NOARK4 feltet JE.JSSAKSBH1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalstatusSaksbehandler1Id {
            get {
                return this.JournalstatusSaksbehandler1IdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusSaksbehandler1IdField, value) != true)) {
                    this.JournalstatusSaksbehandler1IdField = value;
                    this.RaisePropertyChanged("JournalstatusSaksbehandler1Id");
                }
            }
        }
        
        /// <summary>
        /// Journalstatus når saksbehandler registrerer internt produserte dokumenter
        /// </summary>
        /// <value>Angir hvor langt en er kommet med behandlingen av et dokument i forhold til registrering i journalen og arkivering av dokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusSaksbehandler2 {
            get {
                return this.JournalstatusSaksbehandler2Field;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusSaksbehandler2Field, value) != true)) {
                    this.JournalstatusSaksbehandler2Field = value;
                    this.RaisePropertyChanged("JournalstatusSaksbehandler2");
                }
            }
        }
        
        /// <summary>
        /// Standardverdi for attributtet Journalstatus (JP.STATUS) i tabellen Journalpost
        /// når saksbehandler registrerer egenproduserte dokumenter i denne journalenheten.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Journalstatus.
        /// Tilsvarer NOARK4 feltet JE.JSSAKSBH2
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalstatusSaksbehandler2Id {
            get {
                return this.JournalstatusSaksbehandler2IdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusSaksbehandler2IdField, value) != true)) {
                    this.JournalstatusSaksbehandler2IdField = value;
                    this.RaisePropertyChanged("JournalstatusSaksbehandler2Id");
                }
            }
        }
        
        /// <summary>
        /// Journalstatus når saksbehandler registrerer interne dokumenter
        /// </summary>
        /// <value>Angir hvor langt en er kommet med behandlingen av et dokument i forhold til registrering i journalen og arkivering av dokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusSaksbehandler3 {
            get {
                return this.JournalstatusSaksbehandler3Field;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusSaksbehandler3Field, value) != true)) {
                    this.JournalstatusSaksbehandler3Field = value;
                    this.RaisePropertyChanged("JournalstatusSaksbehandler3");
                }
            }
        }
        
        /// <summary>
        /// Standardverdi for attributtet Journalstatus (JP.STATUS) i tabellen Journalpost
        /// når saksbehandler registrerer interne dokumenter i denne journalenheten.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Journalstatus.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalstatusSaksbehandler3Id {
            get {
                return this.JournalstatusSaksbehandler3IdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusSaksbehandler3IdField, value) != true)) {
                    this.JournalstatusSaksbehandler3IdField = value;
                    this.RaisePropertyChanged("JournalstatusSaksbehandler3Id");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom denne journalposter fra denne journalenheten kan publiseres, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KanPubliseres {
            get {
                return this.KanPubliseresField;
            }
            set {
                if ((this.KanPubliseresField.Equals(value) != true)) {
                    this.KanPubliseresField = value;
                    this.RaisePropertyChanged("KanPubliseres");
                }
            }
        }
        
        /// <summary>
        /// Beskrivelse av hvor journalenheten er plassert.
        /// Tilsvarer NOARK4 feltet JE.LOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lokalisering {
            get {
                return this.LokaliseringField;
            }
            set {
                if ((object.ReferenceEquals(this.LokaliseringField, value) != true)) {
                    this.LokaliseringField = value;
                    this.RaisePropertyChanged("Lokalisering");
                }
            }
        }
        
        /// <summary>
        /// Dersom dokumenter fra flere journalenheter skal samsorteres i enkelte rapporter,
        /// eller dersom en ikke ønsker en ren alfabetisk sortering,
        /// kan dette attributtet benyttes for å få til den ønskede sortering.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet JE.RPGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rapportgruppe {
            get {
                return this.RapportgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.RapportgruppeField, value) != true)) {
                    this.RapportgruppeField = value;
                    this.RaisePropertyChanged("Rapportgruppe");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder statusverdier som benyttes for å angi hvor langt en er kommet med behandlingen av et dokument i forhold til registrering i journalen og arkivering av dokumentet.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Journalstatus", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Journalstatus : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BenyttesAvArkivetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BenyttesAvLederField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BenyttesAvSaksbehandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumentkontrollField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ForEksterntProduserteDokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ForInterntProduserteDokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KontrollAvEkspederingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistreringsansvarField;
        
        /// <summary>
        /// - Valgt dersom statuskoden kan benyttes av arkivpersonalet, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet JS.FORARKIV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BenyttesAvArkivet {
            get {
                return this.BenyttesAvArkivetField;
            }
            set {
                if ((this.BenyttesAvArkivetField.Equals(value) != true)) {
                    this.BenyttesAvArkivetField = value;
                    this.RaisePropertyChanged("BenyttesAvArkivet");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom statuskoden kan benyttes av ledere, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet JS.FORLEDER.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BenyttesAvLeder {
            get {
                return this.BenyttesAvLederField;
            }
            set {
                if ((this.BenyttesAvLederField.Equals(value) != true)) {
                    this.BenyttesAvLederField = value;
                    this.RaisePropertyChanged("BenyttesAvLeder");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom statuskoden kan benyttes av saksbehandlere, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet JS.FORSAKSBEH.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BenyttesAvSaksbehandler {
            get {
                return this.BenyttesAvSaksbehandlerField;
            }
            set {
                if ((this.BenyttesAvSaksbehandlerField.Equals(value) != true)) {
                    this.BenyttesAvSaksbehandlerField = value;
                    this.RaisePropertyChanged("BenyttesAvSaksbehandler");
                }
            }
        }
        
        /// <summary>
        /// Description - Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet JS.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// - Angir hvilken kontroll (om noen) som skal foretas før statuskoden kan påføres.
        /// 0 dersom (nye versjoner av) saksdokument kan registreres.
        /// 1 dersom alle saksdokument må være ferdig fra saksbehandler/leder. For saker som ikke skal arkiveres på papir, kreves det også at det finnes et hoveddokument.
        /// 2 dersom alle saksdokument må være ferdig fra saksbehandler og finnes på arkivformat. (Gjelder ikke dersom saken skal arkiveres på papir).
        /// Tilsvarer NOARK4 feltet JS.DOKKONTR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dokumentkontroll {
            get {
                return this.DokumentkontrollField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentkontrollField, value) != true)) {
                    this.DokumentkontrollField = value;
                    this.RaisePropertyChanged("Dokumentkontroll");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom statuskoden kan benyttes for eksternt produserte dokument, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet JS.FOREKST.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ForEksterntProduserteDokument {
            get {
                return this.ForEksterntProduserteDokumentField;
            }
            set {
                if ((this.ForEksterntProduserteDokumentField.Equals(value) != true)) {
                    this.ForEksterntProduserteDokumentField = value;
                    this.RaisePropertyChanged("ForEksterntProduserteDokument");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom statuskoden kan benyttes for internt produserte dokument, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet JS.FORINT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ForInterntProduserteDokument {
            get {
                return this.ForInterntProduserteDokumentField;
            }
            set {
                if ((this.ForInterntProduserteDokumentField.Equals(value) != true)) {
                    this.ForInterntProduserteDokumentField = value;
                    this.RaisePropertyChanged("ForInterntProduserteDokument");
                }
            }
        }
        
        /// <summary>
        /// Short code - Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet JS.STATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom det (automatisk) skal kontrolleres at dokumentet er ekspedert til
        /// alle mottakere (hvis noen) før statuskoden tillates påført journalposten, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet JS.EKSPEDERT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KontrollAvEkspedering {
            get {
                return this.KontrollAvEkspederingField;
            }
            set {
                if ((this.KontrollAvEkspederingField.Equals(value) != true)) {
                    this.KontrollAvEkspederingField = value;
                    this.RaisePropertyChanged("KontrollAvEkspedering");
                }
            }
        }
        
        /// <summary>
        /// - Angir hvem som har ansvar for neste trinn i registreringen på journalposten.
        /// 0 dersom registreringen i journalen er avsluttet (status A),
        /// 1 dersom arkivet har ansvaret og
        /// 2 dersom saksbehandler/leder har ansvar.
        /// Tilsvarer NOARK4 feltet JS.ANSVAR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Registreringsansvar {
            get {
                return this.RegistreringsansvarField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistreringsansvarField, value) != true)) {
                    this.RegistreringsansvarField = value;
                    this.RaisePropertyChanged("Registreringsansvar");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder identifikasjonstyper for eksterne personer og virksomheter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Identifikasjonstype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Identifikasjonstype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som knytter en relasjon mellom en journalpost og et saksdokument.
    /// Inneholder også informasjon om hvilken type dokument den peker på samt hvilken rekkefølge saksdokumentet skal komme i under journalposten.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dokumentlink", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Dokumentlink : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse DokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DokumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalpostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RekkefoelgenrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumenttilknytning TilknytningskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilknytningskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn TilknyttetAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilknyttetAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TilknyttetDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SistOppdatertField;
        
        /// <summary>
        /// The document that that the documentlink is releated to - Saksdokumentet som dokumentlinken er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om saksdokumentet som dokumentlinken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse Dokument {
            get {
                return this.DokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentField, value) != true)) {
                    this.DokumentField = value;
                    this.RaisePropertyChanged("Dokument");
                }
            }
        }
        
        /// <summary>
        /// Reference to the linked document - Referanse til saksdokumentet.
        /// Kan ikke endres.
        /// Tilsvarer NOARK4 feltet DL.DOKID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DokumentId {
            get {
                return this.DokumentIdField;
            }
            set {
                if ((this.DokumentIdField.Equals(value) != true)) {
                    this.DokumentIdField = value;
                    this.RaisePropertyChanged("DokumentId");
                }
            }
        }
        
        /// <summary>
        /// The registry entry that the documentLink is related to - Journalposten som dokumentlinken er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om journalposten som dokumentlinken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Reference to the registry entry that the documentLink is related to - Referanse til journalposten.
        /// Kan ikke endres.
        /// Tilsvarer NOARK4 feltet DL.JPID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalpostId {
            get {
                return this.JournalpostIdField;
            }
            set {
                if ((this.JournalpostIdField.Equals(value) != true)) {
                    this.JournalpostIdField = value;
                    this.RaisePropertyChanged("JournalpostId");
                }
            }
        }
        
        /// <summary>
        /// Sort order within the record entry - Angir sorteringsrekkefølge under journalposten.
        /// Standardverdi sist benyttede nummer for journalposten + 1.
        /// Tilsvarer NOARK4 feltet DL.RNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rekkefoelgenr {
            get {
                return this.RekkefoelgenrField;
            }
            set {
                if ((this.RekkefoelgenrField.Equals(value) != true)) {
                    this.RekkefoelgenrField = value;
                    this.RaisePropertyChanged("Rekkefoelgenr");
                }
            }
        }
        
        /// <summary>
        /// Link type the document has to the registry entry - Hvilken tilknytning dokumentet har til journalposter og møtedokument.
        /// </summary>
        /// <value>Inneholder detaljer om hvilken tilknytning dokumentet har til journalposter og møtedokument.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumenttilknytning Tilknytningskode {
            get {
                return this.TilknytningskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilknytningskodeField, value) != true)) {
                    this.TilknytningskodeField = value;
                    this.RaisePropertyChanged("Tilknytningskode");
                }
            }
        }
        
        /// <summary>
        /// Reference to the link type the document has to the registry entry - Referanse til hvilken tilknytning saksdokumentet har til journalposten.
        /// Kun et dokument skal kunne være tilknyttet en journalpost som hoveddokument.
        /// Oppslag mot tabellen Dokumenttilknytning.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet DL_TYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilknytningskodeId {
            get {
                return this.TilknytningskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilknytningskodeIdField, value) != true)) {
                    this.TilknytningskodeIdField = value;
                    this.RaisePropertyChanged("TilknytningskodeId");
                }
            }
        }
        
        /// <summary>
        /// The person that created the link - Personen som har knyttet saksdokumentet til journalposten.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som har knyttet saksdokumentet til journalposten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn TilknyttetAv {
            get {
                return this.TilknyttetAvField;
            }
            set {
                if ((object.ReferenceEquals(this.TilknyttetAvField, value) != true)) {
                    this.TilknyttetAvField = value;
                    this.RaisePropertyChanged("TilknyttetAv");
                }
            }
        }
        
        /// <summary>
        /// Reference to the person that created the link - Referanse til den person som har knyttet saksdokumentet til journalposten.
        /// Oppslag mot tabellen Personnavn.
        /// Tilsvarer NOARK4 feltet DL.TKAV
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilknyttetAvid {
            get {
                return this.TilknyttetAvidField;
            }
            set {
                if ((this.TilknyttetAvidField.Equals(value) != true)) {
                    this.TilknyttetAvidField = value;
                    this.RaisePropertyChanged("TilknyttetAvid");
                }
            }
        }
        
        /// <summary>
        /// Date when the link was created - Den dato saksdokumentet ble tilknyttet journalposten.
        /// Tilsvarer NOARK4 feltet DL.TKDATO
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TilknyttetDato {
            get {
                return this.TilknyttetDatoField;
            }
            set {
                if ((this.TilknyttetDatoField.Equals(value) != true)) {
                    this.TilknyttetDatoField = value;
                    this.RaisePropertyChanged("TilknyttetDato");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #1 - Tilleggsattributt nummer 1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt1 {
            get {
                return this.Tilleggsattributt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt1Field, value) != true)) {
                    this.Tilleggsattributt1Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt1");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #10 - Tilleggsattributt nummer 10.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt10 {
            get {
                return this.Tilleggsattributt10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt10Field, value) != true)) {
                    this.Tilleggsattributt10Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt10");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #2 - Tilleggsattributt nummer 2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt2 {
            get {
                return this.Tilleggsattributt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt2Field, value) != true)) {
                    this.Tilleggsattributt2Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt2");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #3 - Tilleggsattributt nummer 3.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt3 {
            get {
                return this.Tilleggsattributt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt3Field, value) != true)) {
                    this.Tilleggsattributt3Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt3");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #4 - Tilleggsattributt nummer 4.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt4 {
            get {
                return this.Tilleggsattributt4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt4Field, value) != true)) {
                    this.Tilleggsattributt4Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt4");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #5 - Tilleggsattributt nummer 5.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt5 {
            get {
                return this.Tilleggsattributt5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt5Field, value) != true)) {
                    this.Tilleggsattributt5Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt5");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #6 - Tilleggsattributt nummer 6.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt6 {
            get {
                return this.Tilleggsattributt6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt6Field, value) != true)) {
                    this.Tilleggsattributt6Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt6");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #7 - Tilleggsattributt nummer 7.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt7 {
            get {
                return this.Tilleggsattributt7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt7Field, value) != true)) {
                    this.Tilleggsattributt7Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt7");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #8 - Tilleggsattributt nummer 8.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt8 {
            get {
                return this.Tilleggsattributt8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt8Field, value) != true)) {
                    this.Tilleggsattributt8Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt8");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #9 - Tilleggsattributt nummer 9.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt9 {
            get {
                return this.Tilleggsattributt9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt9Field, value) != true)) {
                    this.Tilleggsattributt9Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt9");
                }
            }
        }
        
        /// <summary>
        /// Date and time created - Dato og klokkeslett for oppretting av recorden
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public System.Nullable<System.DateTime> Opprettet {
            get {
                return this.OpprettetField;
            }
            set {
                if ((this.OpprettetField.Equals(value) != true)) {
                    this.OpprettetField = value;
                    this.RaisePropertyChanged("Opprettet");
                }
            }
        }
        
        /// <summary>
        /// Date and time last updated - Dato og klokkeslett for sist oppdatering.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public System.Nullable<System.DateTime> SistOppdatert {
            get {
                return this.SistOppdatertField;
            }
            set {
                if ((this.SistOppdatertField.Equals(value) != true)) {
                    this.SistOppdatertField = value;
                    this.RaisePropertyChanged("SistOppdatert");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder basisinformasjon knyttet til saksdokumentet.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dokumentbeskrivelse", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Dokumentbeskrivelse : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentversjon AktivVersjonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AvgraderDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Avgraderingskode AvgraderingskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvgraderingskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentkategori DokumentkategoriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumentkategoriIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentlink[] DokumentlinkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentstatus DokumentstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumentstatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumenttittelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentversjon[] DokumentversjonerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HjemmelUOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Lenke[] LenkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LokaliseringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.DokumentlinkMoetedokument[] MoetedokumentlinkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PapirdokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PublisertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SistOppdatertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe TilgangsgruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilgangsgruppeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn UtarbeidetAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtarbeidetAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetField;
        
        /// <summary>
        /// Aktiv versjon av dokumentet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver aktiv versjon av dokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentversjon AktivVersjon {
            get {
                return this.AktivVersjonField;
            }
            set {
                if ((object.ReferenceEquals(this.AktivVersjonField, value) != true)) {
                    this.AktivVersjonField = value;
                    this.RaisePropertyChanged("AktivVersjon");
                }
            }
        }
        
        /// <summary>
        /// Dato for avgradering eller annen aksjon i henhold til avgraderingskoden.
        /// Må ha innhold dersom Tilgangskode har innhold forskjellig fra XX.
        /// Tilsvarer NOARK4 feltet DB.AGDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AvgraderDato {
            get {
                return this.AvgraderDatoField;
            }
            set {
                if ((this.AvgraderDatoField.Equals(value) != true)) {
                    this.AvgraderDatoField = value;
                    this.RaisePropertyChanged("AvgraderDato");
                }
            }
        }
        
        /// <summary>
        /// Avgraderingskoden som dokumentet er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om avgraderingskoden som dokumentet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Avgraderingskode Avgraderingskode {
            get {
                return this.AvgraderingskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AvgraderingskodeField, value) != true)) {
                    this.AvgraderingskodeField = value;
                    this.RaisePropertyChanged("Avgraderingskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til avgraderingskode.
        /// Oppslag mot tabellen Avgraderingskode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet DB.AGKODE
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvgraderingskodeId {
            get {
                return this.AvgraderingskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AvgraderingskodeIdField, value) != true)) {
                    this.AvgraderingskodeIdField = value;
                    this.RaisePropertyChanged("AvgraderingskodeId");
                }
            }
        }
        
        /// <summary>
        /// Dokumentkategorien som dokumentet er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver dokumentkategorien som dokumentet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentkategori Dokumentkategori {
            get {
                return this.DokumentkategoriField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentkategoriField, value) != true)) {
                    this.DokumentkategoriField = value;
                    this.RaisePropertyChanged("Dokumentkategori");
                }
            }
        }
        
        /// <summary>
        /// Referanse til dokumentkategori.
        /// Oppslag mot tabellen Dokumentkategori.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet DB.KATEGORI.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DokumentkategoriId {
            get {
                return this.DokumentkategoriIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentkategoriIdField, value) != true)) {
                    this.DokumentkategoriIdField = value;
                    this.RaisePropertyChanged("DokumentkategoriId");
                }
            }
        }
        
        /// <summary>
        /// Dokumentlinker (journalposter) som dokumentet inngår i.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver koblinger til journalpostene som dokumentet inngår i.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentlink[] Dokumentlinker {
            get {
                return this.DokumentlinkerField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentlinkerField, value) != true)) {
                    this.DokumentlinkerField = value;
                    this.RaisePropertyChanged("Dokumentlinker");
                }
            }
        }
        
        /// <summary>
        /// Dokumentstatusen som dokumentet er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver dokumentstatusen som dokumentet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentstatus Dokumentstatus {
            get {
                return this.DokumentstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentstatusField, value) != true)) {
                    this.DokumentstatusField = value;
                    this.RaisePropertyChanged("Dokumentstatus");
                }
            }
        }
        
        /// <summary>
        /// Referanse til dokumentets status.
        /// Oppslag mot tabellen Dokumentstatus.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet DB.STATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DokumentstatusId {
            get {
                return this.DokumentstatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentstatusIdField, value) != true)) {
                    this.DokumentstatusIdField = value;
                    this.RaisePropertyChanged("DokumentstatusId");
                }
            }
        }
        
        /// <summary>
        /// Dokumentets tittel (overskrift)
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet DB.TITTEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dokumenttittel {
            get {
                return this.DokumenttittelField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttittelField, value) != true)) {
                    this.DokumenttittelField = value;
                    this.RaisePropertyChanged("Dokumenttittel");
                }
            }
        }
        
        /// <summary>
        /// Versjoner av saksdokumentet.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver dokumentversjoner av saksdokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentversjon[] Dokumentversjoner {
            get {
                return this.DokumentversjonerField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentversjonerField, value) != true)) {
                    this.DokumentversjonerField = value;
                    this.RaisePropertyChanged("Dokumentversjoner");
                }
            }
        }
        
        /// <summary>
        /// Henvisning til offentlighetsloven og/eller annet lovverk.
        /// Må ha innhold dersom Tilgangskode har innhold forskjellig fra XX.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet DB.UOFF
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HjemmelUOff {
            get {
                return this.HjemmelUOffField;
            }
            set {
                if ((object.ReferenceEquals(this.HjemmelUOffField, value) != true)) {
                    this.HjemmelUOffField = value;
                    this.RaisePropertyChanged("HjemmelUOff");
                }
            }
        }
        
        /// <summary>
        /// Unik ID til saksdokumentet.
        /// Tilsvarer NOARK4 feltet DB.DOKID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Lenker til dokumentet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver lenker som er tilknyttet dokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Lenke[] Lenker {
            get {
                return this.LenkerField;
            }
            set {
                if ((object.ReferenceEquals(this.LenkerField, value) != true)) {
                    this.LenkerField = value;
                    this.RaisePropertyChanged("Lenker");
                }
            }
        }
        
        /// <summary>
        /// Beskrivelse av hvor papirdokumentet er arkivert. Se attributtet Papirdokument.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet DB.LOKPAPIR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lokalisering {
            get {
                return this.LokaliseringField;
            }
            set {
                if ((object.ReferenceEquals(this.LokaliseringField, value) != true)) {
                    this.LokaliseringField = value;
                    this.RaisePropertyChanged("Lokalisering");
                }
            }
        }
        
        /// <summary>
        /// Dokumentlinker (møtedokumenter) som dokumentet inngår i.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver koblinger til møtedokumenter som dokumentet inngår i.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.DokumentlinkMoetedokument[] Moetedokumentlinker {
            get {
                return this.MoetedokumentlinkerField;
            }
            set {
                if ((object.ReferenceEquals(this.MoetedokumentlinkerField, value) != true)) {
                    this.MoetedokumentlinkerField = value;
                    this.RaisePropertyChanged("Moetedokumentlinker");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom dokumentet skal arkiveres på papir, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet DB.PAPIR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Papirdokument {
            get {
                return this.PapirdokumentField;
            }
            set {
                if ((this.PapirdokumentField.Equals(value) != true)) {
                    this.PapirdokumentField = value;
                    this.RaisePropertyChanged("Papirdokument");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom dokumentet kan publiseres, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Publisert {
            get {
                return this.PublisertField;
            }
            set {
                if ((this.PublisertField.Equals(value) != true)) {
                    this.PublisertField = value;
                    this.RaisePropertyChanged("Publisert");
                }
            }
        }
        
        /// <summary>
        /// Date and time last update of this case description - Dato og klokkeslett for siste oppdatering av dokumentbeskrivelsen.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SistOppdatert {
            get {
                return this.SistOppdatertField;
            }
            set {
                if ((this.SistOppdatertField.Equals(value) != true)) {
                    this.SistOppdatertField = value;
                    this.RaisePropertyChanged("SistOppdatert");
                }
            }
        }
        
        /// <summary>
        /// Tilgangsgruppen som dokumentet er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangsgruppen som dokumentet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe Tilgangsgruppe {
            get {
                return this.TilgangsgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeField, value) != true)) {
                    this.TilgangsgruppeField = value;
                    this.RaisePropertyChanged("Tilgangsgruppe");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangsgruppe.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet DB.TGGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilgangsgruppeId {
            get {
                return this.TilgangsgruppeIdField;
            }
            set {
                if ((this.TilgangsgruppeIdField.Equals(value) != true)) {
                    this.TilgangsgruppeIdField = value;
                    this.RaisePropertyChanged("TilgangsgruppeId");
                }
            }
        }
        
        /// <summary>
        /// Dokumentets tilgangskode.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangskoden dokumentet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til gradering eller annen kode som angir om et dokument er unntatt offentligheten eller ikke.
        /// Oppslag mot tabellen Tilgangskode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet DB.TGKODE
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt1 {
            get {
                return this.Tilleggsattributt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt1Field, value) != true)) {
                    this.Tilleggsattributt1Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt1");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 10.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt10 {
            get {
                return this.Tilleggsattributt10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt10Field, value) != true)) {
                    this.Tilleggsattributt10Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt10");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt2 {
            get {
                return this.Tilleggsattributt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt2Field, value) != true)) {
                    this.Tilleggsattributt2Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt2");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 3.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt3 {
            get {
                return this.Tilleggsattributt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt3Field, value) != true)) {
                    this.Tilleggsattributt3Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt3");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 4.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt4 {
            get {
                return this.Tilleggsattributt4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt4Field, value) != true)) {
                    this.Tilleggsattributt4Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt4");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 5.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt5 {
            get {
                return this.Tilleggsattributt5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt5Field, value) != true)) {
                    this.Tilleggsattributt5Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt5");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 6.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt6 {
            get {
                return this.Tilleggsattributt6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt6Field, value) != true)) {
                    this.Tilleggsattributt6Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt6");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 7.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt7 {
            get {
                return this.Tilleggsattributt7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt7Field, value) != true)) {
                    this.Tilleggsattributt7Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt7");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 8.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt8 {
            get {
                return this.Tilleggsattributt8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt8Field, value) != true)) {
                    this.Tilleggsattributt8Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt8");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 9.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt9 {
            get {
                return this.Tilleggsattributt9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt9Field, value) != true)) {
                    this.Tilleggsattributt9Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt9");
                }
            }
        }
        
        /// <summary>
        /// Personen som har utarbeidet dette saksdokumentet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som har utarbeidet dette saksdokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn UtarbeidetAv {
            get {
                return this.UtarbeidetAvField;
            }
            set {
                if ((object.ReferenceEquals(this.UtarbeidetAvField, value) != true)) {
                    this.UtarbeidetAvField = value;
                    this.RaisePropertyChanged("UtarbeidetAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person som har utarbeidet dette saksdokumentet.
        /// Oppslag mot tabellen Personnavn.
        /// Tilsvarer NOARK4 feltet DB.UTARBAV
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtarbeidetAvid {
            get {
                return this.UtarbeidetAvidField;
            }
            set {
                if ((this.UtarbeidetAvidField.Equals(value) != true)) {
                    this.UtarbeidetAvidField = value;
                    this.RaisePropertyChanged("UtarbeidetAvid");
                }
            }
        }
        
        /// <summary>
        /// Date and time created - Dato og klokkeslett for oppretting av recorden
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=35)]
        public System.Nullable<System.DateTime> Opprettet {
            get {
                return this.OpprettetField;
            }
            set {
                if ((this.OpprettetField.Equals(value) != true)) {
                    this.OpprettetField = value;
                    this.RaisePropertyChanged("Opprettet");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om den enkelte versjon av dokumentet, samt referanse til dokumentinnholdet.
    /// Det skal alltid finnes en versjonspost for hver versjon av de elektroniske dokumentene selv om en kun arkiverer en versjon.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dokumentversjon", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Dokumentversjon : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AktivVersjonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivmerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse DokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DokumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumentreferanseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HarFlereDokumenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Lagringsenhet LagringsenhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LagringsenhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Lagringsformat LagringsformatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LagringsformatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LokalFilreferanseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OppbevaresTilDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn RegistrertAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegistrertAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn ReservertAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReservertAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SistOppdatertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn SistOppdatertAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SistOppdatertAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tilleggsattributt9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person UtsjekketAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtsjekketAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtsjekketTilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Variantformat VariantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariantIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VersjonsnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetField;
        
        /// <summary>
        /// Valgt dersom dette er den nyeste versjonen av saksdokumentet på hovedformat (dvs arkivformat hvis dette finnes,
        /// ellers produksjonsformat), ikke ellers.
        /// Oppdateres automatisk når nye versjoner legges inn, og når siste versjon i produksjonsformat konverteres til arkivformat.
        /// Tilsvarer NOARK4 feltet VE_AKTIV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AktivVersjon {
            get {
                return this.AktivVersjonField;
            }
            set {
                if ((this.AktivVersjonField.Equals(value) != true)) {
                    this.AktivVersjonField = value;
                    this.RaisePropertyChanged("AktivVersjon");
                }
            }
        }
        
        /// <summary>
        /// Merknader knyttet til arkivering av denne versjonen.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet VE_ARKMERK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Arkivmerknad {
            get {
                return this.ArkivmerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivmerknadField, value) != true)) {
                    this.ArkivmerknadField = value;
                    this.RaisePropertyChanged("Arkivmerknad");
                }
            }
        }
        
        /// <summary>
        /// Saksdokumentet som dokumentversjonen er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om saksdokumentet som dokumentversjonen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse Dokument {
            get {
                return this.DokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentField, value) != true)) {
                    this.DokumentField = value;
                    this.RaisePropertyChanged("Dokument");
                }
            }
        }
        
        /// <summary>
        /// Referanse til saksdokumentets dokumentbeskrivelse.
        /// Tilsvarer NOARK4 feltet VE.DOKID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DokumentId {
            get {
                return this.DokumentIdField;
            }
            set {
                if ((this.DokumentIdField.Equals(value) != true)) {
                    this.DokumentIdField = value;
                    this.RaisePropertyChanged("DokumentId");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den fysiske filen som inneholder dokumentversjonen.
        /// Utgjør sammen med lagringsenhet den fysiske lagringsadressen.
        /// Mappes til NOARK4 feltet VE_FILREF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dokumentreferanse {
            get {
                return this.DokumentreferanseField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentreferanseField, value) != true)) {
                    this.DokumentreferanseField = value;
                    this.RaisePropertyChanged("Dokumentreferanse");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom dokumentversjonen er tilknyttet flere dokumenter, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HarFlereDokumenter {
            get {
                return this.HarFlereDokumenterField;
            }
            set {
                if ((this.HarFlereDokumenterField.Equals(value) != true)) {
                    this.HarFlereDokumenterField = value;
                    this.RaisePropertyChanged("HarFlereDokumenter");
                }
            }
        }
        
        /// <summary>
        /// Lagringsenhet som dokumentversjonen er lagret på.
        /// </summary>
        /// <value>Inneholder detaljer om lagringsenheten som dokumentversjonen er lagret på.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Lagringsenhet Lagringsenhet {
            get {
                return this.LagringsenhetField;
            }
            set {
                if ((object.ReferenceEquals(this.LagringsenhetField, value) != true)) {
                    this.LagringsenhetField = value;
                    this.RaisePropertyChanged("Lagringsenhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til lagringsenhet som dokumentversjonen er lagret på.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Lagringsenhet.
        /// Tilsvarer NOARK4 feltet VE.LAGRENH.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LagringsenhetId {
            get {
                return this.LagringsenhetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LagringsenhetIdField, value) != true)) {
                    this.LagringsenhetIdField = value;
                    this.RaisePropertyChanged("LagringsenhetId");
                }
            }
        }
        
        /// <summary>
        /// Hvilket lagringsformat som denne dokumentversjonen er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om hvilket lagringsformat som denne dokumentversjonen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Lagringsformat Lagringsformat {
            get {
                return this.LagringsformatField;
            }
            set {
                if ((object.ReferenceEquals(this.LagringsformatField, value) != true)) {
                    this.LagringsformatField = value;
                    this.RaisePropertyChanged("Lagringsformat");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hvilket lagringsformat som dokumentversjonen er knyttet til.
        /// Ved eventuell manuell registrering skal det være oppslag mot tabellen Lagringsformat.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet VE.DOKFORMAT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LagringsformatId {
            get {
                return this.LagringsformatIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LagringsformatIdField, value) != true)) {
                    this.LagringsformatIdField = value;
                    this.RaisePropertyChanged("LagringsformatId");
                }
            }
        }
        
        /// <summary>
        /// Inneholder filsti dersom dokumentet er sjekket ut til annet sted enn standard.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LokalFilreferanse {
            get {
                return this.LokalFilreferanseField;
            }
            set {
                if ((object.ReferenceEquals(this.LokalFilreferanseField, value) != true)) {
                    this.LokalFilreferanseField = value;
                    this.RaisePropertyChanged("LokalFilreferanse");
                }
            }
        }
        
        /// <summary>
        /// Så fremt dette ikke er aktiv versjon, kan/skal den slettes når denne dato er passert.
        /// Tilsvarer NOARK4 feltet VE_OPPBEDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OppbevaresTilDato {
            get {
                return this.OppbevaresTilDatoField;
            }
            set {
                if ((this.OppbevaresTilDatoField.Equals(value) != true)) {
                    this.OppbevaresTilDatoField = value;
                    this.RaisePropertyChanged("OppbevaresTilDato");
                }
            }
        }
        
        /// <summary>
        /// Personen som har registrert denne versjonen av saksdokumentet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som har registrert denne versjonen av saksdokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn RegistrertAv {
            get {
                return this.RegistrertAvField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrertAvField, value) != true)) {
                    this.RegistrertAvField = value;
                    this.RaisePropertyChanged("RegistrertAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person som har registrert denne versjonen av saksdokumentet.
        /// Oppslag mot tabellen Personnavn.
        /// Tilsvarer NOARK4 feltet VE_REGAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegistrertAvid {
            get {
                return this.RegistrertAvidField;
            }
            set {
                if ((this.RegistrertAvidField.Equals(value) != true)) {
                    this.RegistrertAvidField = value;
                    this.RaisePropertyChanged("RegistrertAvid");
                }
            }
        }
        
        /// <summary>
        /// Personen som har reservert denne versjonen av saksdokumentet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som har reservert denne versjonen av saksdokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn ReservertAv {
            get {
                return this.ReservertAvField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservertAvField, value) != true)) {
                    this.ReservertAvField = value;
                    this.RaisePropertyChanged("ReservertAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person som har reservert denne versjonen av saksdokumentet.
        /// Oppslag mot tabellen Personnavn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReservertAvid {
            get {
                return this.ReservertAvidField;
            }
            set {
                if ((this.ReservertAvidField.Equals(value) != true)) {
                    this.ReservertAvidField = value;
                    this.RaisePropertyChanged("ReservertAvid");
                }
            }
        }
        
        /// <summary>
        /// Date and time last update of this version of the case document - Dato for sist oppdatering av denne versjonen av saksdokumentet.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SistOppdatert {
            get {
                return this.SistOppdatertField;
            }
            set {
                if ((this.SistOppdatertField.Equals(value) != true)) {
                    this.SistOppdatertField = value;
                    this.RaisePropertyChanged("SistOppdatert");
                }
            }
        }
        
        /// <summary>
        /// Personen som sist oppdaterte denne versjonen av saksdokumentet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som sist oppdaterte denne versjonen av saksdokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn SistOppdatertAv {
            get {
                return this.SistOppdatertAvField;
            }
            set {
                if ((object.ReferenceEquals(this.SistOppdatertAvField, value) != true)) {
                    this.SistOppdatertAvField = value;
                    this.RaisePropertyChanged("SistOppdatertAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person som sist oppdaterte denne versjonen av saksdokumentet.
        /// Oppslag mot tabellen Personnavn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SistOppdatertAvid {
            get {
                return this.SistOppdatertAvidField;
            }
            set {
                if ((this.SistOppdatertAvidField.Equals(value) != true)) {
                    this.SistOppdatertAvidField = value;
                    this.RaisePropertyChanged("SistOppdatertAvid");
                }
            }
        }
        
        /// <summary>
        /// Dokumentversjonens tilgangskode.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangskoden Dokumentversjonen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til dokumentversjonens tilgangskode.
        /// Arves fra dokumentbeskrivelsen.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Tilgangskode.
        /// Tilsvarer NOARK4 feltet VE_TGKODE
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt1 {
            get {
                return this.Tilleggsattributt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt1Field, value) != true)) {
                    this.Tilleggsattributt1Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt1");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 10.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt10 {
            get {
                return this.Tilleggsattributt10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt10Field, value) != true)) {
                    this.Tilleggsattributt10Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt10");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt2 {
            get {
                return this.Tilleggsattributt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt2Field, value) != true)) {
                    this.Tilleggsattributt2Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt2");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 3.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt3 {
            get {
                return this.Tilleggsattributt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt3Field, value) != true)) {
                    this.Tilleggsattributt3Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt3");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 4.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt4 {
            get {
                return this.Tilleggsattributt4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt4Field, value) != true)) {
                    this.Tilleggsattributt4Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt4");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 5.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt5 {
            get {
                return this.Tilleggsattributt5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt5Field, value) != true)) {
                    this.Tilleggsattributt5Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt5");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 6.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt6 {
            get {
                return this.Tilleggsattributt6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt6Field, value) != true)) {
                    this.Tilleggsattributt6Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt6");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 7.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt7 {
            get {
                return this.Tilleggsattributt7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt7Field, value) != true)) {
                    this.Tilleggsattributt7Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt7");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 8.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt8 {
            get {
                return this.Tilleggsattributt8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt8Field, value) != true)) {
                    this.Tilleggsattributt8Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt8");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt 9.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsattributt9 {
            get {
                return this.Tilleggsattributt9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tilleggsattributt9Field, value) != true)) {
                    this.Tilleggsattributt9Field = value;
                    this.RaisePropertyChanged("Tilleggsattributt9");
                }
            }
        }
        
        /// <summary>
        /// Personen som har denne versjonen av saksdokumentet utsjekket.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som har har denne versjonen av saksdokumentet utsjekket.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person UtsjekketAv {
            get {
                return this.UtsjekketAvField;
            }
            set {
                if ((object.ReferenceEquals(this.UtsjekketAvField, value) != true)) {
                    this.UtsjekketAvField = value;
                    this.RaisePropertyChanged("UtsjekketAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person som har sjekket ut denne versjonen av saksdokumentet.
        /// Inneholder blank dersom versjonen aldri har blitt sjekket inn, 0 dersom versjonen er sjekket inn,
        /// eller et positivt tall som markerer hvilken person (PN_ID) som har sjekket ut versjonen.
        /// Oppslag mot tabellen Person.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtsjekketAvid {
            get {
                return this.UtsjekketAvidField;
            }
            set {
                if ((this.UtsjekketAvidField.Equals(value) != true)) {
                    this.UtsjekketAvidField = value;
                    this.RaisePropertyChanged("UtsjekketAvid");
                }
            }
        }
        
        /// <summary>
        /// Angir katalog hvor dokumentet er sjekket ut til.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtsjekketTil {
            get {
                return this.UtsjekketTilField;
            }
            set {
                if ((object.ReferenceEquals(this.UtsjekketTilField, value) != true)) {
                    this.UtsjekketTilField = value;
                    this.RaisePropertyChanged("UtsjekketTil");
                }
            }
        }
        
        /// <summary>
        /// Variantformatet dokumentversjonen er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om variantformatet dokumentversjonen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Variantformat Variant {
            get {
                return this.VariantField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantField, value) != true)) {
                    this.VariantField = value;
                    this.RaisePropertyChanged("Variant");
                }
            }
        }
        
        /// <summary>
        /// Referanse til varianten av dokumentversjonen.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Variantformat.
        /// Tilsvarer NOARK4 feltet VE.VARIANT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VariantId {
            get {
                return this.VariantIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantIdField, value) != true)) {
                    this.VariantIdField = value;
                    this.RaisePropertyChanged("VariantId");
                }
            }
        }
        
        /// <summary>
        /// Versjonsnummer.
        /// Tilsvarer NOARK4 feltet VE_VERSJON.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Versjonsnr {
            get {
                return this.VersjonsnrField;
            }
            set {
                if ((this.VersjonsnrField.Equals(value) != true)) {
                    this.VersjonsnrField = value;
                    this.RaisePropertyChanged("Versjonsnr");
                }
            }
        }
        
        /// <summary>
        /// Date and time created - Dato og klokkeslett for oppretting av recorden
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=37)]
        public System.Nullable<System.DateTime> Opprettet {
            get {
                return this.OpprettetField;
            }
            set {
                if ((this.OpprettetField.Equals(value) != true)) {
                    this.OpprettetField = value;
                    this.RaisePropertyChanged("Opprettet");
                }
            }
        }
    }
    
    /// <summary>
    /// Benyttes for å beskrive de lagringsenheter som de elektroniske saksdokumentene lagres på.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lagringsenhet", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Lagringsenhet : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumentstiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Beskrivelse.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet LA.BESKRIV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Beskrivelse {
            get {
                return this.BeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BeskrivelseField, value) != true)) {
                    this.BeskrivelseField = value;
                    this.RaisePropertyChanged("Beskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Henvisning til rot-katalog for dokumenter.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dokumentsti {
            get {
                return this.DokumentstiField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentstiField, value) != true)) {
                    this.DokumentstiField = value;
                    this.RaisePropertyChanged("Dokumentsti");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet LA.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver de hovedformat en bestemt variant av et saksdokument kan finnes i.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Variantformat", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Variantformat : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet VF.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet VF.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver dokumentkategorier.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dokumentkategori", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Dokumentkategori : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Aktivitet AktivitetsmalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AktivitetsmalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AntallDagerTilFristField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentmal DokumentmalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DokumentmalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HjemmelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MVAKodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Mappetype MappetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MappetypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrekkodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        /// <summary>
        /// - Aktivitetsmal.
        /// </summary>
        /// <value>Inneholder attributter som beskriver aktivitetsmalen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Aktivitet Aktivitetsmal {
            get {
                return this.AktivitetsmalField;
            }
            set {
                if ((object.ReferenceEquals(this.AktivitetsmalField, value) != true)) {
                    this.AktivitetsmalField = value;
                    this.RaisePropertyChanged("Aktivitetsmal");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til aktivitetsmal.
        /// Hvis det registreres en aktivitetsmal på denne dokumentkategori, legges denne dokumentflyten automatisk på journalposter med denne kategorien.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AktivitetsmalId {
            get {
                return this.AktivitetsmalIdField;
            }
            set {
                if ((this.AktivitetsmalIdField.Equals(value) != true)) {
                    this.AktivitetsmalIdField = value;
                    this.RaisePropertyChanged("AktivitetsmalId");
                }
            }
        }
        
        /// <summary>
        /// - Antall dager for beregning av forfallsdato på journalposter som knyttes til denne dokumentkategorien.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AntallDagerTilFrist {
            get {
                return this.AntallDagerTilFristField;
            }
            set {
                if ((this.AntallDagerTilFristField.Equals(value) != true)) {
                    this.AntallDagerTilFristField = value;
                    this.RaisePropertyChanged("AntallDagerTilFrist");
                }
            }
        }
        
        /// <summary>
        /// Description - Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet DK.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// - Dokumentmalen som kategorien er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver dokumentmalen som kategorien er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentmal Dokumentmal {
            get {
                return this.DokumentmalField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentmalField, value) != true)) {
                    this.DokumentmalField = value;
                    this.RaisePropertyChanged("Dokumentmal");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til dokumentmal.
        /// Benyttes for visning av dokumenter knyttet til kategorien.
        /// Oppslag mot tabellen Dokumentmal.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DokumentmalId {
            get {
                return this.DokumentmalIdField;
            }
            set {
                if ((this.DokumentmalIdField.Equals(value) != true)) {
                    this.DokumentmalIdField = value;
                    this.RaisePropertyChanged("DokumentmalId");
                }
            }
        }
        
        /// <summary>
        /// - ID fiHjemmel for dokumentkategori.
        /// Journalposter som knyttes til denne dokumentkategorien får denne satt automatisk.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet DK.UOFF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hjemmel {
            get {
                return this.HjemmelField;
            }
            set {
                if ((object.ReferenceEquals(this.HjemmelField, value) != true)) {
                    this.HjemmelField = value;
                    this.RaisePropertyChanged("Hjemmel");
                }
            }
        }
        
        /// <summary>
        /// Unique ID - Kortkode.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet DK.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom MVA kode skal overføres, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> MVAKode {
            get {
                return this.MVAKodeField;
            }
            set {
                if ((this.MVAKodeField.Equals(value) != true)) {
                    this.MVAKodeField = value;
                    this.RaisePropertyChanged("MVAKode");
                }
            }
        }
        
        /// <summary>
        /// - Mappetypen som kategorien er beregnet for.
        /// </summary>
        /// <value>Inneholder attributter som beskriver mappetypen som dokumentkategorien er beregnet for.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Mappetype Mappetype {
            get {
                return this.MappetypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MappetypeField, value) != true)) {
                    this.MappetypeField = value;
                    this.RaisePropertyChanged("Mappetype");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til mappetype.
        /// Innhold angir at dokumentkategori er beregnet for en spesiell mappetype.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Mappetype.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MappetypeId {
            get {
                return this.MappetypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MappetypeIdField, value) != true)) {
                    this.MappetypeIdField = value;
                    this.RaisePropertyChanged("MappetypeId");
                }
            }
        }
        
        /// <summary>
        /// - Strekkode ved skanning.
        /// Hvis en skanner et dokument med denne strekkode settes denne dokkategori på journalposten.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Strekkode {
            get {
                return this.StrekkodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StrekkodeField, value) != true)) {
                    this.StrekkodeField = value;
                    this.RaisePropertyChanged("Strekkode");
                }
            }
        }
        
        /// <summary>
        /// - Tilgangskode for dokumentkategorien.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangskoden som dokumentkategorien er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangskode for dokumentkategori.
        /// Journalposter som knyttes til denne dokumentkategorien får denne satt automatisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver en aktivitet i en saks- eller dokumentflyt.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Aktivitet", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Aktivitet : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AktivitetType AktivitetstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AktivitetstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AndelUtfoertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AnsvarligEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AnsvarligEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn AnsvarligSaksbehandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AnsvarligSaksbehandlerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Avskrivingsmaate AvskrivingsmaateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvskrivningsmaateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BegrensTilSakspartrolleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AktivitetBehandlingsform BehandlingsformField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BehandlingsformIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BehandlingskravField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BehandlingstidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AktivitetBeslutningskode BeslutningskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeslutningskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DelAvBehandlingstidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentmal DokumentmalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DokumentmalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumenttittelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumenttype DokumenttypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumenttypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DupliserbarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EstimertTidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ForfallsdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FullfoertdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullstendigStedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalstatus JournalstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalstatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LenkeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Aktivitet MalAktivitetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MalAktivitetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObjektIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObjektRekkefoelgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObjektTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PlanlagtUtfoertdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AktivitetPrioritet PrioritetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrioritetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AktivitetRapportKategori RapportkategoriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RapportkategoriIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse ReferansedokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferansedokumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn RegistrertAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegistrertAvIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RegistrertDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RekkefoelgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Rolle RolleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RolleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SakspartkriterieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sakstype SakstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SakstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SendTilSakspartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AktivitetStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TidsforbrukField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling TilhoererEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilhoererEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn TilhoererSaksbehandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilhoererSaksbehandlerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilleggsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TittelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Aktivitet UnderlagtAktivitetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UnderlagtAktivitetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UoffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn UtfoertAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UtfoertdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AktivitetVarslingsform VarslingsformField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarslingsformIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SistOppdatertField;
        
        /// <summary>
        /// Rapportkategori.
        /// </summary>
        /// <value>Inneholder detaljer om rapportkategorien aktiviteten har.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AktivitetType Aktivitetstype {
            get {
                return this.AktivitetstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AktivitetstypeField, value) != true)) {
                    this.AktivitetstypeField = value;
                    this.RaisePropertyChanged("Aktivitetstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til rapportkategori.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AktivitetstypeId {
            get {
                return this.AktivitetstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AktivitetstypeIdField, value) != true)) {
                    this.AktivitetstypeIdField = value;
                    this.RaisePropertyChanged("AktivitetstypeId");
                }
            }
        }
        
        /// <summary>
        /// Andel utført - hvor mye prosentvis aktiviteten er fullført.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AndelUtfoert {
            get {
                return this.AndelUtfoertField;
            }
            set {
                if ((this.AndelUtfoertField.Equals(value) != true)) {
                    this.AndelUtfoertField = value;
                    this.RaisePropertyChanged("AndelUtfoert");
                }
            }
        }
        
        /// <summary>
        /// Den administrative enhet som er ansvarlig for å utføre aktiviteten.
        /// </summary>
        /// <value>Inneholder detaljer om den administrative enhet som er ansvarlig for å utføre aktiviteten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AnsvarligEnhet {
            get {
                return this.AnsvarligEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.AnsvarligEnhetField, value) != true)) {
                    this.AnsvarligEnhetField = value;
                    this.RaisePropertyChanged("AnsvarligEnhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den administrative enhet som er ansvarlig for å utføre aktiviteten.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AnsvarligEnhetId {
            get {
                return this.AnsvarligEnhetIdField;
            }
            set {
                if ((this.AnsvarligEnhetIdField.Equals(value) != true)) {
                    this.AnsvarligEnhetIdField = value;
                    this.RaisePropertyChanged("AnsvarligEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Personen som er ansvarlig for å utføre aktiviteten.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som er ansvarlig for å utføre aktiviteten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn AnsvarligSaksbehandler {
            get {
                return this.AnsvarligSaksbehandlerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnsvarligSaksbehandlerField, value) != true)) {
                    this.AnsvarligSaksbehandlerField = value;
                    this.RaisePropertyChanged("AnsvarligSaksbehandler");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den personen som er ansvarlig for å utføre aktiviteten.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AnsvarligSaksbehandlerId {
            get {
                return this.AnsvarligSaksbehandlerIdField;
            }
            set {
                if ((this.AnsvarligSaksbehandlerIdField.Equals(value) != true)) {
                    this.AnsvarligSaksbehandlerIdField = value;
                    this.RaisePropertyChanged("AnsvarligSaksbehandlerId");
                }
            }
        }
        
        /// <summary>
        /// Avskrivningsmåte dersom en dokumentoppgave og den utgående posten skal avskrive en inngående.
        /// </summary>
        /// <value>Inneholder attributter som beskriver avskrivingsmåten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Avskrivingsmaate Avskrivingsmaate {
            get {
                return this.AvskrivingsmaateField;
            }
            set {
                if ((object.ReferenceEquals(this.AvskrivingsmaateField, value) != true)) {
                    this.AvskrivingsmaateField = value;
                    this.RaisePropertyChanged("Avskrivingsmaate");
                }
            }
        }
        
        /// <summary>
        /// Referanse til avskrivningsmåte dersom en dokumentoppgave og den utgående posten skal avskrive en inngående.
        /// Oppslag mot tabellen Avskrivningsmåte.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvskrivningsmaateId {
            get {
                return this.AvskrivningsmaateIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AvskrivningsmaateIdField, value) != true)) {
                    this.AvskrivningsmaateIdField = value;
                    this.RaisePropertyChanged("AvskrivningsmaateId");
                }
            }
        }
        
        /// <summary>
        /// Hvilken sakspartrolle som skal oppføres som mottakere for automatisk generert journalpost.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BegrensTilSakspartrolle {
            get {
                return this.BegrensTilSakspartrolleField;
            }
            set {
                if ((object.ReferenceEquals(this.BegrensTilSakspartrolleField, value) != true)) {
                    this.BegrensTilSakspartrolleField = value;
                    this.RaisePropertyChanged("BegrensTilSakspartrolle");
                }
            }
        }
        
        /// <summary>
        /// Behandlingsform.
        /// </summary>
        /// <value>Inneholder attributter som beskriver behandlingsformen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AktivitetBehandlingsform Behandlingsform {
            get {
                return this.BehandlingsformField;
            }
            set {
                if ((object.ReferenceEquals(this.BehandlingsformField, value) != true)) {
                    this.BehandlingsformField = value;
                    this.RaisePropertyChanged("Behandlingsform");
                }
            }
        }
        
        /// <summary>
        /// Referanse til behandlingsform.
        /// Angir i hvilken rekkefølge som oppgavene i malen skal startes. Du kan velge mellom parallell (samtidig) start
        /// eller sekvensiell start (oppgaver aktiviseres i angitt rekkefølge).
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BehandlingsformId {
            get {
                return this.BehandlingsformIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BehandlingsformIdField, value) != true)) {
                    this.BehandlingsformIdField = value;
                    this.RaisePropertyChanged("BehandlingsformId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom aktiviteten må utføres, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Behandlingskrav {
            get {
                return this.BehandlingskravField;
            }
            set {
                if ((this.BehandlingskravField.Equals(value) != true)) {
                    this.BehandlingskravField = value;
                    this.RaisePropertyChanged("Behandlingskrav");
                }
            }
        }
        
        /// <summary>
        /// Behandlingstid i antall dager.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Behandlingstid {
            get {
                return this.BehandlingstidField;
            }
            set {
                if ((this.BehandlingstidField.Equals(value) != true)) {
                    this.BehandlingstidField = value;
                    this.RaisePropertyChanged("Behandlingstid");
                }
            }
        }
        
        /// <summary>
        /// Utdypende beskrivelse av aktiviteten.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Beskrivelse {
            get {
                return this.BeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BeskrivelseField, value) != true)) {
                    this.BeskrivelseField = value;
                    this.RaisePropertyChanged("Beskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Beslutningskode.
        /// </summary>
        /// <value>Inneholder attributter som beskriver beslutningskoden.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AktivitetBeslutningskode Beslutningskode {
            get {
                return this.BeslutningskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BeslutningskodeField, value) != true)) {
                    this.BeslutningskodeField = value;
                    this.RaisePropertyChanged("Beslutningskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til beslutningskode.
        /// Beslutningskode som benyttes ved gren-/beslutningspunkt.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeslutningskodeId {
            get {
                return this.BeslutningskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BeslutningskodeIdField, value) != true)) {
                    this.BeslutningskodeIdField = value;
                    this.RaisePropertyChanged("BeslutningskodeId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom denne aktiviteten skal inngå ved beregning av total behandlingstid, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DelAvBehandlingstid {
            get {
                return this.DelAvBehandlingstidField;
            }
            set {
                if ((this.DelAvBehandlingstidField.Equals(value) != true)) {
                    this.DelAvBehandlingstidField = value;
                    this.RaisePropertyChanged("DelAvBehandlingstid");
                }
            }
        }
        
        /// <summary>
        /// Dokumentmal.
        /// </summary>
        /// <value>Inneholder attributter som beskriver dokumentmal.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentmal Dokumentmal {
            get {
                return this.DokumentmalField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentmalField, value) != true)) {
                    this.DokumentmalField = value;
                    this.RaisePropertyChanged("Dokumentmal");
                }
            }
        }
        
        /// <summary>
        /// Referanse til eventuell dokumentmal som skal brukes ved generering av dokument.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DokumentmalId {
            get {
                return this.DokumentmalIdField;
            }
            set {
                if ((this.DokumentmalIdField.Equals(value) != true)) {
                    this.DokumentmalIdField = value;
                    this.RaisePropertyChanged("DokumentmalId");
                }
            }
        }
        
        /// <summary>
        /// Tittel på eventuelt dokument som skal genereres automatisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dokumenttittel {
            get {
                return this.DokumenttittelField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttittelField, value) != true)) {
                    this.DokumenttittelField = value;
                    this.RaisePropertyChanged("Dokumenttittel");
                }
            }
        }
        
        /// <summary>
        /// Dokumenttypen som skal settes når aktiviteten gjelder automatisk generering av nytt dokument.
        /// </summary>
        /// <value>Inneholder attributter som beskriver dokumenttype som skal settes når aktiviteten gjelder automatisk generering av nytt dokument.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumenttype Dokumenttype {
            get {
                return this.DokumenttypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeField, value) != true)) {
                    this.DokumenttypeField = value;
                    this.RaisePropertyChanged("Dokumenttype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til dokumenttype som skal settes når aktiviteten gjelder automatisk generering av nytt dokument.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DokumenttypeId {
            get {
                return this.DokumenttypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeIdField, value) != true)) {
                    this.DokumenttypeIdField = value;
                    this.RaisePropertyChanged("DokumenttypeId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom en identisk aktivitet skal kunne tilordnes flere personer, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Dupliserbar {
            get {
                return this.DupliserbarField;
            }
            set {
                if ((this.DupliserbarField.Equals(value) != true)) {
                    this.DupliserbarField = value;
                    this.RaisePropertyChanged("Dupliserbar");
                }
            }
        }
        
        /// <summary>
        /// Estimert tidsforbruk i antall dager.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EstimertTid {
            get {
                return this.EstimertTidField;
            }
            set {
                if ((this.EstimertTidField.Equals(value) != true)) {
                    this.EstimertTidField = value;
                    this.RaisePropertyChanged("EstimertTid");
                }
            }
        }
        
        /// <summary>
        /// Den dato aktiviteten forfaller til behandling.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Forfallsdato {
            get {
                return this.ForfallsdatoField;
            }
            set {
                if ((this.ForfallsdatoField.Equals(value) != true)) {
                    this.ForfallsdatoField = value;
                    this.RaisePropertyChanged("Forfallsdato");
                }
            }
        }
        
        /// <summary>
        /// Den dato aktiviteten er fullført.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Fullfoertdato {
            get {
                return this.FullfoertdatoField;
            }
            set {
                if ((this.FullfoertdatoField.Equals(value) != true)) {
                    this.FullfoertdatoField = value;
                    this.RaisePropertyChanged("Fullfoertdato");
                }
            }
        }
        
        /// <summary>
        /// Fullstendig plassering av aktiviteten i en hierarkisk arbeidsflyt.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullstendigSted {
            get {
                return this.FullstendigStedField;
            }
            set {
                if ((object.ReferenceEquals(this.FullstendigStedField, value) != true)) {
                    this.FullstendigStedField = value;
                    this.RaisePropertyChanged("FullstendigSted");
                }
            }
        }
        
        /// <summary>
        /// Unik nøkkel til aktiviteten.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Journalposten aktiviteten er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalposten aktiviteten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Journalstatus som eventuelt skal settes når aktiviteten gjelder automatisk generering av nytt dokument.
        /// </summary>
        /// <value>Inneholder detaljer om den journalstatus som eventuelt skal settes når aktiviteten gjelder automatisk generering av nytt dokument.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalstatus Journalstatus {
            get {
                return this.JournalstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusField, value) != true)) {
                    this.JournalstatusField = value;
                    this.RaisePropertyChanged("Journalstatus");
                }
            }
        }
        
        /// <summary>
        /// Referanse til journalstatus som eventuelt skal settes når aktiviteten gjelder automatisk generering av nytt dokument.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalstatusId {
            get {
                return this.JournalstatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalstatusIdField, value) != true)) {
                    this.JournalstatusIdField = value;
                    this.RaisePropertyChanged("JournalstatusId");
                }
            }
        }
        
        /// <summary>
        /// Lenke for oppslag til andre portaler/nettsteder.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lenke {
            get {
                return this.LenkeField;
            }
            set {
                if ((object.ReferenceEquals(this.LenkeField, value) != true)) {
                    this.LenkeField = value;
                    this.RaisePropertyChanged("Lenke");
                }
            }
        }
        
        /// <summary>
        /// Malaktivitet denne aktiviteten er basert på.
        /// </summary>
        /// <value>Inneholder attributter som beskriver malaktiviteten denne aktiviteten er basert på.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Aktivitet MalAktivitet {
            get {
                return this.MalAktivitetField;
            }
            set {
                if ((object.ReferenceEquals(this.MalAktivitetField, value) != true)) {
                    this.MalAktivitetField = value;
                    this.RaisePropertyChanged("MalAktivitet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hvilken malaktivitet denne aktiviteten er basert på.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MalAktivitetId {
            get {
                return this.MalAktivitetIdField;
            }
            set {
                if ((this.MalAktivitetIdField.Equals(value) != true)) {
                    this.MalAktivitetIdField = value;
                    this.RaisePropertyChanged("MalAktivitetId");
                }
            }
        }
        
        /// <summary>
        /// Merknad fra ansvarlig til oppdragsgiver.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Nummer. Angir nummereringen på oppgaven innenfor saksgangen.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Nummer {
            get {
                return this.NummerField;
            }
            set {
                if ((this.NummerField.Equals(value) != true)) {
                    this.NummerField = value;
                    this.RaisePropertyChanged("Nummer");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til objektet som aktiviteten er knyttet til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ObjektId {
            get {
                return this.ObjektIdField;
            }
            set {
                if ((this.ObjektIdField.Equals(value) != true)) {
                    this.ObjektIdField = value;
                    this.RaisePropertyChanged("ObjektId");
                }
            }
        }
        
        /// <summary>
        /// Objektrekkefølge. Sortering dersom det finnes flere flyt under samme objekt.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ObjektRekkefoelge {
            get {
                return this.ObjektRekkefoelgeField;
            }
            set {
                if ((this.ObjektRekkefoelgeField.Equals(value) != true)) {
                    this.ObjektRekkefoelgeField = value;
                    this.RaisePropertyChanged("ObjektRekkefoelge");
                }
            }
        }
        
        /// <summary>
        /// Objekttype. Hva slags type objekt aktiviteten er knyttet til.
        /// Lovlige verdier: 0 (sak), 1 (journalpost)
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ObjektType {
            get {
                return this.ObjektTypeField;
            }
            set {
                if ((this.ObjektTypeField.Equals(value) != true)) {
                    this.ObjektTypeField = value;
                    this.RaisePropertyChanged("ObjektType");
                }
            }
        }
        
        /// <summary>
        /// Den dato aktiviteten er planlagt ferdig utført.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PlanlagtUtfoertdato {
            get {
                return this.PlanlagtUtfoertdatoField;
            }
            set {
                if ((this.PlanlagtUtfoertdatoField.Equals(value) != true)) {
                    this.PlanlagtUtfoertdatoField = value;
                    this.RaisePropertyChanged("PlanlagtUtfoertdato");
                }
            }
        }
        
        /// <summary>
        /// Prioritet.
        /// </summary>
        /// <value>Inneholder detaljer om den prioriteten aktiviteten har.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AktivitetPrioritet Prioritet {
            get {
                return this.PrioritetField;
            }
            set {
                if ((object.ReferenceEquals(this.PrioritetField, value) != true)) {
                    this.PrioritetField = value;
                    this.RaisePropertyChanged("Prioritet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til prioritet.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrioritetId {
            get {
                return this.PrioritetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PrioritetIdField, value) != true)) {
                    this.PrioritetIdField = value;
                    this.RaisePropertyChanged("PrioritetId");
                }
            }
        }
        
        /// <summary>
        /// Rapportkategori.
        /// </summary>
        /// <value>Inneholder detaljer om rapportkategorien aktiviteten har.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AktivitetRapportKategori Rapportkategori {
            get {
                return this.RapportkategoriField;
            }
            set {
                if ((object.ReferenceEquals(this.RapportkategoriField, value) != true)) {
                    this.RapportkategoriField = value;
                    this.RaisePropertyChanged("Rapportkategori");
                }
            }
        }
        
        /// <summary>
        /// Referanse til rapportkategori.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RapportkategoriId {
            get {
                return this.RapportkategoriIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RapportkategoriIdField, value) != true)) {
                    this.RapportkategoriIdField = value;
                    this.RaisePropertyChanged("RapportkategoriId");
                }
            }
        }
        
        /// <summary>
        /// Referansedokument
        /// </summary>
        /// <value>Inneholder detaljer om dokument som nærmeres beskrivelse av aktiviteten finnes i.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse Referansedokument {
            get {
                return this.ReferansedokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferansedokumentField, value) != true)) {
                    this.ReferansedokumentField = value;
                    this.RaisePropertyChanged("Referansedokument");
                }
            }
        }
        
        /// <summary>
        /// Referanse til dokument.
        /// Benyttes kun når beskrivelse finnes i et separat dokument.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferansedokumentId {
            get {
                return this.ReferansedokumentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferansedokumentIdField, value) != true)) {
                    this.ReferansedokumentIdField = value;
                    this.RaisePropertyChanged("ReferansedokumentId");
                }
            }
        }
        
        /// <summary>
        /// Personen som har registrert aktiviteten.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som har registrert aktiviteten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn RegistrertAv {
            get {
                return this.RegistrertAvField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrertAvField, value) != true)) {
                    this.RegistrertAvField = value;
                    this.RaisePropertyChanged("RegistrertAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den personen som har registrert aktiviteten.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegistrertAvId {
            get {
                return this.RegistrertAvIdField;
            }
            set {
                if ((this.RegistrertAvIdField.Equals(value) != true)) {
                    this.RegistrertAvIdField = value;
                    this.RaisePropertyChanged("RegistrertAvId");
                }
            }
        }
        
        /// <summary>
        /// Den dato aktiviteten er registrert.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RegistrertDato {
            get {
                return this.RegistrertDatoField;
            }
            set {
                if ((this.RegistrertDatoField.Equals(value) != true)) {
                    this.RegistrertDatoField = value;
                    this.RaisePropertyChanged("RegistrertDato");
                }
            }
        }
        
        /// <summary>
        /// Rekkefølge. Den rekkefølge aktivitetene skal utføres i.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rekkefoelge {
            get {
                return this.RekkefoelgeField;
            }
            set {
                if ((this.RekkefoelgeField.Equals(value) != true)) {
                    this.RekkefoelgeField = value;
                    this.RaisePropertyChanged("Rekkefoelge");
                }
            }
        }
        
        /// <summary>
        /// Rollen for den personen som den personen som skal utføre aktiviteten må ha.
        /// </summary>
        /// <value>Inneholder attributter som beskriver rollen som den personen som skal utføre aktiviteten må ha.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Rolle Rolle {
            get {
                return this.RolleField;
            }
            set {
                if ((object.ReferenceEquals(this.RolleField, value) != true)) {
                    this.RolleField = value;
                    this.RaisePropertyChanged("Rolle");
                }
            }
        }
        
        /// <summary>
        /// Referanse til rolle for den personen som den personen som skal utføre aktiviteten må ha.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RolleId {
            get {
                return this.RolleIdField;
            }
            set {
                if ((this.RolleIdField.Equals(value) != true)) {
                    this.RolleIdField = value;
                    this.RaisePropertyChanged("RolleId");
                }
            }
        }
        
        /// <summary>
        /// Saken aktiviteten er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken aktiviteten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Kriterier for utvelgelse av saksparter som skal oppføres som mottakere for automatisk generert journalpost.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sakspartkriterie {
            get {
                return this.SakspartkriterieField;
            }
            set {
                if ((object.ReferenceEquals(this.SakspartkriterieField, value) != true)) {
                    this.SakspartkriterieField = value;
                    this.RaisePropertyChanged("Sakspartkriterie");
                }
            }
        }
        
        /// <summary>
        /// Sakstypen som denne aktiviteten kun skal benyttes til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver sakstypen som denne aktiviteten kun skal benyttes til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sakstype Sakstype {
            get {
                return this.SakstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SakstypeField, value) != true)) {
                    this.SakstypeField = value;
                    this.RaisePropertyChanged("Sakstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til sakstypen som denne aktiviteten kun skal benyttes til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SakstypeId {
            get {
                return this.SakstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SakstypeIdField, value) != true)) {
                    this.SakstypeIdField = value;
                    this.RaisePropertyChanged("SakstypeId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom saksparter skal oppføres som mottakere for automatisk generert journalpost, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SendTilSakspart {
            get {
                return this.SendTilSakspartField;
            }
            set {
                if ((this.SendTilSakspartField.Equals(value) != true)) {
                    this.SendTilSakspartField = value;
                    this.RaisePropertyChanged("SendTilSakspart");
                }
            }
        }
        
        /// <summary>
        /// Den dato aktiviteten er startet.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Startdato {
            get {
                return this.StartdatoField;
            }
            set {
                if ((this.StartdatoField.Equals(value) != true)) {
                    this.StartdatoField = value;
                    this.RaisePropertyChanged("Startdato");
                }
            }
        }
        
        /// <summary>
        /// Aktivitetens status.
        /// </summary>
        /// <value>Inneholder detaljer om den status aktiviteten har.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AktivitetStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        /// <summary>
        /// Referanse til aktivitetens status.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusIdField, value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        /// <summary>
        /// Reelt tidsforbruk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Tidsforbruk {
            get {
                return this.TidsforbrukField;
            }
            set {
                if ((this.TidsforbrukField.Equals(value) != true)) {
                    this.TidsforbrukField = value;
                    this.RaisePropertyChanged("Tidsforbruk");
                }
            }
        }
        
        /// <summary>
        /// Tilgangskoden aktiviteten er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangskoden aktiviteten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangskode.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
        
        /// <summary>
        /// Den administrative enhet som aktiviteten er begrenset for bruk til.
        /// </summary>
        /// <value>Inneholder detaljer om den administrative enhet som aktiviteten er begrenset for bruk til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling TilhoererEnhet {
            get {
                return this.TilhoererEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.TilhoererEnhetField, value) != true)) {
                    this.TilhoererEnhetField = value;
                    this.RaisePropertyChanged("TilhoererEnhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den administrative enhet som aktiviteten er begrenset for bruk til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilhoererEnhetId {
            get {
                return this.TilhoererEnhetIdField;
            }
            set {
                if ((this.TilhoererEnhetIdField.Equals(value) != true)) {
                    this.TilhoererEnhetIdField = value;
                    this.RaisePropertyChanged("TilhoererEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Saksbehandler som aktiviteten er begrenset for bruk til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som aktiviteten er begrenset for bruk til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn TilhoererSaksbehandler {
            get {
                return this.TilhoererSaksbehandlerField;
            }
            set {
                if ((object.ReferenceEquals(this.TilhoererSaksbehandlerField, value) != true)) {
                    this.TilhoererSaksbehandlerField = value;
                    this.RaisePropertyChanged("TilhoererSaksbehandler");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den personen som aktiviteten er begrenset for bruk til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilhoererSaksbehandlerId {
            get {
                return this.TilhoererSaksbehandlerIdField;
            }
            set {
                if ((this.TilhoererSaksbehandlerIdField.Equals(value) != true)) {
                    this.TilhoererSaksbehandlerIdField = value;
                    this.RaisePropertyChanged("TilhoererSaksbehandlerId");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt1 {
            get {
                return this.TilleggsAttributt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt1Field, value) != true)) {
                    this.TilleggsAttributt1Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt1");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt2 {
            get {
                return this.TilleggsAttributt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt2Field, value) != true)) {
                    this.TilleggsAttributt2Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt2");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 3.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt3 {
            get {
                return this.TilleggsAttributt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt3Field, value) != true)) {
                    this.TilleggsAttributt3Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt3");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 4.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt4 {
            get {
                return this.TilleggsAttributt4Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt4Field, value) != true)) {
                    this.TilleggsAttributt4Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt4");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 5.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt5 {
            get {
                return this.TilleggsAttributt5Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt5Field, value) != true)) {
                    this.TilleggsAttributt5Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt5");
                }
            }
        }
        
        /// <summary>
        /// TilleggsID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilleggsId {
            get {
                return this.TilleggsIdField;
            }
            set {
                if ((this.TilleggsIdField.Equals(value) != true)) {
                    this.TilleggsIdField = value;
                    this.RaisePropertyChanged("TilleggsId");
                }
            }
        }
        
        /// <summary>
        /// Aktivitetens tittel.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tittel {
            get {
                return this.TittelField;
            }
            set {
                if ((object.ReferenceEquals(this.TittelField, value) != true)) {
                    this.TittelField = value;
                    this.RaisePropertyChanged("Tittel");
                }
            }
        }
        
        /// <summary>
        /// Aktivitet denne aktiviteten er underlagt.
        /// </summary>
        /// <value>Inneholder attributter som beskriver aktiviteten denne aktiviteten er underlagt.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Aktivitet UnderlagtAktivitet {
            get {
                return this.UnderlagtAktivitetField;
            }
            set {
                if ((object.ReferenceEquals(this.UnderlagtAktivitetField, value) != true)) {
                    this.UnderlagtAktivitetField = value;
                    this.RaisePropertyChanged("UnderlagtAktivitet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hvilken aktivitet denne aktiviteten er underlagt.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UnderlagtAktivitetId {
            get {
                return this.UnderlagtAktivitetIdField;
            }
            set {
                if ((this.UnderlagtAktivitetIdField.Equals(value) != true)) {
                    this.UnderlagtAktivitetIdField = value;
                    this.RaisePropertyChanged("UnderlagtAktivitetId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom aktivitetens tittel skal skjermes, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Uoff {
            get {
                return this.UoffField;
            }
            set {
                if ((this.UoffField.Equals(value) != true)) {
                    this.UoffField = value;
                    this.RaisePropertyChanged("Uoff");
                }
            }
        }
        
        /// <summary>
        /// Saksbehandler som har utført aktiviteten.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som har utført aktiviteten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn UtfoertAv {
            get {
                return this.UtfoertAvField;
            }
            set {
                if ((object.ReferenceEquals(this.UtfoertAvField, value) != true)) {
                    this.UtfoertAvField = value;
                    this.RaisePropertyChanged("UtfoertAv");
                }
            }
        }
        
        /// <summary>
        /// Den dato aktiviteten er ferdig utført.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Utfoertdato {
            get {
                return this.UtfoertdatoField;
            }
            set {
                if ((this.UtfoertdatoField.Equals(value) != true)) {
                    this.UtfoertdatoField = value;
                    this.RaisePropertyChanged("Utfoertdato");
                }
            }
        }
        
        /// <summary>
        /// Hvordan utførelse av aktiviteten skal meldes tilbake til oppdragsgiver.
        /// </summary>
        /// <value>Inneholder detaljer om hvordan utførelse av aktiviteten skal meldes tilbake til oppdragsgiver.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AktivitetVarslingsform Varslingsform {
            get {
                return this.VarslingsformField;
            }
            set {
                if ((object.ReferenceEquals(this.VarslingsformField, value) != true)) {
                    this.VarslingsformField = value;
                    this.RaisePropertyChanged("Varslingsform");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hvordan utførelse av aktiviteten skal meldes tilbake til oppdragsgiver.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarslingsformId {
            get {
                return this.VarslingsformIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VarslingsformIdField, value) != true)) {
                    this.VarslingsformIdField = value;
                    this.RaisePropertyChanged("VarslingsformId");
                }
            }
        }
        
        /// <summary>
        /// Date and time created - Dato og klokkeslett for oppretting av recorden
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=82)]
        public System.Nullable<System.DateTime> Opprettet {
            get {
                return this.OpprettetField;
            }
            set {
                if ((this.OpprettetField.Equals(value) != true)) {
                    this.OpprettetField = value;
                    this.RaisePropertyChanged("Opprettet");
                }
            }
        }
        
        /// <summary>
        /// Date and time last updated - Dato og klokkeslett for sist oppdatering.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=83)]
        public System.Nullable<System.DateTime> SistOppdatert {
            get {
                return this.SistOppdatertField;
            }
            set {
                if ((this.SistOppdatertField.Equals(value) != true)) {
                    this.SistOppdatertField = value;
                    this.RaisePropertyChanged("SistOppdatert");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om aktivitetstyper.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AktivitetType", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AktivitetType : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om behandlingsform for aktiviteter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AktivitetBehandlingsform", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AktivitetBehandlingsform : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 10 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om beslutningskoder for aktiviteter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AktivitetBeslutningskode", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AktivitetBeslutningskode : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> NegativField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PositivField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AktivitetStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusIdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom beslutningen er negativ og forrige aktivitet skal aktiviseres, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Negativ {
            get {
                return this.NegativField;
            }
            set {
                if ((this.NegativField.Equals(value) != true)) {
                    this.NegativField = value;
                    this.RaisePropertyChanged("Negativ");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom beslutningen er positiv og neste aktivitet skal aktiviseres, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Positiv {
            get {
                return this.PositivField;
            }
            set {
                if ((this.PositivField.Equals(value) != true)) {
                    this.PositivField = value;
                    this.RaisePropertyChanged("Positiv");
                }
            }
        }
        
        /// <summary>
        /// Status som skal settes når beslutningskoden benyttes.
        /// </summary>
        /// <value>Inneholder attributter som beskriver status som skal settes når beslutningskoden benyttes.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AktivitetStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        /// <summary>
        /// Referanse til status som skal settes når beslutningskoden benyttes.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om status for aktiviteter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AktivitetStatus", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AktivitetStatus : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AktivField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FerdigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SorteringField;
        
        /// <summary>
        /// Valgt dersom statusverdien innebærer at aktiviteten er aktivisert, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Aktiv {
            get {
                return this.AktivField;
            }
            set {
                if ((this.AktivField.Equals(value) != true)) {
                    this.AktivField = value;
                    this.RaisePropertyChanged("Aktiv");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom statusverdien innebærer at aktiviteten er ferdig/fullført, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Ferdig {
            get {
                return this.FerdigField;
            }
            set {
                if ((this.FerdigField.Equals(value) != true)) {
                    this.FerdigField = value;
                    this.RaisePropertyChanged("Ferdig");
                }
            }
        }
        
        /// <summary>
        /// Unik ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Sorteringsrekkefølge ved visning av aktiviteten.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sortering {
            get {
                return this.SorteringField;
            }
            set {
                if ((this.SorteringField.Equals(value) != true)) {
                    this.SorteringField = value;
                    this.RaisePropertyChanged("Sortering");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om prioritetskoder for aktiviteter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AktivitetPrioritet", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AktivitetPrioritet : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SorteringField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 10 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Sorteringsrekkefølge ved visning prioriteten.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sortering {
            get {
                return this.SorteringField;
            }
            set {
                if ((this.SorteringField.Equals(value) != true)) {
                    this.SorteringField = value;
                    this.RaisePropertyChanged("Sortering");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om rapportkategorier for aktiviteter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AktivitetRapportKategori", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AktivitetRapportKategori : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om en bestemt rolle og de rettigheter rollen gir.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rolle", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Rolle : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkiverKonsepterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivereSaksgangloggerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ArkivlederField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ArkivpersonellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutoriseringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvskriveDokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EkspedereDokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndreBehandlingsfristField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndreSaksansvarligField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndreSaksbehandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndreSaksdelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndreSaksstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndreTilgangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlytteJournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FullSoeketilgangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LederField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeseEgendefinerteLoggerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OppretteMapperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OppretteNyJournalpostEksterntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OppretteNyJournalpostInterntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> OppretteNyeRollerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OppretteSakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrereAdmInndelingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RegistrereArkivorganiseringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrereDokumentmalerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RegistrereIAdresseregisteretField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrereKlasseringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RegistrereKopimottakereField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrereMerknaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RegistrerePersonerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegistrereTilgangsgrupperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrereTilleggsklasseringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RegistrereUtvalgOgMedlemmerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SaksbehandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SystemansvarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TildeleRollerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TilgangTilDriftsfunksjonerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilknytteSaksdokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtvalgssekretaerField;
        
        /// <summary>
        /// Styrer retten til å arkivere konsepter/konseptversjoner.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Til journalposter mv hvor en selv er ansvarlig saksbehandler.
        /// 2 - Som 1 med tillegg av journalposter tilhørende saker hvor en selv er saksansvarlig.
        /// 3 - Som 2 med tillegg av de journalposter mv hvor ansvarlig tilhører egen enhet.
        /// 4 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.ARKKON.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkiverKonsepter {
            get {
                return this.ArkiverKonsepterField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkiverKonsepterField, value) != true)) {
                    this.ArkiverKonsepterField = value;
                    this.RaisePropertyChanged("ArkiverKonsepter");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å arkivere logger fra saksgangsystem.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - På saker, journalposter mv hvor en selv er ansvarlig.
        /// 2 - Som 1 med tillegg av saker, journalposter mv hvor en selv er registrert som saksbehandler på minst en journalpost.
        /// 3 - Som 2 med tillegg av saker, journalposter mv hvor ansvarlig tilhører egen enhet.
        /// 4 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.ARKLOGG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivereSaksganglogger {
            get {
                return this.ArkivereSaksgangloggerField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivereSaksgangloggerField, value) != true)) {
                    this.ArkivereSaksgangloggerField = value;
                    this.RaisePropertyChanged("ArkivereSaksganglogger");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi rettigheter som arkivleder, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet RO.ARKLEDER.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Arkivleder {
            get {
                return this.ArkivlederField;
            }
            set {
                if ((this.ArkivlederField.Equals(value) != true)) {
                    this.ArkivlederField = value;
                    this.RaisePropertyChanged("Arkivleder");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi rettigheter som arkivpersonell, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Arkivpersonell {
            get {
                return this.ArkivpersonellField;
            }
            set {
                if ((this.ArkivpersonellField.Equals(value) != true)) {
                    this.ArkivpersonellField = value;
                    this.RaisePropertyChanged("Arkivpersonell");
                }
            }
        }
        
        /// <summary>
        /// Angir hvilken rett rollen gir til å autorisere personer for tilgangskoder.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Begrenset av egen autorisering og personer tilhørende egen adm enhet.
        /// 2 - Begrenset av egen autorisering.
        /// 3 - Ingen begrensninger. Dersom rollen inkluderer systemansvar medfører dette også rett til å registrere nye tilgangskoder.
        /// Tilsvarer NOARK4 feltet RO.AUT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Autorisering {
            get {
                return this.AutoriseringField;
            }
            set {
                if ((object.ReferenceEquals(this.AutoriseringField, value) != true)) {
                    this.AutoriseringField = value;
                    this.RaisePropertyChanged("Autorisering");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å avskrive dokument.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter
        /// 1 - På journalposter mv hvor en selv er ansvarlig saksbehandler.
        /// 2 - Som 1 med tillegg av journalposter tilhørende saker hvor en selv er saksansvarlig.
        /// 3 - Som 2 med tillegg av journalposter mv hvor ansvarlig tilhører egen enhet.
        /// 4 - Innenfor hele organisasjonen
        /// Tilsvarer NOARK4 feltet RO.AVSKRIV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvskriveDokument {
            get {
                return this.AvskriveDokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.AvskriveDokumentField, value) != true)) {
                    this.AvskriveDokumentField = value;
                    this.RaisePropertyChanged("AvskriveDokument");
                }
            }
        }
        
        /// <summary>
        /// Beskrivelse av rollen.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Beskrivelse {
            get {
                return this.BeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BeskrivelseField, value) != true)) {
                    this.BeskrivelseField = value;
                    this.RaisePropertyChanged("Beskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å ekspedere dokument.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - For journalposter mv hvor en selv er ansvarlig saksbehandler.
        /// 2 - Som 1 med tillegg av journalposter tilhørende saker hvor en selv er saksansvarlig.
        /// 3 - Som 2 med tillegg av de journalposter mv hvor ansvarlig tilhører egen enhet.
        /// 4 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.EKSPDOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EkspedereDokument {
            get {
                return this.EkspedereDokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.EkspedereDokumentField, value) != true)) {
                    this.EkspedereDokumentField = value;
                    this.RaisePropertyChanged("EkspedereDokument");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å endre behandlingsfrist på mottakere.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - På journalposter mv hvor en selv er ansvarlig saksbehandler.
        /// 2 - Som 1 med tillegg av journalposter tilhørende saker hvor en selv er saksansvarlig.
        /// 3 - Som 2 med tillegg av de journalposter mv hvor ansvarlig tilhører egen enhet.
        /// 4 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.EFRIST.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndreBehandlingsfrist {
            get {
                return this.EndreBehandlingsfristField;
            }
            set {
                if ((object.ReferenceEquals(this.EndreBehandlingsfristField, value) != true)) {
                    this.EndreBehandlingsfristField = value;
                    this.RaisePropertyChanged("EndreBehandlingsfrist");
                }
            }
        }
        
        /// <summary>
        /// Angir hvilken rett rollen gir til å endre saksansvarlig.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Innenfor egen enhet.
        /// 2 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.ESANSV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndreSaksansvarlig {
            get {
                return this.EndreSaksansvarligField;
            }
            set {
                if ((object.ReferenceEquals(this.EndreSaksansvarligField, value) != true)) {
                    this.EndreSaksansvarligField = value;
                    this.RaisePropertyChanged("EndreSaksansvarlig");
                }
            }
        }
        
        /// <summary>
        /// Angir hvilken rett rollen gir til å endre saksbehandler.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0. Ingen rettigheter.
        /// 1. Innenfor egen enhet.
        /// 2. Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.ESBH.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndreSaksbehandler {
            get {
                return this.EndreSaksbehandlerField;
            }
            set {
                if ((object.ReferenceEquals(this.EndreSaksbehandlerField, value) != true)) {
                    this.EndreSaksbehandlerField = value;
                    this.RaisePropertyChanged("EndreSaksbehandler");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å endre saksdel, arkivdel og journalenhet på journalposter.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - På journalposter mv hvor en selv er ansvarlig saksbehandler.
        /// 2 - Som 1 med tillegg av journalposter tilhørende saker hvor en selv er saksansvarlig.
        /// 3 - Som 2 med tillegg av de journalposter mv hvor ansvarlig tilhører egen enhet.
        /// 4 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.ESDEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndreSaksdel {
            get {
                return this.EndreSaksdelField;
            }
            set {
                if ((object.ReferenceEquals(this.EndreSaksdelField, value) != true)) {
                    this.EndreSaksdelField = value;
                    this.RaisePropertyChanged("EndreSaksdel");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å flytte en journalpost med tilknyttede saksdokument fra en sak til en annen.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - På saker hvor en selv er ansvarlig.
        /// 2 - Som 1 med tillegg av saker hvor en selv er registrert som saksbehandler på minst en journalpost.
        /// 3 - Som 2 med tillegg av saker hvor saksansvarlig tilhører egen enhet.
        /// 4 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.ESSTAT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndreSaksstatus {
            get {
                return this.EndreSaksstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.EndreSaksstatusField, value) != true)) {
                    this.EndreSaksstatusField = value;
                    this.RaisePropertyChanged("EndreSaksstatus");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å endre tilgangsinformasjon (tilgangskode, hjemmel for u.off, avgraderingsopplysninger,
        /// tilgangsgruppe om medlemmer i disse) for saker, journalposter, saksdokument mv.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Når en selv er ansvarlig (saksansvarlig, saksbehandler, utvalgssekretær mv).
        /// 2 - Som 1 med tillegg av journalposter tilhørende saker hvor en selv er saksansvarlig.
        /// 3 - Som 2 med tillegg av de journalposter hvor ansvarlig tilhører egen enhet.
        /// 4 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.ETILG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndreTilgang {
            get {
                return this.EndreTilgangField;
            }
            set {
                if ((object.ReferenceEquals(this.EndreTilgangField, value) != true)) {
                    this.EndreTilgangField = value;
                    this.RaisePropertyChanged("EndreTilgang");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å endre saksstatus (inkludert å avslutte og gjenåpne saker) til saker.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Mellom saker som en selv er saksansvarlig for.
        /// 2 - Innenfor saker tilhørende egen enhet.
        /// 3 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.FLYTTJP.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlytteJournalpost {
            get {
                return this.FlytteJournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.FlytteJournalpostField, value) != true)) {
                    this.FlytteJournalpostField = value;
                    this.RaisePropertyChanged("FlytteJournalpost");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi full søketilgang, kun avgrenset av brukerens autorisasjoner,
        /// ikke valgt hvis rollen kun skal gi tilgang til søking på informasjon tilgjengelig for offentligheten, dvs
        /// de attributter som inngår i offentlig journal og tilsvarende.
        /// Tilsvarer NOARK4 feltet RO.SOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FullSoeketilgang {
            get {
                return this.FullSoeketilgangField;
            }
            set {
                if ((this.FullSoeketilgangField.Equals(value) != true)) {
                    this.FullSoeketilgangField = value;
                    this.RaisePropertyChanged("FullSoeketilgang");
                }
            }
        }
        
        /// <summary>
        /// Primærnøkkelen i tabellen.
        /// Tilsvarer NOARK4 feltet RO.ROLLEID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi rettigheter som leder i den adm. enhet som er knyttet til rollen (og dermed
        /// for de adm. enheter som er underlagt denne, jf tabellen Administrativ inndeling), ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet RO.LEDER.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Leder {
            get {
                return this.LederField;
            }
            set {
                if ((this.LederField.Equals(value) != true)) {
                    this.LederField = value;
                    this.RaisePropertyChanged("Leder");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å opprette nye dokumentmaler.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Egne oppdateringer tilknyttet et objekt.
        /// 2 - Alle oppdateringer tilknyttet er objekt.
        /// 3 - Tilgang til alle logger på tvers av tilgangskode.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeseEgendefinerteLogger {
            get {
                return this.LeseEgendefinerteLoggerField;
            }
            set {
                if ((object.ReferenceEquals(this.LeseEgendefinerteLoggerField, value) != true)) {
                    this.LeseEgendefinerteLoggerField = value;
                    this.RaisePropertyChanged("LeseEgendefinerteLogger");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 30 tegn.
        /// Tilsvarer NOARK4 feltet RO.NAVN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Navn {
            get {
                return this.NavnField;
            }
            set {
                if ((object.ReferenceEquals(this.NavnField, value) != true)) {
                    this.NavnField = value;
                    this.RaisePropertyChanged("Navn");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å opprette nye mapper.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Private mapper.
        /// 2 - Mapper for administrative inndelinger.
        /// 3 - Mapper for administrative strukturer.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OppretteMapper {
            get {
                return this.OppretteMapperField;
            }
            set {
                if ((object.ReferenceEquals(this.OppretteMapperField, value) != true)) {
                    this.OppretteMapperField = value;
                    this.RaisePropertyChanged("OppretteMapper");
                }
            }
        }
        
        /// <summary>
        /// Angir hvilken rett rollen gir til å opprette journalpost for eksternt produsert dokument.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Med seg selv som ansvarlig, begrenset til de saker hvor en selv allerede er registrert som saksbehandler på minst en avsender- eller mottakerpost.
        /// 2 - Med seg selv som ansvarlig.
        /// 3 - Med saksbehandler som tilhører egen enhet.
        /// 4 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.NYJPOSTE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OppretteNyJournalpostEksternt {
            get {
                return this.OppretteNyJournalpostEksterntField;
            }
            set {
                if ((object.ReferenceEquals(this.OppretteNyJournalpostEksterntField, value) != true)) {
                    this.OppretteNyJournalpostEksterntField = value;
                    this.RaisePropertyChanged("OppretteNyJournalpostEksternt");
                }
            }
        }
        
        /// <summary>
        /// Angir hvilken rett rollen gir til å opprette journalpost for internt produsert dokument.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Med seg selv som ansvarlig, begrenset til de saker hvor en selv allerede er registrert som saksbehandler på minst en avsender- eller mottakerpost.
        /// 2 - Med seg selv som ansvarlig.
        /// 3 - Med saksbehandler som tilhører egen enhet.
        /// 4 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.NYJPOSTI.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OppretteNyJournalpostInternt {
            get {
                return this.OppretteNyJournalpostInterntField;
            }
            set {
                if ((object.ReferenceEquals(this.OppretteNyJournalpostInterntField, value) != true)) {
                    this.OppretteNyJournalpostInterntField = value;
                    this.RaisePropertyChanged("OppretteNyJournalpostInternt");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi rett til å opprette nye roller, ikke ellers.
        /// Tilsvarer NOARK4 feltet RO.REGROLLER.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> OppretteNyeRoller {
            get {
                return this.OppretteNyeRollerField;
            }
            set {
                if ((this.OppretteNyeRollerField.Equals(value) != true)) {
                    this.OppretteNyeRollerField = value;
                    this.RaisePropertyChanged("OppretteNyeRoller");
                }
            }
        }
        
        /// <summary>
        /// Angir hvilken rett rollen gir til å opprette nye saker.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Med seg selv som saksansvarlig.
        /// 2 - Innenfor egen enhet.
        /// 3 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.NYSAK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OppretteSaker {
            get {
                return this.OppretteSakerField;
            }
            set {
                if ((object.ReferenceEquals(this.OppretteSakerField, value) != true)) {
                    this.OppretteSakerField = value;
                    this.RaisePropertyChanged("OppretteSaker");
                }
            }
        }
        
        /// <summary>
        /// Angir hvilken rett rollen gir til å registrere i tabellen Administrativ inndeling.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter
        /// 1 - Innenfor egen enhet.
        /// 2 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.REGADM.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrereAdmInndeling {
            get {
                return this.RegistrereAdmInndelingField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrereAdmInndelingField, value) != true)) {
                    this.RegistrereAdmInndelingField = value;
                    this.RaisePropertyChanged("RegistrereAdmInndeling");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi rett til å registrere i alle tabeller knyttet til arkivorganiseringen, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet RO.REGARK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RegistrereArkivorganisering {
            get {
                return this.RegistrereArkivorganiseringField;
            }
            set {
                if ((this.RegistrereArkivorganiseringField.Equals(value) != true)) {
                    this.RegistrereArkivorganiseringField = value;
                    this.RaisePropertyChanged("RegistrereArkivorganisering");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å opprette nye dokumentmaler.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Innenfor administrative inndelinger.
        /// 2 - Innenfor hele organisasjonen.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrereDokumentmaler {
            get {
                return this.RegistrereDokumentmalerField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrereDokumentmalerField, value) != true)) {
                    this.RegistrereDokumentmalerField = value;
                    this.RaisePropertyChanged("RegistrereDokumentmaler");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi rett til å registrere i tabellen Adresseregister, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet RO.REGADR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RegistrereIAdresseregisteret {
            get {
                return this.RegistrereIAdresseregisteretField;
            }
            set {
                if ((this.RegistrereIAdresseregisteretField.Equals(value) != true)) {
                    this.RegistrereIAdresseregisteretField = value;
                    this.RaisePropertyChanged("RegistrereIAdresseregisteret");
                }
            }
        }
        
        /// <summary>
        /// Angir hvilken rett rollen gir til å endre klassering (med sortering fra 1 til 9) for saker.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - På saker hvor en selv er saksansvarlig.
        /// 2 - Som 1 med tillegg av saker hvor saksansvarlig tilhører egen enhet.
        /// 3 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.EKLASS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrereKlassering {
            get {
                return this.RegistrereKlasseringField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrereKlasseringField, value) != true)) {
                    this.RegistrereKlasseringField = value;
                    this.RaisePropertyChanged("RegistrereKlassering");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi tilgang til å registrere kopimottakere innen hele organisasjonen, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RegistrereKopimottakere {
            get {
                return this.RegistrereKopimottakereField;
            }
            set {
                if ((this.RegistrereKopimottakereField.Equals(value) != true)) {
                    this.RegistrereKopimottakereField = value;
                    this.RaisePropertyChanged("RegistrereKopimottakere");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å registrere merknader.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0. Ingen rettigheter
        /// 1. Til saker, journalposter mv hvor en selv er ansvarlig
        /// 2. Som 1 med tillegg av saker, journalposter mv hvor en selv er registrert som saksbehandler på minst en journalpost.
        /// 3. Som 2 med tillegg av saker, journalposter mv hvor ansvarlig tilhører egen enhet.
        /// 4. Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.RMERKN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrereMerknader {
            get {
                return this.RegistrereMerknaderField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrereMerknaderField, value) != true)) {
                    this.RegistrereMerknaderField = value;
                    this.RaisePropertyChanged("RegistrereMerknader");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi rett til å registrere i tabellen Person, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet RO.REGPERSON.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RegistrerePersoner {
            get {
                return this.RegistrerePersonerField;
            }
            set {
                if ((this.RegistrerePersonerField.Equals(value) != true)) {
                    this.RegistrerePersonerField = value;
                    this.RaisePropertyChanged("RegistrerePersoner");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å registrere tilgangsgrupper.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Opprette saksbehandler/administrative enhetsgrupper.
        /// 2 - Opprette tilgangsgrupper.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegistrereTilgangsgrupper {
            get {
                return this.RegistrereTilgangsgrupperField;
            }
            set {
                if ((this.RegistrereTilgangsgrupperField.Equals(value) != true)) {
                    this.RegistrereTilgangsgrupperField = value;
                    this.RaisePropertyChanged("RegistrereTilgangsgrupper");
                }
            }
        }
        
        /// <summary>
        /// Angir hvilken rett rollen gir til å endre tilleggsklassering (klassering med sortering X) for saker.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter
        /// 1 - På saker hvor en selv er saksansvarlig
        /// 2 - Som 1 med tillegg av saker hvor en selv er registrert som saksbehandler på minst en journalpost.
        /// 3 - Som 2 med tillegg av saker hvor ansvarlig tilhører egen enhet.
        /// 4 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.ETKLASS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrereTilleggsklassering {
            get {
                return this.RegistrereTilleggsklasseringField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrereTilleggsklasseringField, value) != true)) {
                    this.RegistrereTilleggsklasseringField = value;
                    this.RaisePropertyChanged("RegistrereTilleggsklassering");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi rett til å registrere utvalg og medlemmer i disse, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet RO.REGUTVMED.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RegistrereUtvalgOgMedlemmer {
            get {
                return this.RegistrereUtvalgOgMedlemmerField;
            }
            set {
                if ((this.RegistrereUtvalgOgMedlemmerField.Equals(value) != true)) {
                    this.RegistrereUtvalgOgMedlemmerField = value;
                    this.RaisePropertyChanged("RegistrereUtvalgOgMedlemmer");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis personen i denne rollen skal kunne utføre saksbehandling for den administrative enhet som er knyttet til rollen, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet RO.SAKSBH.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Saksbehandler {
            get {
                return this.SaksbehandlerField;
            }
            set {
                if ((this.SaksbehandlerField.Equals(value) != true)) {
                    this.SaksbehandlerField = value;
                    this.RaisePropertyChanged("Saksbehandler");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi tilgang til alle systemfunksjoner, inkl. retten til å autorisere seg selv, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet RO.SYSADM.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Systemansvar {
            get {
                return this.SystemansvarField;
            }
            set {
                if ((this.SystemansvarField.Equals(value) != true)) {
                    this.SystemansvarField = value;
                    this.RaisePropertyChanged("Systemansvar");
                }
            }
        }
        
        /// <summary>
        /// Angir hvilken rett rollen gir til å tildele personer roller.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - Innenfor egen enhet.
        /// 2 - Innenfor hele organisasjonen.
        /// Tilsvarer NOARK4 feltet RO.TILDELROL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TildeleRoller {
            get {
                return this.TildeleRollerField;
            }
            set {
                if ((object.ReferenceEquals(this.TildeleRollerField, value) != true)) {
                    this.TildeleRollerField = value;
                    this.RaisePropertyChanged("TildeleRoller");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi tilgang til et begrenset utvalg av systemfunksjoner som ikke
        /// inkluderer retten til å autorisere seg selv eller andre, ikke ellers.
        /// Tilsvarer NOARK4 feltet RO.DRIFT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TilgangTilDriftsfunksjoner {
            get {
                return this.TilgangTilDriftsfunksjonerField;
            }
            set {
                if ((this.TilgangTilDriftsfunksjonerField.Equals(value) != true)) {
                    this.TilgangTilDriftsfunksjonerField = value;
                    this.RaisePropertyChanged("TilgangTilDriftsfunksjoner");
                }
            }
        }
        
        /// <summary>
        /// Styrer retten til å tilknytte elektroniske saksdokument (inkl skannede dokument) til eksisterende journalposter.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier:
        /// 0 - Ingen rettigheter.
        /// 1 - På journalposter hvor en selv er ansvarlig saksbehandler.
        /// 2 - Som 1 med tillegg av journalposter tilhørende saker hvor en selv er saksansvarlig.
        /// 3 - Som 2 med tillegg av journalposter hvor ansvarlig tilhører egen enhet.
        /// 4 - Innenfor hele organisasjonen
        /// Tilsvarer NOARK4 feltet RO.TEDOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilknytteSaksdokument {
            get {
                return this.TilknytteSaksdokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.TilknytteSaksdokumentField, value) != true)) {
                    this.TilknytteSaksdokumentField = value;
                    this.RaisePropertyChanged("TilknytteSaksdokument");
                }
            }
        }
        
        /// <summary>
        /// Valgt hvis rollen skal gi tilgang til funksjoner for utvalgssekretær, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet RO.UTVSEKR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Utvalgssekretaer {
            get {
                return this.UtvalgssekretaerField;
            }
            set {
                if ((this.UtvalgssekretaerField.Equals(value) != true)) {
                    this.UtvalgssekretaerField = value;
                    this.RaisePropertyChanged("Utvalgssekretaer");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver sak.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sak", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Sak : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AntallJournalposterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkivdel ArkivdelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivdelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ArkiveresPaaPapirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BevaringstidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Byggesak[] ByggesakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.DelingsakRekvisisjon[] DelingsakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HjemmelUOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.JevnfoerSak[] JevnfoeringerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalenhet JournalenhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalenhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost[] JournalposterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> KassasjonsdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Kassasjonskode KassasjonskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KassasjonskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Klassering[] KlasseringerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Lenke[] LenkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Mappetype MappetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MappetypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Merknad[] MerknaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ObsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Plansak[] PlansakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Klassering[] PrimaerklasseringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Prosjekt ProsjektField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProsjektIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PublisertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkivdel SakenOpprettetIArkivdelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SakenOpprettetIArkivdelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaksaarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn SaksansvarligField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling SaksansvarligEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaksansvarligEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaksansvarligIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SaksdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaksnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sakspart[] SaksparterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Saksstatus SaksstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaksstatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SakstittelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SakstittelUOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Klassering[] SekundaerklasseringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SekvensnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SisteJournaldatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkjermetSakstittelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStilling[] StillingerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe TilgangsgruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilgangsgruppeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt11Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt12Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt13Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt14Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt15Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt16Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt17Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt18Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt19Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt20Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt21Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt22Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt23Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt24Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt25Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UtlaantDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn UtlaantTilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtlaantTilIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SakstittelPersonnavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SistOppdatertField;
        
        /// <summary>
        /// Count of Journalposts - Antall journalposter i saken.
        /// Skal oppdateres automatisk og ikke kunne endres av noen.
        /// Tilsvarer NOARK4 feltet SA.ANTJP.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AntallJournalposter {
            get {
                return this.AntallJournalposterField;
            }
            set {
                if ((this.AntallJournalposterField.Equals(value) != true)) {
                    this.AntallJournalposterField = value;
                    this.RaisePropertyChanged("AntallJournalposter");
                }
            }
        }
        
        /// <summary>
        /// Record Section - Arkivdel saken er tilknyttet.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver de enkelte deler virksomhetens arkiver består av.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkivdel Arkivdel {
            get {
                return this.ArkivdelField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivdelField, value) != true)) {
                    this.ArkivdelField = value;
                    this.RaisePropertyChanged("Arkivdel");
                }
            }
        }
        
        /// <summary>
        /// Record Section Id - Referanse til arkivdel.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Arkivdel. Standardverdi hentes fra rollen til den bruker som gjør registreringen.
        /// Tilsvarer NOARK4 feltet SA.ARKDEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivdelId {
            get {
                return this.ArkivdelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivdelIdField, value) != true)) {
                    this.ArkivdelIdField = value;
                    this.RaisePropertyChanged("ArkivdelId");
                }
            }
        }
        
        /// <summary>
        /// Archived on paper - Valgt dersom alle dokumentene tilknyttet denne saken skal arkiveres på papir,
        /// ikke valgt hvis alle hoveddokumentene i saken skal arkiveres på elektronisk form.
        /// Tilsvarer NOARK4 feltet SA.PAPIR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ArkiveresPaaPapir {
            get {
                return this.ArkiveresPaaPapirField;
            }
            set {
                if ((this.ArkiveresPaaPapirField.Equals(value) != true)) {
                    this.ArkiveresPaaPapirField = value;
                    this.RaisePropertyChanged("ArkiveresPaaPapir");
                }
            }
        }
        
        /// <summary>
        /// Preservationtime - Antall år saken skal oppbevares før kassasjon eller annen aksjon i henhold til kassasjonskoden skal foretas.
        /// Tilsvarer NOARK4 feltet SA.BEVTID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Bevaringstid {
            get {
                return this.BevaringstidField;
            }
            set {
                if ((this.BevaringstidField.Equals(value) != true)) {
                    this.BevaringstidField = value;
                    this.RaisePropertyChanged("Bevaringstid");
                }
            }
        }
        
        /// <summary>
        /// Buildinginfo connected to the case - Byggesaker tilhørende saken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver byggesaker tilhørende saken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Byggesak[] Byggesaker {
            get {
                return this.ByggesakerField;
            }
            set {
                if ((object.ReferenceEquals(this.ByggesakerField, value) != true)) {
                    this.ByggesakerField = value;
                    this.RaisePropertyChanged("Byggesaker");
                }
            }
        }
        
        /// <summary>
        /// - Delingssaker tilhørende saken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver delingssaker tilhørende saken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.DelingsakRekvisisjon[] Delingsaker {
            get {
                return this.DelingsakerField;
            }
            set {
                if ((object.ReferenceEquals(this.DelingsakerField, value) != true)) {
                    this.DelingsakerField = value;
                    this.RaisePropertyChanged("Delingsaker");
                }
            }
        }
        
        /// <summary>
        /// Authority to exempt from public access - Henvisning til offentlighetsloven og/eller annet lovverk.
        /// Feltlengde: 70 tegn.
        /// Må ha innhold dersom Tilgangskode har et innhold forskjellig fra XX (ikke offentlighetsvurdert).
        /// Tilsvarer NOARK4 feltet SA.UOFF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HjemmelUOff {
            get {
                return this.HjemmelUOffField;
            }
            set {
                if ((object.ReferenceEquals(this.HjemmelUOffField, value) != true)) {
                    this.HjemmelUOffField = value;
                    this.RaisePropertyChanged("HjemmelUOff");
                }
            }
        }
        
        /// <summary>
        /// Unique ID - Unik nøkkel til saken.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet SA.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Confers to the case - Jevnføringer til saken.
        /// </summary>
        /// <value>Detaljer om saker som det refereres til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.JevnfoerSak[] Jevnfoeringer {
            get {
                return this.JevnfoeringerField;
            }
            set {
                if ((object.ReferenceEquals(this.JevnfoeringerField, value) != true)) {
                    this.JevnfoeringerField = value;
                    this.RaisePropertyChanged("Jevnfoeringer");
                }
            }
        }
        
        /// <summary>
        /// The unit that is responsible for archiving - Journalenheten som har arkivansvaret for saken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalenheten som har arkivansvaret for saken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalenhet Journalenhet {
            get {
                return this.JournalenhetField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetField, value) != true)) {
                    this.JournalenhetField = value;
                    this.RaisePropertyChanged("Journalenhet");
                }
            }
        }
        
        /// <summary>
        /// Reference to the unit that is responsible for archiving - Referanse til den journalenhet som har arkivansvaret for saken.
        /// Feltlengde: 10 tegn.
        /// Standardverdi hentes fra rollen til en bruker som gjør registreringen.
        /// Skal alltid være utfylt dersom skjerming etter journalenhet benyttes.
        /// Oppslag mot tabellen Journalenhet.
        /// Tilsvarer NOARK4 feltet SA.JENHET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalenhetId {
            get {
                return this.JournalenhetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetIdField, value) != true)) {
                    this.JournalenhetIdField = value;
                    this.RaisePropertyChanged("JournalenhetId");
                }
            }
        }
        
        /// <summary>
        /// Registry entries belonging to the case - Journalposter tilhørende saken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalføringen av dokumenter i saken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost[] Journalposter {
            get {
                return this.JournalposterField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalposterField, value) != true)) {
                    this.JournalposterField = value;
                    this.RaisePropertyChanged("Journalposter");
                }
            }
        }
        
        /// <summary>
        /// Disposal date - Når saken avsluttes, skal feltet automatisk oppdateres til dato (for kassasjon eller annen aksjon) ved å legge til årstall fra attributtet Siste journaldato til det antall år som er angitt i Bevaringstid. Ved gjenåpning av saken skal attributtet nullstilles igjen. Når kassasjon er utført,
        /// bør attributtet oppdateres med virkelig dato for kassasjon, og verdien U (kassasjon utført) registreres i Kassasjonskode.
        /// Tilsvarer NOARK4 feltet SA.KASSDATO
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Kassasjonsdato {
            get {
                return this.KassasjonsdatoField;
            }
            set {
                if ((this.KassasjonsdatoField.Equals(value) != true)) {
                    this.KassasjonsdatoField = value;
                    this.RaisePropertyChanged("Kassasjonsdato");
                }
            }
        }
        
        /// <summary>
        /// Disposal information - Sakens kassasjonskode.
        /// </summary>
        /// <value>Angir hva som skal skje når angitt kassasjonstidspunkt er nådd.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Kassasjonskode Kassasjonskode {
            get {
                return this.KassasjonskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.KassasjonskodeField, value) != true)) {
                    this.KassasjonskodeField = value;
                    this.RaisePropertyChanged("Kassasjonskode");
                }
            }
        }
        
        /// <summary>
        /// Reference to the disposal information Referanse til kode som angir hva som skal skje når kassasjonsåret er nådd.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Kassasjonskode.
        /// Tilsvarer NOARK4 feltet SA.KASSKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KassasjonskodeId {
            get {
                return this.KassasjonskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.KassasjonskodeIdField, value) != true)) {
                    this.KassasjonskodeIdField = value;
                    this.RaisePropertyChanged("KassasjonskodeId");
                }
            }
        }
        
        /// <summary>
        /// Classifications of the case - Klasseringer av saken.
        /// </summary>
        /// <value>
        /// Inneholder informasjon om klassering av saker, inkludert primærkode, sekundærkode etc,
        /// og eventuell tilleggsklassering der det er behov for slik.
        /// </value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Klassering[] Klasseringer {
            get {
                return this.KlasseringerField;
            }
            set {
                if ((object.ReferenceEquals(this.KlasseringerField, value) != true)) {
                    this.KlasseringerField = value;
                    this.RaisePropertyChanged("Klasseringer");
                }
            }
        }
        
        /// <summary>
        /// Links in the case - Lenker til saken.
        /// </summary>
        /// <value>Inneholder attributter som beskriver lenker som er tilknyttet saken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Lenke[] Lenker {
            get {
                return this.LenkerField;
            }
            set {
                if ((object.ReferenceEquals(this.LenkerField, value) != true)) {
                    this.LenkerField = value;
                    this.RaisePropertyChanged("Lenker");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the case has been read - Valgt dersom saken har vært lest (åpnet i detaljvisning eller for redigering) av pålogget bruker,
        /// ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Lest {
            get {
                return this.LestField;
            }
            set {
                if ((this.LestField.Equals(value) != true)) {
                    this.LestField = value;
                    this.RaisePropertyChanged("Lest");
                }
            }
        }
        
        /// <summary>
        /// Case type - Sakens mappetype.
        /// </summary>
        /// <value>Inneholder attributter som beskriver mappetypen som saken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Mappetype Mappetype {
            get {
                return this.MappetypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MappetypeField, value) != true)) {
                    this.MappetypeField = value;
                    this.RaisePropertyChanged("Mappetype");
                }
            }
        }
        
        /// <summary>
        /// Reference to the case type - Referanse til sakens mappetype.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen mappetype.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MappetypeId {
            get {
                return this.MappetypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MappetypeIdField, value) != true)) {
                    this.MappetypeIdField = value;
                    this.RaisePropertyChanged("MappetypeId");
                }
            }
        }
        
        /// <summary>
        /// Notes in the case - Merknader knyttet til saken.
        /// </summary>
        /// <value></value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Merknad[] Merknader {
            get {
                return this.MerknaderField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknaderField, value) != true)) {
                    this.MerknaderField = value;
                    this.RaisePropertyChanged("Merknader");
                }
            }
        }
        
        /// <summary>
        /// NB date - Obs-dato.
        /// Det skal ikke være mulig å registrere en dato som ligger tilbake i tiden.
        /// Tilsvarer NOARK4 feltet SA.OBS
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Obs {
            get {
                return this.ObsField;
            }
            set {
                if ((this.ObsField.Equals(value) != true)) {
                    this.ObsField = value;
                    this.RaisePropertyChanged("Obs");
                }
            }
        }
        
        /// <summary>
        /// - Plansaker tilhørende saken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver plansaker tilhørende saken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Plansak[] Plansaker {
            get {
                return this.PlansakerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlansakerField, value) != true)) {
                    this.PlansakerField = value;
                    this.RaisePropertyChanged("Plansaker");
                }
            }
        }
        
        /// <summary>
        /// Primary classification -  Primærklassering av saken.
        /// </summary>
        /// <value>
        /// Inneholder informasjon om primærklassering av saken.
        /// </value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Klassering[] Primaerklassering {
            get {
                return this.PrimaerklasseringField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaerklasseringField, value) != true)) {
                    this.PrimaerklasseringField = value;
                    this.RaisePropertyChanged("Primaerklassering");
                }
            }
        }
        
        /// <summary>
        /// The project the case is connected to - Prosjekt saken er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om prosjektet saken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Prosjekt Prosjekt {
            get {
                return this.ProsjektField;
            }
            set {
                if ((object.ReferenceEquals(this.ProsjektField, value) != true)) {
                    this.ProsjektField = value;
                    this.RaisePropertyChanged("Prosjekt");
                }
            }
        }
        
        /// <summary>
        /// Reference to the project the case is connected to - Referanse til prosjekt -
        /// Feltlengde: 70 tegn.
        /// Oppslag mot tabellen Prosjekt.
        /// Tilsvarer NOARK4 feltet SA.PROSJEKT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProsjektId {
            get {
                return this.ProsjektIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProsjektIdField, value) != true)) {
                    this.ProsjektIdField = value;
                    this.RaisePropertyChanged("ProsjektId");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if the case is published - Valgt dersom saken kan publiseres, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Publisert {
            get {
                return this.PublisertField;
            }
            set {
                if ((this.PublisertField.Equals(value) != true)) {
                    this.PublisertField = value;
                    this.RaisePropertyChanged("Publisert");
                }
            }
        }
        
        /// <summary>
        /// The record section the case is created in - Arkivdelen saken er opprettet i.
        /// </summary>
        /// <value>Inneholder attributter som beskriver arkivdelen saken er opprettet i.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkivdel SakenOpprettetIArkivdel {
            get {
                return this.SakenOpprettetIArkivdelField;
            }
            set {
                if ((object.ReferenceEquals(this.SakenOpprettetIArkivdelField, value) != true)) {
                    this.SakenOpprettetIArkivdelField = value;
                    this.RaisePropertyChanged("SakenOpprettetIArkivdel");
                }
            }
        }
        
        /// <summary>
        /// Reference to the record section the case is ceated in - Referanse til arkivdelen saken er opprettet i.
        /// Dersom saken flyttes fra en arkivperiode til en annen, skal attributtet automatisk oppdateres med arkivdelen den tilhørte i den perioden saken be flyttet fra.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet SA.FRARKDEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SakenOpprettetIArkivdelId {
            get {
                return this.SakenOpprettetIArkivdelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SakenOpprettetIArkivdelIdField, value) != true)) {
                    this.SakenOpprettetIArkivdelIdField = value;
                    this.RaisePropertyChanged("SakenOpprettetIArkivdelId");
                }
            }
        }
        
        /// <summary>
        /// The year the case is created - Saksnummer, 1. ledd.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet SA.SAAR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Saksaar {
            get {
                return this.SaksaarField;
            }
            set {
                if ((this.SaksaarField.Equals(value) != true)) {
                    this.SaksaarField = value;
                    this.RaisePropertyChanged("Saksaar");
                }
            }
        }
        
        /// <summary>
        /// Officer responsible for the case - Saksansvarlig.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver navn og initialer til saksansvarlig.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn Saksansvarlig {
            get {
                return this.SaksansvarligField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksansvarligField, value) != true)) {
                    this.SaksansvarligField = value;
                    this.RaisePropertyChanged("Saksansvarlig");
                }
            }
        }
        
        /// <summary>
        /// Administrative unit/department responsible for the case - Administrativ inndeling som har ansvaret for saken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver den administrative inndeling som har ansvaret for saken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling SaksansvarligEnhet {
            get {
                return this.SaksansvarligEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksansvarligEnhetField, value) != true)) {
                    this.SaksansvarligEnhetField = value;
                    this.RaisePropertyChanged("SaksansvarligEnhet");
                }
            }
        }
        
        /// <summary>
        /// Reference to the unit responsible for the case - Referanse til den administrative enhet hvor saksansvaret ligger.
        /// Standardverdi fra innlogget bruker eller fast verdi 0 (ikke angitt) for arkivpersonalet.
        /// Oppslag mot tabellen Administrativ inndeling.
        /// Tilsvarer NOARK4 feltet SA.ADMID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SaksansvarligEnhetId {
            get {
                return this.SaksansvarligEnhetIdField;
            }
            set {
                if ((this.SaksansvarligEnhetIdField.Equals(value) != true)) {
                    this.SaksansvarligEnhetIdField = value;
                    this.RaisePropertyChanged("SaksansvarligEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Reference to the Officer responsible for the case - Referanse til den person som er saksansvarlig.
        /// Standardverdi fra innlogget bruker eller fast verdi 0 (ikke angitt) for arkivpersonalet.
        /// Oppslag mot tabellen Personnavn.
        /// Tilsvarer NOARK4 feltet SA.ANSVID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SaksansvarligId {
            get {
                return this.SaksansvarligIdField;
            }
            set {
                if ((this.SaksansvarligIdField.Equals(value) != true)) {
                    this.SaksansvarligIdField = value;
                    this.RaisePropertyChanged("SaksansvarligId");
                }
            }
        }
        
        /// <summary>
        /// Case creation date - Saksdato.
        /// Skal tildeles automatisk når ny sak opprettes, men skal kunne endres.
        /// Det er ikke mulig å registrere en dato som ligger fram i tiden.
        /// Tilsvarer NOARK4 feltet SA.DATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Saksdato {
            get {
                return this.SaksdatoField;
            }
            set {
                if ((this.SaksdatoField.Equals(value) != true)) {
                    this.SaksdatoField = value;
                    this.RaisePropertyChanged("Saksdato");
                }
            }
        }
        
        /// <summary>
        /// Case number, consisting of the year and the sequence number within the year  - Saksnummer sammensatt av saksår og sekevensnummer.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Saksnummer {
            get {
                return this.SaksnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksnummerField, value) != true)) {
                    this.SaksnummerField = value;
                    this.RaisePropertyChanged("Saksnummer");
                }
            }
        }
        
        /// <summary>
        /// People/parties that have interest in the case - Parter i saken.
        /// </summary>
        /// <value>Inneholder informasjon (navn, adresse mv) som beskriver etater, firma og privatpersoner som er parter i saken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sakspart[] Saksparter {
            get {
                return this.SaksparterField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksparterField, value) != true)) {
                    this.SaksparterField = value;
                    this.RaisePropertyChanged("Saksparter");
                }
            }
        }
        
        /// <summary>
        /// The status of the case - Sakens status.
        /// </summary>
        /// <value>Inneholder attributter som beskriver hvilken arkivmessig tilstand en sak er i.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Saksstatus Saksstatus {
            get {
                return this.SaksstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksstatusField, value) != true)) {
                    this.SaksstatusField = value;
                    this.RaisePropertyChanged("Saksstatus");
                }
            }
        }
        
        /// <summary>
        /// Reference to the status of the case - Referanse til sakens status.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Saksstatus.
        /// Tilsvarer NOARK4 feltet SA.STATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SaksstatusId {
            get {
                return this.SaksstatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksstatusIdField, value) != true)) {
                    this.SaksstatusIdField = value;
                    this.RaisePropertyChanged("SaksstatusId");
                }
            }
        }
        
        /// <summary>
        /// The title of the case - Sakens tittel.
        /// Saken skal alltid ha et meningsbærende innhold som er rimelig dekkende for den.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet SA.TITTEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sakstittel {
            get {
                return this.SakstittelField;
            }
            set {
                if ((object.ReferenceEquals(this.SakstittelField, value) != true)) {
                    this.SakstittelField = value;
                    this.RaisePropertyChanged("Sakstittel");
                }
            }
        }
        
        /// <summary>
        /// Flag that indicates if some of the title of the case is hidden - Valgt dersom hele eller deler av sakstittel skal unntas offentligheten, ikke valgt ellers.
        /// Tillates kun valgt dersom tilgangskode er angitt.
        /// Tilsvarer NOARK4 feltet SA.U1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SakstittelUOff {
            get {
                return this.SakstittelUOffField;
            }
            set {
                if ((this.SakstittelUOffField.Equals(value) != true)) {
                    this.SakstittelUOffField = value;
                    this.RaisePropertyChanged("SakstittelUOff");
                }
            }
        }
        
        /// <summary>
        /// Secondary classification of the case - Sekundærklassering av saken.
        /// </summary>
        /// <value>
        /// Inneholder informasjon om sekundærklassering av saken.
        /// </value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Klassering[] Sekundaerklassering {
            get {
                return this.SekundaerklasseringField;
            }
            set {
                if ((object.ReferenceEquals(this.SekundaerklasseringField, value) != true)) {
                    this.SekundaerklasseringField = value;
                    this.RaisePropertyChanged("Sekundaerklassering");
                }
            }
        }
        
        /// <summary>
        /// Sequence number of the case within a calendar year. Saksnummer, 2. ledd.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet SA.SEKNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sekvensnummer {
            get {
                return this.SekvensnummerField;
            }
            set {
                if ((this.SekvensnummerField.Equals(value) != true)) {
                    this.SekvensnummerField = value;
                    this.RaisePropertyChanged("Sekvensnummer");
                }
            }
        }
        
        /// <summary>
        /// The date the last Journalpost (registry entry) in the case was created - Siste Journaldato i saken.
        /// Skal oppdateres automatisk og ikke kunne endres av noen.
        /// Skal ha innhold når en eller flere journalposter er registrert i saken.
        /// Tilsvarer NOARK4 feltet SA.SISTEJP.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SisteJournaldato {
            get {
                return this.SisteJournaldatoField;
            }
            set {
                if ((this.SisteJournaldatoField.Equals(value) != true)) {
                    this.SisteJournaldatoField = value;
                    this.RaisePropertyChanged("SisteJournaldato");
                }
            }
        }
        
        /// <summary>
        /// The title of the case visible to the public. All hidden words are replaced with ***** - Skjermet sakstittel.
        /// Feltlengde: 255 tegn.
        /// </summary>
        /// <value>Skjermet sakstittel.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkjermetSakstittel {
            get {
                return this.SkjermetSakstittelField;
            }
            set {
                if ((object.ReferenceEquals(this.SkjermetSakstittelField, value) != true)) {
                    this.SkjermetSakstittelField = value;
                    this.RaisePropertyChanged("SkjermetSakstittel");
                }
            }
        }
        
        /// <summary>
        /// - Ansettelsessaker (stillinger) tilhørende saken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver ansettelsessaker (stillinger) tilhørende saken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStilling[] Stillinger {
            get {
                return this.StillingerField;
            }
            set {
                if ((object.ReferenceEquals(this.StillingerField, value) != true)) {
                    this.StillingerField = value;
                    this.RaisePropertyChanged("Stillinger");
                }
            }
        }
        
        /// <summary>
        /// Access group - Sakens tilgangsgruppe.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver tilgangsgruppen saken er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe Tilgangsgruppe {
            get {
                return this.TilgangsgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeField, value) != true)) {
                    this.TilgangsgruppeField = value;
                    this.RaisePropertyChanged("Tilgangsgruppe");
                }
            }
        }
        
        /// <summary>
        /// Reference to the Access group - Referanse til tilgangsgruppe.
        /// Dersom tilgangskode er angitt, skal medlemmene av gruppen gis tilgang dersom de er klarert for tilgangskoden,
        /// selv om ikke autorisasjonen gjelder innenfor den administrative enhet som saken hører til.
        /// Tilsvarer NOARK4 feltet SA.TGGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilgangsgruppeId {
            get {
                return this.TilgangsgruppeIdField;
            }
            set {
                if ((this.TilgangsgruppeIdField.Equals(value) != true)) {
                    this.TilgangsgruppeIdField = value;
                    this.RaisePropertyChanged("TilgangsgruppeId");
                }
            }
        }
        
        /// <summary>
        /// Access code - Sakens tilgangskode.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver tilgangskoden saken er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Reference to the access code - Referanse til tilgangskode.
        /// Feltlengde: 2 tegn.
        /// Standardverdi (vanligvis blank eller XX) hentes fra tabellen Standardverdier og annen konfigureringsinformasjon.
        /// Oppslag mot tabellen Hjemmel for tilgangskode.
        /// Tilsvarer NOARK4 feltet SA.TGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #1 - Tilleggsattributt nummer 1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt1 {
            get {
                return this.TilleggsAttributt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt1Field, value) != true)) {
                    this.TilleggsAttributt1Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt1");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #10 - Tilleggsattributt nummer 10.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt10 {
            get {
                return this.TilleggsAttributt10Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt10Field, value) != true)) {
                    this.TilleggsAttributt10Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt10");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #11 - Tilleggsattributt nummer 11.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt11 {
            get {
                return this.TilleggsAttributt11Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt11Field, value) != true)) {
                    this.TilleggsAttributt11Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt11");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #12 - Tilleggsattributt nummer 12.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt12 {
            get {
                return this.TilleggsAttributt12Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt12Field, value) != true)) {
                    this.TilleggsAttributt12Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt12");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #13 - Tilleggsattributt nummer 13.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt13 {
            get {
                return this.TilleggsAttributt13Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt13Field, value) != true)) {
                    this.TilleggsAttributt13Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt13");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #14 - Tilleggsattributt nummer 14.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt14 {
            get {
                return this.TilleggsAttributt14Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt14Field, value) != true)) {
                    this.TilleggsAttributt14Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt14");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #15 - Tilleggsattributt nummer 15.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt15 {
            get {
                return this.TilleggsAttributt15Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt15Field, value) != true)) {
                    this.TilleggsAttributt15Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt15");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #16 - Tilleggsattributt nummer 16.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt16 {
            get {
                return this.TilleggsAttributt16Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt16Field, value) != true)) {
                    this.TilleggsAttributt16Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt16");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #17 - Tilleggsattributt nummer 17.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt17 {
            get {
                return this.TilleggsAttributt17Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt17Field, value) != true)) {
                    this.TilleggsAttributt17Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt17");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #18 - Tilleggsattributt nummer 18.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt18 {
            get {
                return this.TilleggsAttributt18Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt18Field, value) != true)) {
                    this.TilleggsAttributt18Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt18");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #19 - Tilleggsattributt nummer 19.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt19 {
            get {
                return this.TilleggsAttributt19Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt19Field, value) != true)) {
                    this.TilleggsAttributt19Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt19");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #2 - Tilleggsattributt nummer 2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt2 {
            get {
                return this.TilleggsAttributt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt2Field, value) != true)) {
                    this.TilleggsAttributt2Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt2");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #20 - Tilleggsattributt nummer 20.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt20 {
            get {
                return this.TilleggsAttributt20Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt20Field, value) != true)) {
                    this.TilleggsAttributt20Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt20");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #21 - Tilleggsattributt nummer 21.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt21 {
            get {
                return this.TilleggsAttributt21Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt21Field, value) != true)) {
                    this.TilleggsAttributt21Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt21");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #22 - Tilleggsattributt nummer 22.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt22 {
            get {
                return this.TilleggsAttributt22Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt22Field, value) != true)) {
                    this.TilleggsAttributt22Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt22");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #23 - Tilleggsattributt nummer 23.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt23 {
            get {
                return this.TilleggsAttributt23Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt23Field, value) != true)) {
                    this.TilleggsAttributt23Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt23");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #24 - Tilleggsattributt nummer 24.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt24 {
            get {
                return this.TilleggsAttributt24Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt24Field, value) != true)) {
                    this.TilleggsAttributt24Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt24");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #25 - Tilleggsattributt nummer 25.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt25 {
            get {
                return this.TilleggsAttributt25Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt25Field, value) != true)) {
                    this.TilleggsAttributt25Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt25");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #3 - Tilleggsattributt nummer 3.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt3 {
            get {
                return this.TilleggsAttributt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt3Field, value) != true)) {
                    this.TilleggsAttributt3Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt3");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #4 - Tilleggsattributt nummer 4.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt4 {
            get {
                return this.TilleggsAttributt4Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt4Field, value) != true)) {
                    this.TilleggsAttributt4Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt4");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #5 - Tilleggsattributt nummer 5.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt5 {
            get {
                return this.TilleggsAttributt5Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt5Field, value) != true)) {
                    this.TilleggsAttributt5Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt5");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #6 - Tilleggsattributt nummer 6.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt6 {
            get {
                return this.TilleggsAttributt6Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt6Field, value) != true)) {
                    this.TilleggsAttributt6Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt6");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #7 - Tilleggsattributt nummer 7.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt7 {
            get {
                return this.TilleggsAttributt7Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt7Field, value) != true)) {
                    this.TilleggsAttributt7Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt7");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #8 - Tilleggsattributt nummer 8.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt8 {
            get {
                return this.TilleggsAttributt8Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt8Field, value) != true)) {
                    this.TilleggsAttributt8Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt8");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #9 - Tilleggsattributt nummer 9.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt9 {
            get {
                return this.TilleggsAttributt9Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt9Field, value) != true)) {
                    this.TilleggsAttributt9Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt9");
                }
            }
        }
        
        /// <summary>
        /// Loan date - Utlånt dato.
        /// Det skal ikke være mulig å registrere en dato som ligger fram i tiden. Skal være utfylt dersom Utlånt til har verdi forskjellig fra 0.
        /// Tilsvarer NOARK4 feltet SA.UTLDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UtlaantDato {
            get {
                return this.UtlaantDatoField;
            }
            set {
                if ((this.UtlaantDatoField.Equals(value) != true)) {
                    this.UtlaantDatoField = value;
                    this.RaisePropertyChanged("UtlaantDato");
                }
            }
        }
        
        /// <summary>
        /// The person who have loaned the case - Personen som har lånt saken.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som har lånt saken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn UtlaantTil {
            get {
                return this.UtlaantTilField;
            }
            set {
                if ((object.ReferenceEquals(this.UtlaantTilField, value) != true)) {
                    this.UtlaantTilField = value;
                    this.RaisePropertyChanged("UtlaantTil");
                }
            }
        }
        
        /// <summary>
        /// Reference to the person who have loaned the case - Referanse til den person som har lånt saken.
        /// Standardverdi 0 (ikke angitt) angir at saken ikke er utlånt.
        /// Oppslag mot tabellen Personnavn.
        /// Tilsvarer NOARK4 feltet SA.UTLTIL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtlaantTilId {
            get {
                return this.UtlaantTilIdField;
            }
            set {
                if ((this.UtlaantTilIdField.Equals(value) != true)) {
                    this.UtlaantTilIdField = value;
                    this.RaisePropertyChanged("UtlaantTilId");
                }
            }
        }
        
        /// <summary>
        /// The title of the case including tagging of any instances of names in the text -  Saktstittel med skjerming og tagging av personnavn.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=79)]
        public string SakstittelPersonnavn {
            get {
                return this.SakstittelPersonnavnField;
            }
            set {
                if ((object.ReferenceEquals(this.SakstittelPersonnavnField, value) != true)) {
                    this.SakstittelPersonnavnField = value;
                    this.RaisePropertyChanged("SakstittelPersonnavn");
                }
            }
        }
        
        /// <summary>
        /// Date and time created - Dato og klokkeslett for oppretting av recorden
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=80)]
        public System.Nullable<System.DateTime> Opprettet {
            get {
                return this.OpprettetField;
            }
            set {
                if ((this.OpprettetField.Equals(value) != true)) {
                    this.OpprettetField = value;
                    this.RaisePropertyChanged("Opprettet");
                }
            }
        }
        
        /// <summary>
        /// Date and time last updated - Dato og klokkeslett for sist oppdatering.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=81)]
        public System.Nullable<System.DateTime> SistOppdatert {
            get {
                return this.SistOppdatertField;
            }
            set {
                if ((this.SistOppdatertField.Equals(value) != true)) {
                    this.SistOppdatertField = value;
                    this.RaisePropertyChanged("SistOppdatert");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om byggesak.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Byggesak", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Byggesak : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BruksarealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BruksnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BygningsnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.ByggesakBygningstype BygningstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BygningstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.ByggesakDispensasjonstype DispensasjonstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispensasjonstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FestenummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GaardsnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GatekodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GatenavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HusnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KartbladField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KommunenummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KoordinatsystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoststedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeksjonsnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.ByggesakSoeknadstype SoeknadstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoeknadstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.ByggesakTiltakskode TiltakskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TiltakskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TiltaksmerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TomtearealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XKoordinatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YKoordinatField;
        
        /// <summary>
        /// Eiendommens bruksareal.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bruksareal {
            get {
                return this.BruksarealField;
            }
            set {
                if ((object.ReferenceEquals(this.BruksarealField, value) != true)) {
                    this.BruksarealField = value;
                    this.RaisePropertyChanged("Bruksareal");
                }
            }
        }
        
        /// <summary>
        /// Bruksnummer.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bruksnummer {
            get {
                return this.BruksnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.BruksnummerField, value) != true)) {
                    this.BruksnummerField = value;
                    this.RaisePropertyChanged("Bruksnummer");
                }
            }
        }
        
        /// <summary>
        /// Bygningsnummer.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Bygningsnummer {
            get {
                return this.BygningsnummerField;
            }
            set {
                if ((this.BygningsnummerField.Equals(value) != true)) {
                    this.BygningsnummerField = value;
                    this.RaisePropertyChanged("Bygningsnummer");
                }
            }
        }
        
        /// <summary>
        /// Bygningstype (GAB-kode) for byggesaken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver bygningstype for byggesaken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.ByggesakBygningstype Bygningstype {
            get {
                return this.BygningstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BygningstypeField, value) != true)) {
                    this.BygningstypeField = value;
                    this.RaisePropertyChanged("Bygningstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til bygningstype (GAB-kode).
        /// Feltlengde: 4 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BygningstypeId {
            get {
                return this.BygningstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BygningstypeIdField, value) != true)) {
                    this.BygningstypeIdField = value;
                    this.RaisePropertyChanged("BygningstypeId");
                }
            }
        }
        
        /// <summary>
        /// Dispensasjonstype for byggesaken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver dispensasjonstype for byggesaken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.ByggesakDispensasjonstype Dispensasjonstype {
            get {
                return this.DispensasjonstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DispensasjonstypeField, value) != true)) {
                    this.DispensasjonstypeField = value;
                    this.RaisePropertyChanged("Dispensasjonstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til dispensasjonstype.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispensasjonstypeId {
            get {
                return this.DispensasjonstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DispensasjonstypeIdField, value) != true)) {
                    this.DispensasjonstypeIdField = value;
                    this.RaisePropertyChanged("DispensasjonstypeId");
                }
            }
        }
        
        /// <summary>
        /// Eiers/festers navn.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Eier {
            get {
                return this.EierField;
            }
            set {
                if ((object.ReferenceEquals(this.EierField, value) != true)) {
                    this.EierField = value;
                    this.RaisePropertyChanged("Eier");
                }
            }
        }
        
        /// <summary>
        /// Festenummer.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Festenummer {
            get {
                return this.FestenummerField;
            }
            set {
                if ((object.ReferenceEquals(this.FestenummerField, value) != true)) {
                    this.FestenummerField = value;
                    this.RaisePropertyChanged("Festenummer");
                }
            }
        }
        
        /// <summary>
        /// Gårdsnummer.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gaardsnummer {
            get {
                return this.GaardsnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.GaardsnummerField, value) != true)) {
                    this.GaardsnummerField = value;
                    this.RaisePropertyChanged("Gaardsnummer");
                }
            }
        }
        
        /// <summary>
        /// Gatekode.
        /// Feltlengde: 6 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gatekode {
            get {
                return this.GatekodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GatekodeField, value) != true)) {
                    this.GatekodeField = value;
                    this.RaisePropertyChanged("Gatekode");
                }
            }
        }
        
        /// <summary>
        /// Gatenavn.
        /// Feltlengde: 50 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gatenavn {
            get {
                return this.GatenavnField;
            }
            set {
                if ((object.ReferenceEquals(this.GatenavnField, value) != true)) {
                    this.GatenavnField = value;
                    this.RaisePropertyChanged("Gatenavn");
                }
            }
        }
        
        /// <summary>
        /// Husnummer.
        /// Feltlengde: 7 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Husnummer {
            get {
                return this.HusnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.HusnummerField, value) != true)) {
                    this.HusnummerField = value;
                    this.RaisePropertyChanged("Husnummer");
                }
            }
        }
        
        /// <summary>
        /// Unik nøkkel til byggesak. Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Kartblad.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kartblad {
            get {
                return this.KartbladField;
            }
            set {
                if ((object.ReferenceEquals(this.KartbladField, value) != true)) {
                    this.KartbladField = value;
                    this.RaisePropertyChanged("Kartblad");
                }
            }
        }
        
        /// <summary>
        /// Kommunenummer.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kommunenummer {
            get {
                return this.KommunenummerField;
            }
            set {
                if ((object.ReferenceEquals(this.KommunenummerField, value) != true)) {
                    this.KommunenummerField = value;
                    this.RaisePropertyChanged("Kommunenummer");
                }
            }
        }
        
        /// <summary>
        /// Koordinatsystem.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Koordinatsystem {
            get {
                return this.KoordinatsystemField;
            }
            set {
                if ((object.ReferenceEquals(this.KoordinatsystemField, value) != true)) {
                    this.KoordinatsystemField = value;
                    this.RaisePropertyChanged("Koordinatsystem");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Postnummer.
        /// Feltlengde: 5 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postnummer {
            get {
                return this.PostnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.PostnummerField, value) != true)) {
                    this.PostnummerField = value;
                    this.RaisePropertyChanged("Postnummer");
                }
            }
        }
        
        /// <summary>
        /// Poststed.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Poststed {
            get {
                return this.PoststedField;
            }
            set {
                if ((object.ReferenceEquals(this.PoststedField, value) != true)) {
                    this.PoststedField = value;
                    this.RaisePropertyChanged("Poststed");
                }
            }
        }
        
        /// <summary>
        /// Saken byggesaken er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken byggesaken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Referanse til saken byggesaken er knyttet til.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
        
        /// <summary>
        /// Seksjonsnummer.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Seksjonsnummer {
            get {
                return this.SeksjonsnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.SeksjonsnummerField, value) != true)) {
                    this.SeksjonsnummerField = value;
                    this.RaisePropertyChanged("Seksjonsnummer");
                }
            }
        }
        
        /// <summary>
        /// Søknadstype for byggesaken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver søknadstype for byggesaken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.ByggesakSoeknadstype Soeknadstype {
            get {
                return this.SoeknadstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SoeknadstypeField, value) != true)) {
                    this.SoeknadstypeField = value;
                    this.RaisePropertyChanged("Soeknadstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til søknadstype.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoeknadstypeId {
            get {
                return this.SoeknadstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SoeknadstypeIdField, value) != true)) {
                    this.SoeknadstypeIdField = value;
                    this.RaisePropertyChanged("SoeknadstypeId");
                }
            }
        }
        
        /// <summary>
        /// Tiltakskode for byggesaken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver tiltakskode for byggesaken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.ByggesakTiltakskode Tiltakskode {
            get {
                return this.TiltakskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TiltakskodeField, value) != true)) {
                    this.TiltakskodeField = value;
                    this.RaisePropertyChanged("Tiltakskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tiltakskode.
        /// Feltlengde: 50 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TiltakskodeId {
            get {
                return this.TiltakskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TiltakskodeIdField, value) != true)) {
                    this.TiltakskodeIdField = value;
                    this.RaisePropertyChanged("TiltakskodeId");
                }
            }
        }
        
        /// <summary>
        /// Merknad knyttet til tiltakets art (tiltakskode).
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tiltaksmerknad {
            get {
                return this.TiltaksmerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.TiltaksmerknadField, value) != true)) {
                    this.TiltaksmerknadField = value;
                    this.RaisePropertyChanged("Tiltaksmerknad");
                }
            }
        }
        
        /// <summary>
        /// Tomteareal.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tomteareal {
            get {
                return this.TomtearealField;
            }
            set {
                if ((object.ReferenceEquals(this.TomtearealField, value) != true)) {
                    this.TomtearealField = value;
                    this.RaisePropertyChanged("Tomteareal");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom byggesaken skal tilgangsbegrenses, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UOff {
            get {
                return this.UOffField;
            }
            set {
                if ((this.UOffField.Equals(value) != true)) {
                    this.UOffField = value;
                    this.RaisePropertyChanged("UOff");
                }
            }
        }
        
        /// <summary>
        /// X-koordinat.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XKoordinat {
            get {
                return this.XKoordinatField;
            }
            set {
                if ((object.ReferenceEquals(this.XKoordinatField, value) != true)) {
                    this.XKoordinatField = value;
                    this.RaisePropertyChanged("XKoordinat");
                }
            }
        }
        
        /// <summary>
        /// Y-koordinat.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YKoordinat {
            get {
                return this.YKoordinatField;
            }
            set {
                if ((object.ReferenceEquals(this.YKoordinatField, value) != true)) {
                    this.YKoordinatField = value;
                    this.RaisePropertyChanged("YKoordinat");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om bygningstyper (GAB-kode).
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ByggesakBygningstype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class ByggesakBygningstype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.ByggesakBygningstype BygningstypeFarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BygningstypeFarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KanBenyttesVedRegistreringField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 35 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Bygningstypen som denne bygningstypen er underlagt.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver bygningstypen som denne bygningstypen er underlagt.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.ByggesakBygningstype BygningstypeFar {
            get {
                return this.BygningstypeFarField;
            }
            set {
                if ((object.ReferenceEquals(this.BygningstypeFarField, value) != true)) {
                    this.BygningstypeFarField = value;
                    this.RaisePropertyChanged("BygningstypeFar");
                }
            }
        }
        
        /// <summary>
        /// Referanse til bygningstypen som denne bygningstypen er underlagt.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BygningstypeFarId {
            get {
                return this.BygningstypeFarIdField;
            }
            set {
                if ((this.BygningstypeFarIdField.Equals(value) != true)) {
                    this.BygningstypeFarIdField = value;
                    this.RaisePropertyChanged("BygningstypeFarId");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 4 tegn.
        /// /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom denne bygningstypen skal tillates benyttet ved registrering, ikke valgt dersom den er videre inndelt
        /// og kun verdier på laveste nivå tillates benyttet eller dersom bygningstypen utgår men er benyttet på eksisterende byggesaker slik at den må bevares.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KanBenyttesVedRegistrering {
            get {
                return this.KanBenyttesVedRegistreringField;
            }
            set {
                if ((this.KanBenyttesVedRegistreringField.Equals(value) != true)) {
                    this.KanBenyttesVedRegistreringField = value;
                    this.RaisePropertyChanged("KanBenyttesVedRegistrering");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om dispensasjonstyper for byggesaker.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ByggesakDispensasjonstype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class ByggesakDispensasjonstype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om søknadstyper for byggesaker.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ByggesakSoeknadstype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class ByggesakSoeknadstype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om tiltakskoder (koder for tiltakets art) i forbindelse med byggesaker.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ByggesakTiltakskode", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class ByggesakTiltakskode : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 3 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om rekvisisjon av kartforretning.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DelingsakRekvisisjon", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class DelingsakRekvisisjon : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalAarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalSekvensnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalpostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        /// <summary>
        /// Unik nøkkel til delingsak.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Årstall for journalnummer kartforretning.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalAar {
            get {
                return this.JournalAarField;
            }
            set {
                if ((this.JournalAarField.Equals(value) != true)) {
                    this.JournalAarField = value;
                    this.RaisePropertyChanged("JournalAar");
                }
            }
        }
        
        /// <summary>
        /// Sekvensnummer for journalnummer kartforretning.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalSekvensnummer {
            get {
                return this.JournalSekvensnummerField;
            }
            set {
                if ((this.JournalSekvensnummerField.Equals(value) != true)) {
                    this.JournalSekvensnummerField = value;
                    this.RaisePropertyChanged("JournalSekvensnummer");
                }
            }
        }
        
        /// <summary>
        /// Journalposten som inneholder rekvisisjonen.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalposten som inneholder rekvisisjonen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Referanse til journalpost som inneholder rekvisisjonen.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalpostId {
            get {
                return this.JournalpostIdField;
            }
            set {
                if ((this.JournalpostIdField.Equals(value) != true)) {
                    this.JournalpostIdField = value;
                    this.RaisePropertyChanged("JournalpostId");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Saken rekvisisjonen er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken delingsaken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Referanse til sak.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver referanser fra en sak til andre saker, enkeltdokumenter i disse eller til saker i presedensregisteret.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JevnfoerSak", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class JevnfoerSak : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Presedens HenvisningTilPresedensField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HenvisningTilPresedensIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostFraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalpostFraIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostTilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalpostTilIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakFraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakFraIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakTilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakTilIdField;
        
        /// <summary>
        /// Presedensen det henvises til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver presedensen som jevnføringen henviser til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Presedens HenvisningTilPresedens {
            get {
                return this.HenvisningTilPresedensField;
            }
            set {
                if ((object.ReferenceEquals(this.HenvisningTilPresedensField, value) != true)) {
                    this.HenvisningTilPresedensField = value;
                    this.RaisePropertyChanged("HenvisningTilPresedens");
                }
            }
        }
        
        /// <summary>
        /// Referanse til sak i presedensregisteret.
        /// Tilsvarer NOARK4 feltet JF.TPSID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HenvisningTilPresedensId {
            get {
                return this.HenvisningTilPresedensIdField;
            }
            set {
                if ((this.HenvisningTilPresedensIdField.Equals(value) != true)) {
                    this.HenvisningTilPresedensIdField = value;
                    this.RaisePropertyChanged("HenvisningTilPresedensId");
                }
            }
        }
        
        /// <summary>
        /// Unik nøkkel til henvisningen. Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet JF.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Journalposten jevnføringen går fra.
        /// </summary>
        /// <value>Inneholder attributter som beskriver journalposten som jevnføringen refererer fra.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostFra {
            get {
                return this.JournalpostFraField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostFraField, value) != true)) {
                    this.JournalpostFraField = value;
                    this.RaisePropertyChanged("JournalpostFra");
                }
            }
        }
        
        /// <summary>
        /// Referanse til journalposten jevnføringen går fra, dersom jevnføringen skal gå fra en enkelt journalpost.
        /// Dersom SakFraId er angitt, må referansen alltid være til en journalpost i denne saken.
        /// Tilsvarer NOARK4 feltet JF.FJPID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalpostFraId {
            get {
                return this.JournalpostFraIdField;
            }
            set {
                if ((this.JournalpostFraIdField.Equals(value) != true)) {
                    this.JournalpostFraIdField = value;
                    this.RaisePropertyChanged("JournalpostFraId");
                }
            }
        }
        
        /// <summary>
        /// Journalposten som jevnføringen henviser til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver journalposten som jevnføringen henviser til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostTil {
            get {
                return this.JournalpostTilField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostTilField, value) != true)) {
                    this.JournalpostTilField = value;
                    this.RaisePropertyChanged("JournalpostTil");
                }
            }
        }
        
        /// <summary>
        /// Referanse til journalpost som jevnføringen henviser til.
        /// Dersom SakTilId er angitt, må referansen alltid være til en journalpost i denne saken.
        /// Tilsvarer NOARK4 feltet JF.TJPID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalpostTilId {
            get {
                return this.JournalpostTilIdField;
            }
            set {
                if ((this.JournalpostTilIdField.Equals(value) != true)) {
                    this.JournalpostTilIdField = value;
                    this.RaisePropertyChanged("JournalpostTilId");
                }
            }
        }
        
        /// <summary>
        /// Eventuell merknad knyttet til referansen, f.eks henvisning til hvilken del av referansen som er spesielt relevant for saken.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet JF.MERKNAD
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Saken som jevnføringen refererer fra.
        /// </summary>
        /// <value>Inneholder attributter som beskriver saken som jevnføringen refererer fra.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak SakFra {
            get {
                return this.SakFraField;
            }
            set {
                if ((object.ReferenceEquals(this.SakFraField, value) != true)) {
                    this.SakFraField = value;
                    this.RaisePropertyChanged("SakFra");
                }
            }
        }
        
        /// <summary>
        /// Referanse til sak. Overført fra saken og kan ikke endres.
        /// Må alltid ha innhold dersom jevnføringen går fra en sak, og ikke bare fra en journalpost i saken.
        /// Tilsvarer NOARK4 feltet JF.FSAID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakFraId {
            get {
                return this.SakFraIdField;
            }
            set {
                if ((this.SakFraIdField.Equals(value) != true)) {
                    this.SakFraIdField = value;
                    this.RaisePropertyChanged("SakFraId");
                }
            }
        }
        
        /// <summary>
        /// Saken som jevnføringen henviser til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver saken som jevnføringen henviser til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak SakTil {
            get {
                return this.SakTilField;
            }
            set {
                if ((object.ReferenceEquals(this.SakTilField, value) != true)) {
                    this.SakTilField = value;
                    this.RaisePropertyChanged("SakTil");
                }
            }
        }
        
        /// <summary>
        /// Referanse til saken som jevnføringen henviser til.
        /// Tilsvarer NOARK4 feltet JF.TSAID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakTilId {
            get {
                return this.SakTilIdField;
            }
            set {
                if ((this.SakTilIdField.Equals(value) != true)) {
                    this.SakTilIdField = value;
                    this.RaisePropertyChanged("SakTilId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om presedenser.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Presedens", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Presedens : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdmEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdmEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EksternPresedensField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ForeldetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HjemmelKildeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HjemmelUOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalpostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LokaliseringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PresedensdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sakstype SakstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SakstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SammendragField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe TilgangsgruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilgangsgruppeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TittelField;
        
        /// <summary>
        /// Administrativ inndeling som saken hører inn under.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver den administrative inndeling som saken hører inn under.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdmEnhet {
            get {
                return this.AdmEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.AdmEnhetField, value) != true)) {
                    this.AdmEnhetField = value;
                    this.RaisePropertyChanged("AdmEnhet");
                }
            }
        }
        
        /// <summary>
        /// ID til den adm. enhet som denne saken hører inn under.
        /// Standardverdi fra saken eller fast verdi 0 for saker som ligger utenfor journalbasen.
        /// Merk at en presedenssak som administrativt hører inn under en adm. enhet, gjerne kan danne presedens for tilsvarende saker i andre avdelinger.
        /// Oppslag mot tabellen Administrativ inndeling.
        /// Tilsvarer NOARK4 feltet PS.ADMID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdmEnhetId {
            get {
                return this.AdmEnhetIdField;
            }
            set {
                if ((this.AdmEnhetIdField.Equals(value) != true)) {
                    this.AdmEnhetIdField = value;
                    this.RaisePropertyChanged("AdmEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom saken tilhører et arkiv som ligger utenfor denne journalbasen, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet PS.EKSTERN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EksternPresedens {
            get {
                return this.EksternPresedensField;
            }
            set {
                if ((this.EksternPresedensField.Equals(value) != true)) {
                    this.EksternPresedensField = value;
                    this.RaisePropertyChanged("EksternPresedens");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom presedensen er foreldet, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet PS.FORELDET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Foreldet {
            get {
                return this.ForeldetField;
            }
            set {
                if ((this.ForeldetField.Equals(value) != true)) {
                    this.ForeldetField = value;
                    this.RaisePropertyChanged("Foreldet");
                }
            }
        }
        
        /// <summary>
        /// Angivelse av hvilken rettskildefaktor avgjørelsen bygger på.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet PS.HJEMMEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HjemmelKilde {
            get {
                return this.HjemmelKildeField;
            }
            set {
                if ((object.ReferenceEquals(this.HjemmelKildeField, value) != true)) {
                    this.HjemmelKildeField = value;
                    this.RaisePropertyChanged("HjemmelKilde");
                }
            }
        }
        
        /// <summary>
        /// Henvisning til offentlighetsloven og/eller annet lovverk. Må ha innhold dersom Tilgangskode har et innhold.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet PS.UOFF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HjemmelUOff {
            get {
                return this.HjemmelUOffField;
            }
            set {
                if ((object.ReferenceEquals(this.HjemmelUOffField, value) != true)) {
                    this.HjemmelUOffField = value;
                    this.RaisePropertyChanged("HjemmelUOff");
                }
            }
        }
        
        /// <summary>
        /// Unik nøkkel.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet PS.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Journalpost som inneholder presedensen.
        /// </summary>
        /// <value>Inneholder attributter som beskriver journalposten som presedensen refererer til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den journalpost som inneholder presedensen.
        /// Må være utfylt for saker som inngår i denne journalbasen.
        /// Tilsvarer NOARK4 feltet PS.JPID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalpostId {
            get {
                return this.JournalpostIdField;
            }
            set {
                if ((this.JournalpostIdField.Equals(value) != true)) {
                    this.JournalpostIdField = value;
                    this.RaisePropertyChanged("JournalpostId");
                }
            }
        }
        
        /// <summary>
        /// Dersom presedensen gjelder en sak som ikke inngår i denne journalbasen, kan en beskrivelse av hvor (den fysiske) saken er arkivert angis her.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet PS.LOK
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lokalisering {
            get {
                return this.LokaliseringField;
            }
            set {
                if ((object.ReferenceEquals(this.LokaliseringField, value) != true)) {
                    this.LokaliseringField = value;
                    this.RaisePropertyChanged("Lokalisering");
                }
            }
        }
        
        /// <summary>
        /// Dato for presedensen.
        /// Tilsvarer NOARK4 feltet PS.DATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Presedensdato {
            get {
                return this.PresedensdatoField;
            }
            set {
                if ((this.PresedensdatoField.Equals(value) != true)) {
                    this.PresedensdatoField = value;
                    this.RaisePropertyChanged("Presedensdato");
                }
            }
        }
        
        /// <summary>
        /// Presedenssak.
        /// </summary>
        /// <value>Inneholder attributter som beskriver saken som presedensen refererer til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Referanse til presedenssak.
        /// Må være utfylt for saker som inngår i denne journalbasen.
        /// Tilsvarer NOARK4 feltet PS.SAID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
        
        /// <summary>
        /// Sakstypen presedensen er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter for sakstypen presedensen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sakstype Sakstype {
            get {
                return this.SakstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SakstypeField, value) != true)) {
                    this.SakstypeField = value;
                    this.RaisePropertyChanged("Sakstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til sakstype.
        /// Oppslag mot tabellen Sakstype.
        /// Tilsvarer NOARK4 feltet PS.TYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SakstypeId {
            get {
                return this.SakstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SakstypeIdField, value) != true)) {
                    this.SakstypeIdField = value;
                    this.RaisePropertyChanged("SakstypeId");
                }
            }
        }
        
        /// <summary>
        /// Sammendrag av saken/avgjørelsen.
        /// Feltlengde: 2000 tegn.
        /// Tilsvarer NOARK4 feltet PS.TEKST
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sammendrag {
            get {
                return this.SammendragField;
            }
            set {
                if ((object.ReferenceEquals(this.SammendragField, value) != true)) {
                    this.SammendragField = value;
                    this.RaisePropertyChanged("Sammendrag");
                }
            }
        }
        
        /// <summary>
        /// Presedensens tilgangsgruppe.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver tilgangsgruppen presedensen er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe Tilgangsgruppe {
            get {
                return this.TilgangsgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeField, value) != true)) {
                    this.TilgangsgruppeField = value;
                    this.RaisePropertyChanged("Tilgangsgruppe");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangsgruppe.
        /// Dersom tilgangskode er angitt, skal medlemmene av gruppen gis tilgang dersom de er klarert for tilgangskoden
        /// selv om ikke autorisasjonen gjelder innenfor den administrative enhet som er registrert på presedensen.
        /// Tilsvarer NOARK4 feltet PS.TGGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilgangsgruppeId {
            get {
                return this.TilgangsgruppeIdField;
            }
            set {
                if ((this.TilgangsgruppeIdField.Equals(value) != true)) {
                    this.TilgangsgruppeIdField = value;
                    this.RaisePropertyChanged("TilgangsgruppeId");
                }
            }
        }
        
        /// <summary>
        /// Presedensens tilgangskode.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver tilgangskoden presedensen er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangskode.
        /// Oppslag mot tabellen Tilgangskode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet PS.TGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt1 {
            get {
                return this.TilleggsAttributt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt1Field, value) != true)) {
                    this.TilleggsAttributt1Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt1");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 10.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt10 {
            get {
                return this.TilleggsAttributt10Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt10Field, value) != true)) {
                    this.TilleggsAttributt10Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt10");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt2 {
            get {
                return this.TilleggsAttributt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt2Field, value) != true)) {
                    this.TilleggsAttributt2Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt2");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 3.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt3 {
            get {
                return this.TilleggsAttributt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt3Field, value) != true)) {
                    this.TilleggsAttributt3Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt3");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 4.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt4 {
            get {
                return this.TilleggsAttributt4Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt4Field, value) != true)) {
                    this.TilleggsAttributt4Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt4");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 5.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt5 {
            get {
                return this.TilleggsAttributt5Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt5Field, value) != true)) {
                    this.TilleggsAttributt5Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt5");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 6.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt6 {
            get {
                return this.TilleggsAttributt6Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt6Field, value) != true)) {
                    this.TilleggsAttributt6Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt6");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 7.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt7 {
            get {
                return this.TilleggsAttributt7Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt7Field, value) != true)) {
                    this.TilleggsAttributt7Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt7");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 8.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt8 {
            get {
                return this.TilleggsAttributt8Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt8Field, value) != true)) {
                    this.TilleggsAttributt8Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt8");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 9.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt9 {
            get {
                return this.TilleggsAttributt9Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt9Field, value) != true)) {
                    this.TilleggsAttributt9Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt9");
                }
            }
        }
        
        /// <summary>
        /// Tittel.
        /// Skal alltid ha et meningsbærende innhold som er rimelig dekkende for saken.
        /// Tilsvarer NOARK4 feltet PS.TITTEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tittel {
            get {
                return this.TittelField;
            }
            set {
                if ((object.ReferenceEquals(this.TittelField, value) != true)) {
                    this.TittelField = value;
                    this.RaisePropertyChanged("Tittel");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som benyttes til å kategorisere saker.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sakstype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Sakstype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HjemmelUoffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KlageadgangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UnntattOffentlighetenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype UtvalgssakstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtvalgssakstypeIdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet ST.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Henvisning til offentlighetsloven og/eller annet lovverk.
        /// Feltlengde: 70 tegn.
        /// Må ha innhold dersom UnntattOffentligheten er valgt.
        /// Tilsvarer NOARK4 feltet ST.HJEMMEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HjemmelUoff {
            get {
                return this.HjemmelUoffField;
            }
            set {
                if ((object.ReferenceEquals(this.HjemmelUoffField, value) != true)) {
                    this.HjemmelUoffField = value;
                    this.RaisePropertyChanged("HjemmelUoff");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet ST.TYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom det er klageadgang på denne typer saker, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet ST.KLAGEADG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Klageadgang {
            get {
                return this.KlageadgangField;
            }
            set {
                if ((this.KlageadgangField.Equals(value) != true)) {
                    this.KlageadgangField = value;
                    this.RaisePropertyChanged("Klageadgang");
                }
            }
        }
        
        /// <summary>
        /// Merknader knyttet til behandling av denne sakstypen.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet ST.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknader {
            get {
                return this.MerknaderField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknaderField, value) != true)) {
                    this.MerknaderField = value;
                    this.RaisePropertyChanged("Merknader");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom alle saker av denne type normalt skal unntas offentligheten, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet ST.UOFF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UnntattOffentligheten {
            get {
                return this.UnntattOffentlighetenField;
            }
            set {
                if ((this.UnntattOffentlighetenField.Equals(value) != true)) {
                    this.UnntattOffentlighetenField = value;
                    this.RaisePropertyChanged("UnntattOffentligheten");
                }
            }
        }
        
        /// <summary>
        /// Utvalgsakstype som vanligvis skal benyttes for denne sakstypen.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver utvalgsakstype som vanligvis skal benyttes for denne sakstypen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype Utvalgssakstype {
            get {
                return this.UtvalgssakstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgssakstypeField, value) != true)) {
                    this.UtvalgssakstypeField = value;
                    this.RaisePropertyChanged("Utvalgssakstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den utvalgsakstype som vanligvis skal benyttes for denne sakstypen.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Utvalgssakstype.
        /// Tilsvarer NOARK4 feltet ST.UTVSAKTYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtvalgssakstypeId {
            get {
                return this.UtvalgssakstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgssakstypeIdField, value) != true)) {
                    this.UtvalgssakstypeIdField = value;
                    this.RaisePropertyChanged("UtvalgssakstypeId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder all informasjon om klassering av saker.
    /// /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Klassering", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Klassering : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp OrdningsprinsippField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrdningsprinsippIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Ordningsverdi OrdningsverdiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrdningsverdiIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> OrdningsverdiUOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SorteringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SistOppdatertField;
        
        /// <summary>
        /// Beskrivelse av ordningsverdi.
        /// Feltlengde: 255 tegn.
        /// Avledet av Beskrivelse i ordningsverdien.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Beskrivelse {
            get {
                return this.BeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BeskrivelseField, value) != true)) {
                    this.BeskrivelseField = value;
                    this.RaisePropertyChanged("Beskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Eventuell merknad knyttet til klasseringen, f.eks at den refererer til kode i en tidligere arkivnøkkel.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet KL.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Ordningsprinsippet klasseringen er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver ordningsprinsippet som klasseringen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Ordningsprinsipp Ordningsprinsipp {
            get {
                return this.OrdningsprinsippField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdningsprinsippField, value) != true)) {
                    this.OrdningsprinsippField = value;
                    this.RaisePropertyChanged("Ordningsprinsipp");
                }
            }
        }
        
        /// <summary>
        /// Referanse til ordningsprinsippet klasseringen er knyttet til.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Ordningsprinsipp.
        /// Tilsvarer NOARK4 feltet KL_ORDNPRI.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrdningsprinsippId {
            get {
                return this.OrdningsprinsippIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdningsprinsippIdField, value) != true)) {
                    this.OrdningsprinsippIdField = value;
                    this.RaisePropertyChanged("OrdningsprinsippId");
                }
            }
        }
        
        /// <summary>
        /// Ordningsverdien klasseringen er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver ordningsverdien som klasseringen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Ordningsverdi Ordningsverdi {
            get {
                return this.OrdningsverdiField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdningsverdiField, value) != true)) {
                    this.OrdningsverdiField = value;
                    this.RaisePropertyChanged("Ordningsverdi");
                }
            }
        }
        
        /// <summary>
        /// Referanse til ordningsverdien klasseringen er knyttet til.
        /// Feltlengde: 70 tegn.
        /// Oppslag mot tabellen Ordningsverdi.
        /// Tilsvarer NOARK4 feltet KL.ORDNVER.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrdningsverdiId {
            get {
                return this.OrdningsverdiIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdningsverdiIdField, value) != true)) {
                    this.OrdningsverdiIdField = value;
                    this.RaisePropertyChanged("OrdningsverdiId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom ordningsverdien (f.eks et klientnavn) skal unntas offentligheten, ikke valgt ellers.
        /// Tillates kun valgt dersom tilgangskode er angitt på saken.
        /// Tilsvarer NOARK4 feltet KL.U1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> OrdningsverdiUOff {
            get {
                return this.OrdningsverdiUOffField;
            }
            set {
                if ((this.OrdningsverdiUOffField.Equals(value) != true)) {
                    this.OrdningsverdiUOffField = value;
                    this.RaisePropertyChanged("OrdningsverdiUOff");
                }
            }
        }
        
        /// <summary>
        /// Saken klasseringen er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver saken som klasseringen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Referanse til sak.
        /// Overført fra saken og kan ikke endres.
        /// Tilsvarer NOARK4 feltet KL.SAID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
        
        /// <summary>
        /// Benyttes til å angi den innbyrdes rekkefølge mellom de ordningsverdier som bestemmer sakens plassering i arkivet.
        /// Feltlengde: 1 tegn.
        /// Følgende verdier benyttes:
        /// 1- Primærkode
        /// 2 - Sekundærkode
        /// 3 - Tertiærkode, osv til 9
        /// X angir tilleggsklassering
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet KL.SORT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sortering {
            get {
                return this.SorteringField;
            }
            set {
                if ((object.ReferenceEquals(this.SorteringField, value) != true)) {
                    this.SorteringField = value;
                    this.RaisePropertyChanged("Sortering");
                }
            }
        }
        
        /// <summary>
        /// Date and time created - Dato og klokkeslett for oppretting av recorden
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Nullable<System.DateTime> Opprettet {
            get {
                return this.OpprettetField;
            }
            set {
                if ((this.OpprettetField.Equals(value) != true)) {
                    this.OpprettetField = value;
                    this.RaisePropertyChanged("Opprettet");
                }
            }
        }
        
        /// <summary>
        /// Date and time last updated - Dato og klokkeslett for sist oppdatering.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public System.Nullable<System.DateTime> SistOppdatert {
            get {
                return this.SistOppdatertField;
            }
            set {
                if ((this.SistOppdatertField.Equals(value) != true)) {
                    this.SistOppdatertField = value;
                    this.RaisePropertyChanged("SistOppdatert");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver lenker.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lenke", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Lenke : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse DokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LenkeUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Lenketype LenketypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LenketypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObjektIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObjektTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RekkefoelgenrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UOffField;
        
        /// <summary>
        /// Beskrivelse av lenken.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Beskrivelse {
            get {
                return this.BeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BeskrivelseField, value) != true)) {
                    this.BeskrivelseField = value;
                    this.RaisePropertyChanged("Beskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Dokumentet lenken er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver lenken dokumentet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse Dokument {
            get {
                return this.DokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentField, value) != true)) {
                    this.DokumentField = value;
                    this.RaisePropertyChanged("Dokument");
                }
            }
        }
        
        /// <summary>
        /// Unik Id.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Journalposten lenken er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalposten lenken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Lenke - url som benyttes for å vise lenket objekt/side.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LenkeUrl {
            get {
                return this.LenkeUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.LenkeUrlField, value) != true)) {
                    this.LenkeUrlField = value;
                    this.RaisePropertyChanged("LenkeUrl");
                }
            }
        }
        
        /// <summary>
        /// Lenketypen lenken er knyttet til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Lenketype Lenketype {
            get {
                return this.LenketypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LenketypeField, value) != true)) {
                    this.LenketypeField = value;
                    this.RaisePropertyChanged("Lenketype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til lenketypen.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Lenketype.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LenketypeId {
            get {
                return this.LenketypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LenketypeIdField, value) != true)) {
                    this.LenketypeIdField = value;
                    this.RaisePropertyChanged("LenketypeId");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til objektet lenken er knyttet til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ObjektId {
            get {
                return this.ObjektIdField;
            }
            set {
                if ((this.ObjektIdField.Equals(value) != true)) {
                    this.ObjektIdField = value;
                    this.RaisePropertyChanged("ObjektId");
                }
            }
        }
        
        /// <summary>
        /// Type objektet lenken er knyttet til.
        /// Lovlige verdier: 0 (sak), 1 (journalpost), 2 (dokument)
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ObjektType {
            get {
                return this.ObjektTypeField;
            }
            set {
                if ((this.ObjektTypeField.Equals(value) != true)) {
                    this.ObjektTypeField = value;
                    this.RaisePropertyChanged("ObjektType");
                }
            }
        }
        
        /// <summary>
        /// Angir sorteringsrekkefølge under objektet. Standardverdi sist benyttede nummer for objektet + 1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rekkefoelgenr {
            get {
                return this.RekkefoelgenrField;
            }
            set {
                if ((object.ReferenceEquals(this.RekkefoelgenrField, value) != true)) {
                    this.RekkefoelgenrField = value;
                    this.RaisePropertyChanged("Rekkefoelgenr");
                }
            }
        }
        
        /// <summary>
        /// Saken lenken er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken lenken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Tilgangskoden lenken er knyttet til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangskode.
        /// Feltlengde: 2 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom hele lenkebeskrivelsen skal unntas offentligheten, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UOff {
            get {
                return this.UOffField;
            }
            set {
                if ((this.UOffField.Equals(value) != true)) {
                    this.UOffField = value;
                    this.RaisePropertyChanged("UOff");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver lenketyper som kan benyttes for lenker.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lenketype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Lenketype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LedetekstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LenkeParametreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StandardLenkeField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Standard tekst som skal foreslås for nye lenker av denne lenketypen.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ledetekst {
            get {
                return this.LedetekstField;
            }
            set {
                if ((object.ReferenceEquals(this.LedetekstField, value) != true)) {
                    this.LedetekstField = value;
                    this.RaisePropertyChanged("Ledetekst");
                }
            }
        }
        
        /// <summary>
        /// Angir eventuelle parametre som skal settes inn i standard lenke.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LenkeParametre {
            get {
                return this.LenkeParametreField;
            }
            set {
                if ((object.ReferenceEquals(this.LenkeParametreField, value) != true)) {
                    this.LenkeParametreField = value;
                    this.RaisePropertyChanged("LenkeParametre");
                }
            }
        }
        
        /// <summary>
        /// Angir hvor objektet skal vises.
        /// Feltlengde: 10 tegn.
        /// Lovlige verdier: _current_ (samme vindusdel) , _new (nytt vindu) , rbottom (nedre høyre vindusdel), rtop (øvre høyre vindusdel)
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Maal {
            get {
                return this.MaalField;
            }
            set {
                if ((object.ReferenceEquals(this.MaalField, value) != true)) {
                    this.MaalField = value;
                    this.RaisePropertyChanged("Maal");
                }
            }
        }
        
        /// <summary>
        /// Merknad til lenketypen.
        /// Feltlengde: 1000 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Angir eventuell standard URL, dvs oppbygging a URL med henvisning til parametre.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StandardLenke {
            get {
                return this.StandardLenkeField;
            }
            set {
                if ((object.ReferenceEquals(this.StandardLenkeField, value) != true)) {
                    this.StandardLenkeField = value;
                    this.RaisePropertyChanged("StandardLenke");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder forskjellige typer merknader til en sak, en journalpost eller en versjon av et saksdokument.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Merknad", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Merknad : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse DokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DokumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DokumentreferanseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalpostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Informasjonstype MerknadstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OppbevaresTilDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn PaaVegneAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PaaVegneAvIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn RegistrertAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegistrertAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RegistrertDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrertKlokkeslettField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RekkefolgenrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SistOppdatertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TekstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe TilgangsgruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilgangsgruppeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VersjonsnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetField;
        
        /// <summary>
        /// The document the note is attached to - Dokumentet merknaden er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalposten dokumentet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse Dokument {
            get {
                return this.DokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentField, value) != true)) {
                    this.DokumentField = value;
                    this.RaisePropertyChanged("Dokument");
                }
            }
        }
        
        /// <summary>
        /// Reference to the document the note is attached to - Unik ID til et saksdokuments dokumentbeskrivelse. Benyttes dersom merknaden er knyttet til et saksdokument.
        /// Tilsvarer NOARK4 feltet ME.DOKID
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DokumentId {
            get {
                return this.DokumentIdField;
            }
            set {
                if ((this.DokumentIdField.Equals(value) != true)) {
                    this.DokumentIdField = value;
                    this.RaisePropertyChanged("DokumentId");
                }
            }
        }
        
        /// <summary>
        /// - Reference to If the the Benyttes kun når merknaden finnes i et separat dokument. Inneholder da referanse til dette dokumentets dokumentbeskrivelse.
        /// Dokumentet må finnes på et arkivformat dersom det skal kunne refereres. Det oppfordres primært til at merknadene
        /// registreres i attributtet Merknad.
        /// Tilsvarer NOARK4 feltet ME.REFDOKID
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Dokumentreferanse {
            get {
                return this.DokumentreferanseField;
            }
            set {
                if ((this.DokumentreferanseField.Equals(value) != true)) {
                    this.DokumentreferanseField = value;
                    this.RaisePropertyChanged("Dokumentreferanse");
                }
            }
        }
        
        /// <summary>
        /// Unique ID - Unik ID.
        /// Tildeles automatisk.
        /// Tilsvarer NOARK4 feltet ME.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// The registry entry the note is attached to - Journalposten merknaden er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalposten merknaden er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Reference to the registry entry the note is attached to - Unik referanse til journalpost. Benyttes dersom merknaden er knyttet til en journalpost.
        /// Tilsvarer NOARK4 feltet ME.JPID
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalpostId {
            get {
                return this.JournalpostIdField;
            }
            set {
                if ((this.JournalpostIdField.Equals(value) != true)) {
                    this.JournalpostIdField = value;
                    this.RaisePropertyChanged("JournalpostId");
                }
            }
        }
        
        /// <summary>
        /// Note type - Merknadstypen som merknaden er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om merknadstypen som merknaden er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Informasjonstype Merknadstype {
            get {
                return this.MerknadstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadstypeField, value) != true)) {
                    this.MerknadstypeField = value;
                    this.RaisePropertyChanged("Merknadstype");
                }
            }
        }
        
        /// <summary>
        /// Reference to the Note type - Angir hvilken type merknad dette er.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Informasjonstype.
        /// Tilsvarer NOARK4 feltet ME.ITYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MerknadstypeId {
            get {
                return this.MerknadstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadstypeIdField, value) != true)) {
                    this.MerknadstypeIdField = value;
                    this.RaisePropertyChanged("MerknadstypeId");
                }
            }
        }
        
        /// <summary>
        /// - Merknaden kan/skal slettes når denne dato er passert. Standardverdi knyttet til attributtet Merknadstype.
        /// Tilsvarer NOARK4 feltet ME.OPPBEDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OppbevaresTilDato {
            get {
                return this.OppbevaresTilDatoField;
            }
            set {
                if ((this.OppbevaresTilDatoField.Equals(value) != true)) {
                    this.OppbevaresTilDatoField = value;
                    this.RaisePropertyChanged("OppbevaresTilDato");
                }
            }
        }
        
        /// <summary>
        /// - Person som merknaden ble registrert på vegne av.
        /// </summary>
        /// <value>Inneholder attributter om personen som merknaden ble registrert på vegne av.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn PaaVegneAv {
            get {
                return this.PaaVegneAvField;
            }
            set {
                if ((object.ReferenceEquals(this.PaaVegneAvField, value) != true)) {
                    this.PaaVegneAvField = value;
                    this.RaisePropertyChanged("PaaVegneAv");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til person som merknaden ble registrert på vegne av.
        /// Dersom registreringen utføres av en annen enn den som har ansvaret for merknaden, registreres referanse til
        /// denne her. Hvis ikke oppdateres attributtet ut fra innlogget bruker, så fremt logging av tidspunkt og bruker er
        /// angitt for informasjonstypen.  Standardverdi 0 (ikke angitt).
        /// Tilsvarer NOARK4 feltet ME.PVGAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PaaVegneAvId {
            get {
                return this.PaaVegneAvIdField;
            }
            set {
                if ((this.PaaVegneAvIdField.Equals(value) != true)) {
                    this.PaaVegneAvIdField = value;
                    this.RaisePropertyChanged("PaaVegneAvId");
                }
            }
        }
        
        /// <summary>
        /// Created by - Person som registrerte merknaden.
        /// </summary>
        /// <value>Inneholder attributter om personen som registrerte merknaden.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn RegistrertAv {
            get {
                return this.RegistrertAvField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrertAvField, value) != true)) {
                    this.RegistrertAvField = value;
                    this.RaisePropertyChanged("RegistrertAv");
                }
            }
        }
        
        /// <summary>
        /// Reference to the person who created the note - Referanse til den person som registrerte merknaden.
        /// Oppdateres automatisk ut fra innlogget bruker hvis av tidspunkt og bruker er angitt for merknadstypen.
        /// Standardverdi 0 (ikke angitt).
        /// Tilsvarer NOARK4 feltet ME.REGAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegistrertAvid {
            get {
                return this.RegistrertAvidField;
            }
            set {
                if ((this.RegistrertAvidField.Equals(value) != true)) {
                    this.RegistrertAvidField = value;
                    this.RaisePropertyChanged("RegistrertAvid");
                }
            }
        }
        
        /// <summary>
        /// Created date - Dato for registrering. Skal oppdateres automatisk hvis logging av tidspunkt og bruker er angitt for merknadstypen.
        /// Mappes til NOARK4 feltet ME.REGDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RegistrertDato {
            get {
                return this.RegistrertDatoField;
            }
            set {
                if ((this.RegistrertDatoField.Equals(value) != true)) {
                    this.RegistrertDatoField = value;
                    this.RaisePropertyChanged("RegistrertDato");
                }
            }
        }
        
        /// <summary>
        /// Created time - Registreringstidspunkt. Skal oppdateres automatisk hvis logging av tidspunkt og bruker er angitt for merknadstypen.
        /// Tilsvarer NOARK4 feltet ME.REGKL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrertKlokkeslett {
            get {
                return this.RegistrertKlokkeslettField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrertKlokkeslettField, value) != true)) {
                    this.RegistrertKlokkeslettField = value;
                    this.RaisePropertyChanged("RegistrertKlokkeslett");
                }
            }
        }
        
        /// <summary>
        /// Sort order - Angir sorteringsrekkefølge under den posten merknaden er tilknyttet.
        /// Tilsvarer NOARK4 feltet ME.RNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rekkefolgenr {
            get {
                return this.RekkefolgenrField;
            }
            set {
                if ((this.RekkefolgenrField.Equals(value) != true)) {
                    this.RekkefolgenrField = value;
                    this.RaisePropertyChanged("Rekkefolgenr");
                }
            }
        }
        
        /// <summary>
        /// The case the note is attached to - Saken merknaden er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken merknaden er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Reference to the case the note is attached to - Referanse til sak.
        /// Benyttes alltid bortsett fra når merknaden er tilknyttet et møtedokument som ikke inngår i en (arkiv)sak.
        /// Tilsvarer NOARK4 feltet ME.SAID
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
        
        /// <summary>
        /// Date and time last updated - Dato og klokkeslett for sist oppdatering.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SistOppdatert {
            get {
                return this.SistOppdatertField;
            }
            set {
                if ((this.SistOppdatertField.Equals(value) != true)) {
                    this.SistOppdatertField = value;
                    this.RaisePropertyChanged("SistOppdatert");
                }
            }
        }
        
        /// <summary>
        /// Note content - Teksten som utgjør merknaden. Dersom merknaden finnes i form av et separat dokument, kan dette attributtet være tomt.
        /// Feltlengde: 4000 tegn.
        /// Mappes til NOARK4 feltet ME.TEKST.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tekst {
            get {
                return this.TekstField;
            }
            set {
                if ((object.ReferenceEquals(this.TekstField, value) != true)) {
                    this.TekstField = value;
                    this.RaisePropertyChanged("Tekst");
                }
            }
        }
        
        /// <summary>
        /// Access group -.Tilgangsgruppen som merknaden er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangsgruppen som merknaden er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe Tilgangsgruppe {
            get {
                return this.TilgangsgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeField, value) != true)) {
                    this.TilgangsgruppeField = value;
                    this.RaisePropertyChanged("Tilgangsgruppe");
                }
            }
        }
        
        /// <summary>
        /// Reference to the access group - Referanse til tilgangsgruppe.
        /// Dersom tilgangskode er angitt, skal medlemmene av gruppen gis tilgang dersom
        /// de er klarert for tilgangskoden selv om ikke autorisasjonen gjelder innenfor noen av de administrative enheter
        /// som er tilknyttet saken(e) eller journalposten(e) merknaden er tilknyttet.
        /// Tilsvarer NOARK4 feltet ME.TGGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilgangsgruppeId {
            get {
                return this.TilgangsgruppeIdField;
            }
            set {
                if ((this.TilgangsgruppeIdField.Equals(value) != true)) {
                    this.TilgangsgruppeIdField = value;
                    this.RaisePropertyChanged("TilgangsgruppeId");
                }
            }
        }
        
        /// <summary>
        /// Access code - Tilgangskoden merknaden er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangskoden merknaden er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Reference to the access code - Referanse til tilgangskode.
        /// Feltlengde: 2 tegn.
        /// Benyttes dersom merknaden ikke skal være tilgjengelig for alle.
        /// Oppslag mot tabellen Tilgangskode.
        /// Tilsvarer NOARK4 feltet ME.TGKODE
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #1 - Tilleggsattributt nummer 1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt1 {
            get {
                return this.TilleggsAttributt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt1Field, value) != true)) {
                    this.TilleggsAttributt1Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt1");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #10 - Tilleggsattributt nummer 10.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt10 {
            get {
                return this.TilleggsAttributt10Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt10Field, value) != true)) {
                    this.TilleggsAttributt10Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt10");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #2 - Tilleggsattributt nummer 2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt2 {
            get {
                return this.TilleggsAttributt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt2Field, value) != true)) {
                    this.TilleggsAttributt2Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt2");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #3 - Tilleggsattributt nummer 3.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt3 {
            get {
                return this.TilleggsAttributt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt3Field, value) != true)) {
                    this.TilleggsAttributt3Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt3");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #4 - Tilleggsattributt nummer 4.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt4 {
            get {
                return this.TilleggsAttributt4Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt4Field, value) != true)) {
                    this.TilleggsAttributt4Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt4");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #5 - Tilleggsattributt nummer 5.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt5 {
            get {
                return this.TilleggsAttributt5Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt5Field, value) != true)) {
                    this.TilleggsAttributt5Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt5");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #6 - Tilleggsattributt nummer 6.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt6 {
            get {
                return this.TilleggsAttributt6Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt6Field, value) != true)) {
                    this.TilleggsAttributt6Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt6");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #7 - Tilleggsattributt nummer 7.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt7 {
            get {
                return this.TilleggsAttributt7Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt7Field, value) != true)) {
                    this.TilleggsAttributt7Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt7");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #8 - Tilleggsattributt nummer 8.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt8 {
            get {
                return this.TilleggsAttributt8Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt8Field, value) != true)) {
                    this.TilleggsAttributt8Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt8");
                }
            }
        }
        
        /// <summary>
        /// Additional attribute #9 - Tilleggsattributt nummer 9.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt9 {
            get {
                return this.TilleggsAttributt9Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt9Field, value) != true)) {
                    this.TilleggsAttributt9Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt9");
                }
            }
        }
        
        /// <summary>
        /// Referanse til en variant av versjonen. Benyttes dersom merknaden er knyttet til denne bestemte varianten.
        /// Ved konvertering til arkivformat kan det f.eks bemerkes dersom visuell integritet ikke er opprettholdt.
        /// Tilsvarer NOARK4 feltet ME_VARIANT
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variant {
            get {
                return this.VariantField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantField, value) != true)) {
                    this.VariantField = value;
                    this.RaisePropertyChanged("Variant");
                }
            }
        }
        
        /// <summary>
        /// Referanse til versjon av saksdokument. Benyttes dersom merknaden er knyttet til en bestemt versjon av et saksdokument.
        /// Tilsvarer NOARK4 feltet ME.DOKVER
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Versjonsnr {
            get {
                return this.VersjonsnrField;
            }
            set {
                if ((this.VersjonsnrField.Equals(value) != true)) {
                    this.VersjonsnrField = value;
                    this.RaisePropertyChanged("Versjonsnr");
                }
            }
        }
        
        /// <summary>
        /// Date and time created - Dato og klokkeslett for oppretting av recorden
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=36)]
        public System.Nullable<System.DateTime> Opprettet {
            get {
                return this.OpprettetField;
            }
            set {
                if ((this.OpprettetField.Equals(value) != true)) {
                    this.OpprettetField = value;
                    this.RaisePropertyChanged("Opprettet");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder koder for de typer tilleggsinformasjon og merknader som skal kunne benyttes.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Informasjonstype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Informasjonstype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Ledetekst1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Ledetekst2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LoggTidspunktOgBrukerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MerknadskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OppbevaringstidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet IT.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Gruppering av informasjonstypene 0-udefinert, 1-endringslogg, 2-funksjonslogg, 3-behandlinger.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Gruppe {
            get {
                return this.GruppeField;
            }
            set {
                if ((this.GruppeField.Equals(value) != true)) {
                    this.GruppeField = value;
                    this.RaisePropertyChanged("Gruppe");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet IT.KODE
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Ledetekst som skal benyttes foran tilleggsopplysning attributtet.
        /// Feltlengde: 30 tegn.
        /// Tilsvarer NOARK4 feltet IT.LTEKST1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ledetekst1 {
            get {
                return this.Ledetekst1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Ledetekst1Field, value) != true)) {
                    this.Ledetekst1Field = value;
                    this.RaisePropertyChanged("Ledetekst1");
                }
            }
        }
        
        /// <summary>
        /// Ledetekst som skal benyttes foran tidspunkt og navn.
        /// Feltlengde: 30 tegn.
        /// Tilsvarer NOARK4 feltet IT.LTEKST2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ledetekst2 {
            get {
                return this.Ledetekst2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Ledetekst2Field, value) != true)) {
                    this.Ledetekst2Field = value;
                    this.RaisePropertyChanged("Ledetekst2");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom tidspunkt og ID til den bruker som registrerer informasjonen automatisk skal registreres, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet IT.AUTOLOG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> LoggTidspunktOgBruker {
            get {
                return this.LoggTidspunktOgBrukerField;
            }
            set {
                if ((this.LoggTidspunktOgBrukerField.Equals(value) != true)) {
                    this.LoggTidspunktOgBrukerField = value;
                    this.RaisePropertyChanged("LoggTidspunktOgBruker");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom denne koden benyttes for merknader, ikke valgt hvis den benyttes for andre typer tilleggsinformasjon.
        /// Tilsvarer NOARK4 feltet IT.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Merknadskode {
            get {
                return this.MerknadskodeField;
            }
            set {
                if ((this.MerknadskodeField.Equals(value) != true)) {
                    this.MerknadskodeField = value;
                    this.RaisePropertyChanged("Merknadskode");
                }
            }
        }
        
        /// <summary>
        /// Standardverdi for oppbevaringstid for denne typen tilleggsinformasjon. Angis i måneder fra registreringsdato.
        /// Tilsvarer NOARK4 feltet IT.OPPBETID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Oppbevaringstid {
            get {
                return this.OppbevaringstidField;
            }
            set {
                if ((this.OppbevaringstidField.Equals(value) != true)) {
                    this.OppbevaringstidField = value;
                    this.RaisePropertyChanged("Oppbevaringstid");
                }
            }
        }
        
        /// <summary>
        /// Standard tilgangskode som informasjonstypen er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om standard tilgangskode som informasjonstypen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til standardverdi for den tilgangskode som skal benyttes for denne typen tilleggsinformasjon.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet IT.TGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om plansak.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Plansak", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Plansak : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DatoIkraftsattField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LovreferanseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.PlansakPlanbestemmelse PlanbestemmelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanbestemmelseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlannummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.PlansakPlanstatus PlanstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlanstatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.PlansakPlantype PlantypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlantypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.PlansakReguleringsformaal[] ReguleringsformaalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        /// <summary>
        /// Dato for ikraftsettelse av plan.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DatoIkraftsatt {
            get {
                return this.DatoIkraftsattField;
            }
            set {
                if ((this.DatoIkraftsattField.Equals(value) != true)) {
                    this.DatoIkraftsattField = value;
                    this.RaisePropertyChanged("DatoIkraftsatt");
                }
            }
        }
        
        /// <summary>
        /// Unik nøkkel til plansak.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Lovreferanse.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lovreferanse {
            get {
                return this.LovreferanseField;
            }
            set {
                if ((object.ReferenceEquals(this.LovreferanseField, value) != true)) {
                    this.LovreferanseField = value;
                    this.RaisePropertyChanged("Lovreferanse");
                }
            }
        }
        
        /// <summary>
        /// Planbestemmelse som plansaken er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver planbestemmelsen som plansaken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.PlansakPlanbestemmelse Planbestemmelse {
            get {
                return this.PlanbestemmelseField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanbestemmelseField, value) != true)) {
                    this.PlanbestemmelseField = value;
                    this.RaisePropertyChanged("Planbestemmelse");
                }
            }
        }
        
        /// <summary>
        /// Referanse til planbestemmelse.
        /// Feltlengde: 2 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanbestemmelseId {
            get {
                return this.PlanbestemmelseIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanbestemmelseIdField, value) != true)) {
                    this.PlanbestemmelseIdField = value;
                    this.RaisePropertyChanged("PlanbestemmelseId");
                }
            }
        }
        
        /// <summary>
        /// Plannummer.
        /// Feltlengde: 16 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plannummer {
            get {
                return this.PlannummerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlannummerField, value) != true)) {
                    this.PlannummerField = value;
                    this.RaisePropertyChanged("Plannummer");
                }
            }
        }
        
        /// <summary>
        /// Status for plansaken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver status for plansaken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.PlansakPlanstatus Planstatus {
            get {
                return this.PlanstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanstatusField, value) != true)) {
                    this.PlanstatusField = value;
                    this.RaisePropertyChanged("Planstatus");
                }
            }
        }
        
        /// <summary>
        /// Referanse til planstatus.
        /// Feltlengde: 2 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlanstatusId {
            get {
                return this.PlanstatusIdField;
            }
            set {
                if ((this.PlanstatusIdField.Equals(value) != true)) {
                    this.PlanstatusIdField = value;
                    this.RaisePropertyChanged("PlanstatusId");
                }
            }
        }
        
        /// <summary>
        /// Plantype for plansaken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver plantype for plansaken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.PlansakPlantype Plantype {
            get {
                return this.PlantypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantypeField, value) != true)) {
                    this.PlantypeField = value;
                    this.RaisePropertyChanged("Plantype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til plantype.
        /// Feltlengde: 3 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlantypeId {
            get {
                return this.PlantypeIdField;
            }
            set {
                if ((this.PlantypeIdField.Equals(value) != true)) {
                    this.PlantypeIdField = value;
                    this.RaisePropertyChanged("PlantypeId");
                }
            }
        }
        
        /// <summary>
        /// Reguleringsformål tilhørende plansaken.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver reguleringsformålene tilhørende plansaken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.PlansakReguleringsformaal[] Reguleringsformaal {
            get {
                return this.ReguleringsformaalField;
            }
            set {
                if ((object.ReferenceEquals(this.ReguleringsformaalField, value) != true)) {
                    this.ReguleringsformaalField = value;
                    this.RaisePropertyChanged("Reguleringsformaal");
                }
            }
        }
        
        /// <summary>
        /// Saken plansaken er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken plansaken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Referanse til saken plansaken er knyttet til.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
    }
    
    /// <summary>
    /// Planbestemmelse for plansaker.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlansakPlanbestemmelse", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class PlansakPlanbestemmelse : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 255 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Status for plansaker.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlansakPlanstatus", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class PlansakPlanstatus : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 255 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Plantype for plansaker.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlansakPlantype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class PlansakPlantype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 255 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 3 tegn.
        /// /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Reguleringsformål for plansak.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlansakReguleringsformaal", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class PlansakReguleringsformaal : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Plansak PlansakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.PlansakReguleringsformaalType ReguleringsformaalTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReguleringsformaalTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        /// <summary>
        /// Unik nøkkel til reguleringsformål. Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Plansaken reguleringsformålet er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver plansaken reguleringsformålet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Plansak Plansak {
            get {
                return this.PlansakField;
            }
            set {
                if ((object.ReferenceEquals(this.PlansakField, value) != true)) {
                    this.PlansakField = value;
                    this.RaisePropertyChanged("Plansak");
                }
            }
        }
        
        /// <summary>
        /// Type reguleringsformål.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver type reguleringsformål.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.PlansakReguleringsformaalType ReguleringsformaalType {
            get {
                return this.ReguleringsformaalTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReguleringsformaalTypeField, value) != true)) {
                    this.ReguleringsformaalTypeField = value;
                    this.RaisePropertyChanged("ReguleringsformaalType");
                }
            }
        }
        
        /// <summary>
        /// Referanse til type reguleringsformål.
        /// Feltlengde: 10 tegn.
        /// Oppslags mot tabellen PlansakReguleringsformaalType.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReguleringsformaalTypeId {
            get {
                return this.ReguleringsformaalTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReguleringsformaalTypeIdField, value) != true)) {
                    this.ReguleringsformaalTypeIdField = value;
                    this.RaisePropertyChanged("ReguleringsformaalTypeId");
                }
            }
        }
        
        /// <summary>
        /// Saken reguleringsformålet er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken reguleringsformålet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Referanse til sak.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om typer av reguleringsformål.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlansakReguleringsformaalType", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class PlansakReguleringsformaalType : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 255 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om prosjekt.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Prosjekt", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Prosjekt : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak[] SakerField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Saker knyttet til prosjektet.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver sakene som er knyttet til prosjektet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak[] Saker {
            get {
                return this.SakerField;
            }
            set {
                if ((object.ReferenceEquals(this.SakerField, value) != true)) {
                    this.SakerField = value;
                    this.RaisePropertyChanged("Saker");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver den eller de etater, firma eller privatpersoner som er part i saken.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sakspart", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Sakspart : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Adresseregister AdressatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdressatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPostAdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KontaktpersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KortnavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostadresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoststedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RolleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.SakspartRolleLink[] RollerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SakspartRolleLinkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SakspartUOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefaksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsAttributt9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtlandsadresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Identifikasjonstype IdentifikasjonstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifikasjonstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganisasjonsnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SistOppdatertField;
        
        /// <summary>
        /// Adressat i adresseregisteret.
        /// </summary>
        /// <value>Inneholder attributter som beskriver adressaten som saksparten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Adresseregister Adressat {
            get {
                return this.AdressatField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressatField, value) != true)) {
                    this.AdressatField = value;
                    this.RaisePropertyChanged("Adressat");
                }
            }
        }
        
        /// <summary>
        /// Henvisning til adressat i adresseregisteret
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdressatId {
            get {
                return this.AdressatIdField;
            }
            set {
                if ((this.AdressatIdField.Equals(value) != true)) {
                    this.AdressatIdField = value;
                    this.RaisePropertyChanged("AdressatId");
                }
            }
        }
        
        /// <summary>
        /// Epost-adresse.
        /// Feltlengde: 120 tegn.
        /// Tilsvarer NOARK4 feltet SP.EPOSTADR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPostAdresse {
            get {
                return this.EPostAdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.EPostAdresseField, value) != true)) {
                    this.EPostAdresseField = value;
                    this.RaisePropertyChanged("EPostAdresse");
                }
            }
        }
        
        /// <summary>
        /// Unik ID for sakspart (ikke prim�rn�kkel).
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Kontaktperson hos saksparten.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet SP.KONTAKT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kontaktperson {
            get {
                return this.KontaktpersonField;
            }
            set {
                if ((object.ReferenceEquals(this.KontaktpersonField, value) != true)) {
                    this.KontaktpersonField = value;
                    this.RaisePropertyChanged("Kontaktperson");
                }
            }
        }
        
        /// <summary>
        /// Kortnavn.
        /// Feltlengde: 15 tegn.
        /// Oppslag mot tabellen Adresseregister.
        /// Tilsvarer NOARK4 feltet SP.KORTNAVN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kortnavn {
            get {
                return this.KortnavnField;
            }
            set {
                if ((object.ReferenceEquals(this.KortnavnField, value) != true)) {
                    this.KortnavnField = value;
                    this.RaisePropertyChanged("Kortnavn");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet SP.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Navn til part i saken
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet SP.NAVN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Navn {
            get {
                return this.NavnField;
            }
            set {
                if ((object.ReferenceEquals(this.NavnField, value) != true)) {
                    this.NavnField = value;
                    this.RaisePropertyChanged("Navn");
                }
            }
        }
        
        /// <summary>
        /// Adresse.
        /// Feltlengde: 120 tegn.
        /// Tilsvarer NOARK4 feltet SP.ADRESSE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postadresse {
            get {
                return this.PostadresseField;
            }
            set {
                if ((object.ReferenceEquals(this.PostadresseField, value) != true)) {
                    this.PostadresseField = value;
                    this.RaisePropertyChanged("Postadresse");
                }
            }
        }
        
        /// <summary>
        /// Postnummer.
        /// Feltlengde: 5 tegn.
        /// Oppslag mot tabellen Postnummer.
        /// Tilsvarer NOARK4 feltet SP.POSTNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postnr {
            get {
                return this.PostnrField;
            }
            set {
                if ((object.ReferenceEquals(this.PostnrField, value) != true)) {
                    this.PostnrField = value;
                    this.RaisePropertyChanged("Postnr");
                }
            }
        }
        
        /// <summary>
        /// Poststed.
        /// Feltlengde: 60 tegn.
        /// Tilsvarer NOARK4 feltet SP.POSTSTED.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Poststed {
            get {
                return this.PoststedField;
            }
            set {
                if ((object.ReferenceEquals(this.PoststedField, value) != true)) {
                    this.PoststedField = value;
                    this.RaisePropertyChanged("Poststed");
                }
            }
        }
        
        /// <summary>
        /// Den rolle (part, fullmektig el) kontaktpersonen har i saken.
        /// Avledes i forhold til registrering i SakspartRolleLink.
        /// Tilsvarer NOARK4 feltet SP_ROLLE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rolle {
            get {
                return this.RolleField;
            }
            set {
                if ((object.ReferenceEquals(this.RolleField, value) != true)) {
                    this.RolleField = value;
                    this.RaisePropertyChanged("Rolle");
                }
            }
        }
        
        /// <summary>
        /// Roller tilh�rende saksparten.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver rollene saksparten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.SakspartRolleLink[] Roller {
            get {
                return this.RollerField;
            }
            set {
                if ((object.ReferenceEquals(this.RollerField, value) != true)) {
                    this.RollerField = value;
                    this.RaisePropertyChanged("Roller");
                }
            }
        }
        
        /// <summary>
        /// Saken saksparten er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken som saksparten er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Referanse til sak.
        /// Overf�rt fra saken og kan ikke endres.
        /// Tilsvarer NOARK4 feltet SP.SAID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
        
        /// <summary>
        /// Referanse til SakspartRolleLink.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SakspartRolleLinkId {
            get {
                return this.SakspartRolleLinkIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SakspartRolleLinkIdField, value) != true)) {
                    this.SakspartRolleLinkIdField = value;
                    this.RaisePropertyChanged("SakspartRolleLinkId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom informasjon om saksparten skal unntas offentligheten, ikke valgt ellers.
        /// Tillates kun valgt dersom tilgangskode er angitt p� saken.
        /// Tilsvarer NOARK4 feltet SP.U1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SakspartUOff {
            get {
                return this.SakspartUOffField;
            }
            set {
                if ((this.SakspartUOffField.Equals(value) != true)) {
                    this.SakspartUOffField = value;
                    this.RaisePropertyChanged("SakspartUOff");
                }
            }
        }
        
        /// <summary>
        /// Telefaksnummer.
        /// Feltlengde: 20 tegn.
        /// Tilsvarer NOARK4 feltet SP.FAKS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefaks {
            get {
                return this.TelefaksField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefaksField, value) != true)) {
                    this.TelefaksField = value;
                    this.RaisePropertyChanged("Telefaks");
                }
            }
        }
        
        /// <summary>
        /// Telefonnummer.
        /// Feltlengde: 20 tegn.
        /// Tilsvarer NOARK4 feltet SP.TLF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefon {
            get {
                return this.TelefonField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonField, value) != true)) {
                    this.TelefonField = value;
                    this.RaisePropertyChanged("Telefon");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt1 {
            get {
                return this.TilleggsAttributt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt1Field, value) != true)) {
                    this.TilleggsAttributt1Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt1");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 10.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt10 {
            get {
                return this.TilleggsAttributt10Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt10Field, value) != true)) {
                    this.TilleggsAttributt10Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt10");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt2 {
            get {
                return this.TilleggsAttributt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt2Field, value) != true)) {
                    this.TilleggsAttributt2Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt2");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 3.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt3 {
            get {
                return this.TilleggsAttributt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt3Field, value) != true)) {
                    this.TilleggsAttributt3Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt3");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 4.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt4 {
            get {
                return this.TilleggsAttributt4Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt4Field, value) != true)) {
                    this.TilleggsAttributt4Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt4");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 5.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt5 {
            get {
                return this.TilleggsAttributt5Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt5Field, value) != true)) {
                    this.TilleggsAttributt5Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt5");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 6.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt6 {
            get {
                return this.TilleggsAttributt6Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt6Field, value) != true)) {
                    this.TilleggsAttributt6Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt6");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 7.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt7 {
            get {
                return this.TilleggsAttributt7Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt7Field, value) != true)) {
                    this.TilleggsAttributt7Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt7");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 8.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt8 {
            get {
                return this.TilleggsAttributt8Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt8Field, value) != true)) {
                    this.TilleggsAttributt8Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt8");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsattributt nummer 9.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilleggsAttributt9 {
            get {
                return this.TilleggsAttributt9Field;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsAttributt9Field, value) != true)) {
                    this.TilleggsAttributt9Field = value;
                    this.RaisePropertyChanged("TilleggsAttributt9");
                }
            }
        }
        
        /// <summary>
        /// Utenlandsadresse.
        /// Feltlengde: 120 tegn.
        /// Erstatter Postnr og Poststed for adresser i utlandet.
        /// Tilsvarer NOARK4 feltet SP.UTLAND.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Utlandsadresse {
            get {
                return this.UtlandsadresseField;
            }
            set {
                if ((object.ReferenceEquals(this.UtlandsadresseField, value) != true)) {
                    this.UtlandsadresseField = value;
                    this.RaisePropertyChanged("Utlandsadresse");
                }
            }
        }
        
        /// <summary>
        /// Identifikasjonstype. Benyttes for � angi type identifikasjon for eksterne personer eller virksomheter.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver identifikasjonstypen saksparten er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute(Order=30)]
        public Gecko.NCore.Client.ObjectModel.V1.Identifikasjonstype Identifikasjonstype {
            get {
                return this.IdentifikasjonstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifikasjonstypeField, value) != true)) {
                    this.IdentifikasjonstypeField = value;
                    this.RaisePropertyChanged("Identifikasjonstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til identifikasjonstype for saksparten.
        /// Oppslag mot tabellen Identifikasjonstype.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=31)]
        public string IdentifikasjonstypeId {
            get {
                return this.IdentifikasjonstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifikasjonstypeIdField, value) != true)) {
                    this.IdentifikasjonstypeIdField = value;
                    this.RaisePropertyChanged("IdentifikasjonstypeId");
                }
            }
        }
        
        /// <summary>
        /// Virksomhetens organisasjonsnummer eller annen entydig referanse opplyst av saksparten selv.
        /// Kan inneholde f�dselsnummer for personer. Danner sammen med IdentifikasjonstypeId en unik identifikasjon av saksparten.
        /// Feltlengde: 20 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=32)]
        public string Organisasjonsnr {
            get {
                return this.OrganisasjonsnrField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisasjonsnrField, value) != true)) {
                    this.OrganisasjonsnrField = value;
                    this.RaisePropertyChanged("Organisasjonsnr");
                }
            }
        }
        
        /// <summary>
        /// Date and time created - Dato og klokkeslett for oppretting av recorden
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=33)]
        public System.Nullable<System.DateTime> Opprettet {
            get {
                return this.OpprettetField;
            }
            set {
                if ((this.OpprettetField.Equals(value) != true)) {
                    this.OpprettetField = value;
                    this.RaisePropertyChanged("Opprettet");
                }
            }
        }
        
        /// <summary>
        /// Date and time last updated - Dato og klokkeslett for sist oppdatering.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=34)]
        public System.Nullable<System.DateTime> SistOppdatert {
            get {
                return this.SistOppdatertField;
            }
            set {
                if ((this.SistOppdatertField.Equals(value) != true)) {
                    this.SistOppdatertField = value;
                    this.RaisePropertyChanged("SistOppdatert");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder koblinger mellom sakspartroller og saksparter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SakspartRolleLink", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class SakspartRolleLink : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.SakspartRolle RolleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RolleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sakspart SakspartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakspartIdField;
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Rollen som koblingen gjelder.
        /// </summary>
        /// <value>Inneholder attributter som beskriver rollen som koblingen gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.SakspartRolle Rolle {
            get {
                return this.RolleField;
            }
            set {
                if ((object.ReferenceEquals(this.RolleField, value) != true)) {
                    this.RolleField = value;
                    this.RaisePropertyChanged("Rolle");
                }
            }
        }
        
        /// <summary>
        /// Referanse til rollen som koblingen gjelder
        /// Feltlengde: 4 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RolleId {
            get {
                return this.RolleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RolleIdField, value) != true)) {
                    this.RolleIdField = value;
                    this.RaisePropertyChanged("RolleId");
                }
            }
        }
        
        /// <summary>
        /// Saksparten som koblingen gjelder.
        /// </summary>
        /// <value>Inneholder attributter som beskriver saksparten som koblingen gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sakspart Sakspart {
            get {
                return this.SakspartField;
            }
            set {
                if ((object.ReferenceEquals(this.SakspartField, value) != true)) {
                    this.SakspartField = value;
                    this.RaisePropertyChanged("Sakspart");
                }
            }
        }
        
        /// <summary>
        /// Referanse til saksparten som koblingen gjelder.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakspartId {
            get {
                return this.SakspartIdField;
            }
            set {
                if ((this.SakspartIdField.Equals(value) != true)) {
                    this.SakspartIdField = value;
                    this.RaisePropertyChanged("SakspartId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder detaljer om roller knyttet til saksparter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SakspartRolle", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class SakspartRolle : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Mappetype MappetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MappetypeIdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 4 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Mappetype som rollen er begrenset til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver mappetype som rollen er begrenset til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Mappetype Mappetype {
            get {
                return this.MappetypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MappetypeField, value) != true)) {
                    this.MappetypeField = value;
                    this.RaisePropertyChanged("Mappetype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til mappetype som rollen er begrenset til.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Mappetype.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MappetypeId {
            get {
                return this.MappetypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MappetypeIdField, value) != true)) {
                    this.MappetypeIdField = value;
                    this.RaisePropertyChanged("MappetypeId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver hvilken arkivmessig tilstand en sak er i.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Saksstatus", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Saksstatus : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LukketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MidlertidigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtgaarField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet SS.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet SS.STATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom denne saksstatus medfører at saken er lukket slik at nye
        /// journalposter ikke kan registreres i saken, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet SS.LUKKET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Lukket {
            get {
                return this.LukketField;
            }
            set {
                if ((this.LukketField.Equals(value) != true)) {
                    this.LukketField = value;
                    this.RaisePropertyChanged("Lukket");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom denne saksstatus medfører at saken er midlertidig registrert av eller for saksansvarlig,
        /// ikke valgt dersom den er under behandling.
        /// Tilsvarer NOARK4 feltet SS.MIDLERTIDIG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Midlertidig {
            get {
                return this.MidlertidigField;
            }
            set {
                if ((this.MidlertidigField.Equals(value) != true)) {
                    this.MidlertidigField = value;
                    this.RaisePropertyChanged("Midlertidig");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom denne saksstatus medfører at saken utgår, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet SS.UTG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Utgaar {
            get {
                return this.UtgaarField;
            }
            set {
                if ((this.UtgaarField.Equals(value) != true)) {
                    this.UtgaarField = value;
                    this.RaisePropertyChanged("Utgaar");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om stilling i forbindelse med ansettelser.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnsettelsesakStilling", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AnsettelsesakStilling : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArbeidsstedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AvsluttetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Kontaktinformasjon1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Kontaktinformasjon2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> KunngjoeringsdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakKunngjoeringsmaate KunngjoeringsmaateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KunngjoeringsmaateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStillingSoeker[] SoeknaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SoeknadsfristField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StillingsbroekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStillingstype StillingstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StillingstypeIdField;
        
        /// <summary>
        /// Stillingens arbeidssted.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Arbeidssted {
            get {
                return this.ArbeidsstedField;
            }
            set {
                if ((object.ReferenceEquals(this.ArbeidsstedField, value) != true)) {
                    this.ArbeidsstedField = value;
                    this.RaisePropertyChanged("Arbeidssted");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom søknadsprosessen på stillingen er avsluttet, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Avsluttet {
            get {
                return this.AvsluttetField;
            }
            set {
                if ((this.AvsluttetField.Equals(value) != true)) {
                    this.AvsluttetField = value;
                    this.RaisePropertyChanged("Avsluttet");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Unik nøkkel til stilling. Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Kontaktinformasjon 1 ved bruk i annonsering.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kontaktinformasjon1 {
            get {
                return this.Kontaktinformasjon1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Kontaktinformasjon1Field, value) != true)) {
                    this.Kontaktinformasjon1Field = value;
                    this.RaisePropertyChanged("Kontaktinformasjon1");
                }
            }
        }
        
        /// <summary>
        /// Kontaktinformasjon 2 ved bruk i annonsering.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kontaktinformasjon2 {
            get {
                return this.Kontaktinformasjon2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Kontaktinformasjon2Field, value) != true)) {
                    this.Kontaktinformasjon2Field = value;
                    this.RaisePropertyChanged("Kontaktinformasjon2");
                }
            }
        }
        
        /// <summary>
        /// Dato for kunngjøring av stillingen.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Kunngjoeringsdato {
            get {
                return this.KunngjoeringsdatoField;
            }
            set {
                if ((this.KunngjoeringsdatoField.Equals(value) != true)) {
                    this.KunngjoeringsdatoField = value;
                    this.RaisePropertyChanged("Kunngjoeringsdato");
                }
            }
        }
        
        /// <summary>
        /// Kunngjøringsmåte for stillingen.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver kunngjøringsmåte for stillingen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakKunngjoeringsmaate Kunngjoeringsmaate {
            get {
                return this.KunngjoeringsmaateField;
            }
            set {
                if ((object.ReferenceEquals(this.KunngjoeringsmaateField, value) != true)) {
                    this.KunngjoeringsmaateField = value;
                    this.RaisePropertyChanged("Kunngjoeringsmaate");
                }
            }
        }
        
        /// <summary>
        /// Referanse til kunngjøringsmåte for stillingen.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KunngjoeringsmaateId {
            get {
                return this.KunngjoeringsmaateIdField;
            }
            set {
                if ((object.ReferenceEquals(this.KunngjoeringsmaateIdField, value) != true)) {
                    this.KunngjoeringsmaateIdField = value;
                    this.RaisePropertyChanged("KunngjoeringsmaateId");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Saken stillingen er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken stillingen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Referanse til saken stillingen er knyttet til.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
        
        /// <summary>
        /// Søknader på stillingen.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver søknader på stillingen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStillingSoeker[] Soeknader {
            get {
                return this.SoeknaderField;
            }
            set {
                if ((object.ReferenceEquals(this.SoeknaderField, value) != true)) {
                    this.SoeknaderField = value;
                    this.RaisePropertyChanged("Soeknader");
                }
            }
        }
        
        /// <summary>
        /// Dato for når søknadsfristen på stillingen går ut.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Soeknadsfrist {
            get {
                return this.SoeknadsfristField;
            }
            set {
                if ((this.SoeknadsfristField.Equals(value) != true)) {
                    this.SoeknadsfristField = value;
                    this.RaisePropertyChanged("Soeknadsfrist");
                }
            }
        }
        
        /// <summary>
        /// Stillingsbrøk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Stillingsbroek {
            get {
                return this.StillingsbroekField;
            }
            set {
                if ((this.StillingsbroekField.Equals(value) != true)) {
                    this.StillingsbroekField = value;
                    this.RaisePropertyChanged("Stillingsbroek");
                }
            }
        }
        
        /// <summary>
        /// Stillingstype.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver stillingstypen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStillingstype Stillingstype {
            get {
                return this.StillingstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StillingstypeField, value) != true)) {
                    this.StillingstypeField = value;
                    this.RaisePropertyChanged("Stillingstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til stillingstype.
        /// Feltlengde: 2 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StillingstypeId {
            get {
                return this.StillingstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StillingstypeIdField, value) != true)) {
                    this.StillingstypeIdField = value;
                    this.RaisePropertyChanged("StillingstypeId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om kunngjøringsmåte for stillinger.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnsettelsesakKunngjoeringsmaate", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AnsettelsesakKunngjoeringsmaate : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Obligatorisk.
        /// Feltlengde: 50 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder detaljer om en stillingssøker.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnsettelsesakStillingSoeker", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AnsettelsesakStillingSoeker : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IntervjudatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntervjustedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IntervjutidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalpostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> KompetansevurderingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakSoeker SoekerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SoekerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SoeknadsdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakSoeknadstatus SoeknadstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SoeknadstatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStilling StillingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StillingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UoffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UoffHjemmelField;
        
        /// <summary>
        /// Dato for når søkeren skal intervjues.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Intervjudato {
            get {
                return this.IntervjudatoField;
            }
            set {
                if ((this.IntervjudatoField.Equals(value) != true)) {
                    this.IntervjudatoField = value;
                    this.RaisePropertyChanged("Intervjudato");
                }
            }
        }
        
        /// <summary>
        /// Intervjusted.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Intervjusted {
            get {
                return this.IntervjustedField;
            }
            set {
                if ((object.ReferenceEquals(this.IntervjustedField, value) != true)) {
                    this.IntervjustedField = value;
                    this.RaisePropertyChanged("Intervjusted");
                }
            }
        }
        
        /// <summary>
        /// Klokkeslett for når søkeren skal intervjues.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Intervjutid {
            get {
                return this.IntervjutidField;
            }
            set {
                if ((this.IntervjutidField.Equals(value) != true)) {
                    this.IntervjutidField = value;
                    this.RaisePropertyChanged("Intervjutid");
                }
            }
        }
        
        /// <summary>
        /// Journalposten som inneholder søknaden.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalposten som inneholder søknaden.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Referanse til journalposten som inneholder søknaden.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalpostId {
            get {
                return this.JournalpostIdField;
            }
            set {
                if ((this.JournalpostIdField.Equals(value) != true)) {
                    this.JournalpostIdField = value;
                    this.RaisePropertyChanged("JournalpostId");
                }
            }
        }
        
        /// <summary>
        /// Kompetansevurdering.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Kompetansevurdering {
            get {
                return this.KompetansevurderingField;
            }
            set {
                if ((this.KompetansevurderingField.Equals(value) != true)) {
                    this.KompetansevurderingField = value;
                    this.RaisePropertyChanged("Kompetansevurdering");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Søkeren stillingssøkeren er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver søkeren stillingssøkeren er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakSoeker Soeker {
            get {
                return this.SoekerField;
            }
            set {
                if ((object.ReferenceEquals(this.SoekerField, value) != true)) {
                    this.SoekerField = value;
                    this.RaisePropertyChanged("Soeker");
                }
            }
        }
        
        /// <summary>
        /// Referanse til søkeren stillingssøkeren er knyttet til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SoekerId {
            get {
                return this.SoekerIdField;
            }
            set {
                if ((this.SoekerIdField.Equals(value) != true)) {
                    this.SoekerIdField = value;
                    this.RaisePropertyChanged("SoekerId");
                }
            }
        }
        
        /// <summary>
        /// Søknadsdato.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Soeknadsdato {
            get {
                return this.SoeknadsdatoField;
            }
            set {
                if ((this.SoeknadsdatoField.Equals(value) != true)) {
                    this.SoeknadsdatoField = value;
                    this.RaisePropertyChanged("Soeknadsdato");
                }
            }
        }
        
        /// <summary>
        /// søknadsstatus.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver søknadsstatus.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakSoeknadstatus Soeknadstatus {
            get {
                return this.SoeknadstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SoeknadstatusField, value) != true)) {
                    this.SoeknadstatusField = value;
                    this.RaisePropertyChanged("Soeknadstatus");
                }
            }
        }
        
        /// <summary>
        /// Referanse til søknadsstatus.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SoeknadstatusId {
            get {
                return this.SoeknadstatusIdField;
            }
            set {
                if ((this.SoeknadstatusIdField.Equals(value) != true)) {
                    this.SoeknadstatusIdField = value;
                    this.RaisePropertyChanged("SoeknadstatusId");
                }
            }
        }
        
        /// <summary>
        /// Stillingen stillingssøkeren er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver stillingen stillingssøkeren er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStilling Stilling {
            get {
                return this.StillingField;
            }
            set {
                if ((object.ReferenceEquals(this.StillingField, value) != true)) {
                    this.StillingField = value;
                    this.RaisePropertyChanged("Stilling");
                }
            }
        }
        
        /// <summary>
        /// Referanse til stilling.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StillingId {
            get {
                return this.StillingIdField;
            }
            set {
                if ((this.StillingIdField.Equals(value) != true)) {
                    this.StillingIdField = value;
                    this.RaisePropertyChanged("StillingId");
                }
            }
        }
        
        /// <summary>
        /// Tilgangskode.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver tilgangskoden.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangskode.
        /// Oppslag mot tabellen Hjemmel for tilgangskode.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom søknaden skal unntas offentligheten, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Uoff {
            get {
                return this.UoffField;
            }
            set {
                if ((this.UoffField.Equals(value) != true)) {
                    this.UoffField = value;
                    this.RaisePropertyChanged("Uoff");
                }
            }
        }
        
        /// <summary>
        /// Hjemmel for å unnta søknaden fra offentligheten.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UoffHjemmel {
            get {
                return this.UoffHjemmelField;
            }
            set {
                if ((object.ReferenceEquals(this.UoffHjemmelField, value) != true)) {
                    this.UoffHjemmelField = value;
                    this.RaisePropertyChanged("UoffHjemmel");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om søkere på stillinger.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnsettelsesakSoeker", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AnsettelsesakSoeker : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArbeidsgiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArbeidskommuneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPostAdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EtternavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FoedselsdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FornavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KjoennField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobiltelefonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostadresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoststedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStillingSoeker[] SoeknaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StillingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefaksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonArbeidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonPrivatField;
        
        /// <summary>
        /// Arbeidsgiver.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Arbeidsgiver {
            get {
                return this.ArbeidsgiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ArbeidsgiverField, value) != true)) {
                    this.ArbeidsgiverField = value;
                    this.RaisePropertyChanged("Arbeidsgiver");
                }
            }
        }
        
        /// <summary>
        /// Arbeidskommune.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Arbeidskommune {
            get {
                return this.ArbeidskommuneField;
            }
            set {
                if ((object.ReferenceEquals(this.ArbeidskommuneField, value) != true)) {
                    this.ArbeidskommuneField = value;
                    this.RaisePropertyChanged("Arbeidskommune");
                }
            }
        }
        
        /// <summary>
        /// E-post adresse.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPostAdresse {
            get {
                return this.EPostAdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.EPostAdresseField, value) != true)) {
                    this.EPostAdresseField = value;
                    this.RaisePropertyChanged("EPostAdresse");
                }
            }
        }
        
        /// <summary>
        /// Etternavn.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Etternavn {
            get {
                return this.EtternavnField;
            }
            set {
                if ((object.ReferenceEquals(this.EtternavnField, value) != true)) {
                    this.EtternavnField = value;
                    this.RaisePropertyChanged("Etternavn");
                }
            }
        }
        
        /// <summary>
        /// Fødselsdato.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Foedselsdato {
            get {
                return this.FoedselsdatoField;
            }
            set {
                if ((this.FoedselsdatoField.Equals(value) != true)) {
                    this.FoedselsdatoField = value;
                    this.RaisePropertyChanged("Foedselsdato");
                }
            }
        }
        
        /// <summary>
        /// Fornavn.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fornavn {
            get {
                return this.FornavnField;
            }
            set {
                if ((object.ReferenceEquals(this.FornavnField, value) != true)) {
                    this.FornavnField = value;
                    this.RaisePropertyChanged("Fornavn");
                }
            }
        }
        
        /// <summary>
        /// Unik ID for søker.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Kjønn.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier: M - mann , K - kvinne.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kjoenn {
            get {
                return this.KjoennField;
            }
            set {
                if ((object.ReferenceEquals(this.KjoennField, value) != true)) {
                    this.KjoennField = value;
                    this.RaisePropertyChanged("Kjoenn");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 2000.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Mobiltelefonnummer.
        /// Feltlengde: 20 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobiltelefon {
            get {
                return this.MobiltelefonField;
            }
            set {
                if ((object.ReferenceEquals(this.MobiltelefonField, value) != true)) {
                    this.MobiltelefonField = value;
                    this.RaisePropertyChanged("Mobiltelefon");
                }
            }
        }
        
        /// <summary>
        /// Personnummer.
        /// Feltlengde: 15 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Personnummer {
            get {
                return this.PersonnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonnummerField, value) != true)) {
                    this.PersonnummerField = value;
                    this.RaisePropertyChanged("Personnummer");
                }
            }
        }
        
        /// <summary>
        /// Postadresse.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postadresse {
            get {
                return this.PostadresseField;
            }
            set {
                if ((object.ReferenceEquals(this.PostadresseField, value) != true)) {
                    this.PostadresseField = value;
                    this.RaisePropertyChanged("Postadresse");
                }
            }
        }
        
        /// <summary>
        /// Postnummer.
        /// Feltlengde: 5 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postnr {
            get {
                return this.PostnrField;
            }
            set {
                if ((object.ReferenceEquals(this.PostnrField, value) != true)) {
                    this.PostnrField = value;
                    this.RaisePropertyChanged("Postnr");
                }
            }
        }
        
        /// <summary>
        /// Poststed.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Poststed {
            get {
                return this.PoststedField;
            }
            set {
                if ((object.ReferenceEquals(this.PoststedField, value) != true)) {
                    this.PoststedField = value;
                    this.RaisePropertyChanged("Poststed");
                }
            }
        }
        
        /// <summary>
        /// Søknader.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver søknader som søkeren har levert til virksomheten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakStillingSoeker[] Soeknader {
            get {
                return this.SoeknaderField;
            }
            set {
                if ((object.ReferenceEquals(this.SoeknaderField, value) != true)) {
                    this.SoeknaderField = value;
                    this.RaisePropertyChanged("Soeknader");
                }
            }
        }
        
        /// <summary>
        /// Stilling.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stilling {
            get {
                return this.StillingField;
            }
            set {
                if ((object.ReferenceEquals(this.StillingField, value) != true)) {
                    this.StillingField = value;
                    this.RaisePropertyChanged("Stilling");
                }
            }
        }
        
        /// <summary>
        /// Telefaksnummer.
        /// Feltlengde: 20 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefaks {
            get {
                return this.TelefaksField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefaksField, value) != true)) {
                    this.TelefaksField = value;
                    this.RaisePropertyChanged("Telefaks");
                }
            }
        }
        
        /// <summary>
        /// Telefonnummer arbeid.
        /// Feltlengde: 20 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelefonArbeid {
            get {
                return this.TelefonArbeidField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonArbeidField, value) != true)) {
                    this.TelefonArbeidField = value;
                    this.RaisePropertyChanged("TelefonArbeid");
                }
            }
        }
        
        /// <summary>
        /// Telefonnummer privat.
        /// Feltlengde: 20 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelefonPrivat {
            get {
                return this.TelefonPrivatField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonPrivatField, value) != true)) {
                    this.TelefonPrivatField = value;
                    this.RaisePropertyChanged("TelefonPrivat");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om status på søknad på stilling.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnsettelsesakSoeknadstatus", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AnsettelsesakSoeknadstatus : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Obligatorisk.
        /// Feltlengde: 50 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Unik nøkkel for status.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om stillingstyper.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnsettelsesakStillingstype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AnsettelsesakStillingstype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Obligatorisk.
        /// Feltlengde: 25 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om varslingsformer for aktiviteter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AktivitetVarslingsform", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AktivitetVarslingsform : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EPostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UlestField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom det skal sendes varsling med e-post, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EPost {
            get {
                return this.EPostField;
            }
            set {
                if ((this.EPostField.Equals(value) != true)) {
                    this.EPostField = value;
                    this.RaisePropertyChanged("EPost");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom aktiviteten skal flagges som ulest, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Ulest {
            get {
                return this.UlestField;
            }
            set {
                if ((this.UlestField.Equals(value) != true)) {
                    this.UlestField = value;
                    this.RaisePropertyChanged("Ulest");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om behandlingsstatus i dokumentets livssyklus.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dokumentstatus", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Dokumentstatus : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet DS.BETEGN
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet DS.STATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som knytter en relasjon mellom et møtedokument og de enkeltdokumenter som inngår
    /// i dette (vanligvis møteprotokoll og saksprotokoller).
    /// Posten inneholder også informasjon om hvilken type dokument den peker på, samt hvilken rekkefølge dokumentet skal komme i under møtedokumentet.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DokumentlinkMoetedokument", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class DokumentlinkMoetedokument : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse DokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DokumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Moetedokument MoetedokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MoetedokumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RekkefoelgenrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumenttilknytning TilknytningskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilknytningskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn TilknyttetAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilknyttetAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TilknyttetDatoField;
        
        /// <summary>
        /// Dokumentet som møtedokumentlinken er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om dokumentet som møtedokumentlinken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse Dokument {
            get {
                return this.DokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentField, value) != true)) {
                    this.DokumentField = value;
                    this.RaisePropertyChanged("Dokument");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse (innen journalbasen og saksbehandlingssystemet) til dokumentbeskrivelsen.
        /// Kan ikke endres.
        /// Tilsvarer NOARK4 feltet ML.DOKID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DokumentId {
            get {
                return this.DokumentIdField;
            }
            set {
                if ((this.DokumentIdField.Equals(value) != true)) {
                    this.DokumentIdField = value;
                    this.RaisePropertyChanged("DokumentId");
                }
            }
        }
        
        /// <summary>
        /// Møtedokumentet som møtedokumentlinken er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om møtedokumentet som møtedokumentlinken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Moetedokument Moetedokument {
            get {
                return this.MoetedokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.MoetedokumentField, value) != true)) {
                    this.MoetedokumentField = value;
                    this.RaisePropertyChanged("Moetedokument");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til møtedokumentet.
        /// Tilsvarer NOARK4 feltet ML.MDPID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MoetedokumentId {
            get {
                return this.MoetedokumentIdField;
            }
            set {
                if ((this.MoetedokumentIdField.Equals(value) != true)) {
                    this.MoetedokumentIdField = value;
                    this.RaisePropertyChanged("MoetedokumentId");
                }
            }
        }
        
        /// <summary>
        /// Angir sorteringsrekkefølge under posten for møtedokument. Standardverdi: sist benyttede nummer for møtedokumentet + 1.
        /// Tilsvarer NOARK4 feltet ML.RNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rekkefoelgenr {
            get {
                return this.RekkefoelgenrField;
            }
            set {
                if ((this.RekkefoelgenrField.Equals(value) != true)) {
                    this.RekkefoelgenrField = value;
                    this.RaisePropertyChanged("Rekkefoelgenr");
                }
            }
        }
        
        /// <summary>
        /// Hvilken tilknytning dokumentet har til møtedokumentet.
        /// </summary>
        /// <value>Inneholder detaljer om hvilken tilknytning dokumentet har til møtedokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumenttilknytning Tilknytningskode {
            get {
                return this.TilknytningskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilknytningskodeField, value) != true)) {
                    this.TilknytningskodeField = value;
                    this.RaisePropertyChanged("Tilknytningskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hvilken tilknytning dokumentet har til møtedokumentet.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen Dokumenttilknytning.
        /// Tilsvarer NOARK4 feltet ML.TYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilknytningskodeId {
            get {
                return this.TilknytningskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilknytningskodeIdField, value) != true)) {
                    this.TilknytningskodeIdField = value;
                    this.RaisePropertyChanged("TilknytningskodeId");
                }
            }
        }
        
        /// <summary>
        /// Personen som har knyttet dokumentet til møtedokumentet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som har knyttet dokumentet til møtedokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn TilknyttetAv {
            get {
                return this.TilknyttetAvField;
            }
            set {
                if ((object.ReferenceEquals(this.TilknyttetAvField, value) != true)) {
                    this.TilknyttetAvField = value;
                    this.RaisePropertyChanged("TilknyttetAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person som har knyttet dokumentet til posten for møtedokumentet.
        /// Oppslag mot tabellen Personnavn.
        /// Tilsvarer NOARK4 feltet ML.TKAV
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilknyttetAvid {
            get {
                return this.TilknyttetAvidField;
            }
            set {
                if ((this.TilknyttetAvidField.Equals(value) != true)) {
                    this.TilknyttetAvidField = value;
                    this.RaisePropertyChanged("TilknyttetAvid");
                }
            }
        }
        
        /// <summary>
        /// Den dato dokumentet ble tilknyttet posten for møtedokumentet.
        /// Tilsvarer NOARK4 feltet ML.TKDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TilknyttetDato {
            get {
                return this.TilknyttetDatoField;
            }
            set {
                if ((this.TilknyttetDatoField.Equals(value) != true)) {
                    this.TilknyttetDatoField = value;
                    this.RaisePropertyChanged("TilknyttetDato");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder tilknytninger dokumenter har til journalposter og møtedokument.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dokumenttilknytning", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Dokumenttilknytning : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ForJournalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ForMoetedokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet DT.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom tilknytningsformen kan benyttes for journalen, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet DT.JOURNAL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ForJournal {
            get {
                return this.ForJournalField;
            }
            set {
                if ((this.ForJournalField.Equals(value) != true)) {
                    this.ForJournalField = value;
                    this.RaisePropertyChanged("ForJournal");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom tilknytningsformen kan benyttes for møtedokument, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet DT.MOTEDOK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ForMoetedokument {
            get {
                return this.ForMoetedokumentField;
            }
            set {
                if ((this.ForMoetedokumentField.Equals(value) != true)) {
                    this.ForMoetedokumentField = value;
                    this.RaisePropertyChanged("ForMoetedokument");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet DT.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder generelle attributter som er felles for alle behandlinger i alle utvalg for en politisk saksgang.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolitiskSaksgang", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class PolitiskSaksgang : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndeligVedtakDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HjemmelUoffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalpostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KlageadgangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LukketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PaabegyntDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SisteVedtakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype UtvalgssakstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtvalgssakstypeIdField;
        
        /// <summary>
        /// - Den dato endelig vedtak i saken ble fattet.
        /// Tilsvarer NOARK4 feltet SG.VEDTDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndeligVedtakDato {
            get {
                return this.EndeligVedtakDatoField;
            }
            set {
                if ((this.EndeligVedtakDatoField.Equals(value) != true)) {
                    this.EndeligVedtakDatoField = value;
                    this.RaisePropertyChanged("EndeligVedtakDato");
                }
            }
        }
        
        /// <summary>
        /// - Henvisning til offentlighetsloven og/eller annet lovverk.
        /// Må ha innhold dersom Lukket er valgt.
        /// Feltlengde: 70 tegn.
        /// Standardverdi fra sakstype på arkivsak dersom denne er angitt.
        /// Tilsvarer NOARK4 feltet SG.UOFF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HjemmelUoff {
            get {
                return this.HjemmelUoffField;
            }
            set {
                if ((object.ReferenceEquals(this.HjemmelUoffField, value) != true)) {
                    this.HjemmelUoffField = value;
                    this.RaisePropertyChanged("HjemmelUoff");
                }
            }
        }
        
        /// <summary>
        /// - Primærnøkkel for denne tabellen.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet SG.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// - Journalposten saksgangen er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalposten saksgangen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til journalposten som den politiske saksgangen er knyttet til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalpostId {
            get {
                return this.JournalpostIdField;
            }
            set {
                if ((this.JournalpostIdField.Equals(value) != true)) {
                    this.JournalpostIdField = value;
                    this.RaisePropertyChanged("JournalpostId");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom det er klageadgang på vedtak i denne saksgangen, ikke valgt ellers.
        /// Standardverdi fra sakstype på arkivsak dersom denne er angitt.
        /// Tilsvarer NOARK4 feltet SG.KLADGANG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Klageadgang {
            get {
                return this.KlageadgangField;
            }
            set {
                if ((this.KlageadgangField.Equals(value) != true)) {
                    this.KlageadgangField = value;
                    this.RaisePropertyChanged("Klageadgang");
                }
            }
        }
        
        /// <summary>
        /// - Valgt dersom saker tilknyttet denne saksgangen normalt skal behandles i lukket møtet, ikke valgt ellers.
        /// Standardverdi fra sakstype på arkivsak dersom denne er angitt.
        /// Tilsvarer NOARK4 feltet SG.LUKKET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Lukket {
            get {
                return this.LukketField;
            }
            set {
                if ((this.LukketField.Equals(value) != true)) {
                    this.LukketField = value;
                    this.RaisePropertyChanged("Lukket");
                }
            }
        }
        
        /// <summary>
        /// - Merknader knyttet til saksgangen.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet SG.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknader {
            get {
                return this.MerknaderField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknaderField, value) != true)) {
                    this.MerknaderField = value;
                    this.RaisePropertyChanged("Merknader");
                }
            }
        }
        
        /// <summary>
        /// - Den dato arbeidet med denne saksgangen ble startet.
        /// Standardverdi dagens dato, men skal kunne endres.
        /// Tilsvarer NOARK4 feltet SG.STARTDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PaabegyntDato {
            get {
                return this.PaabegyntDatoField;
            }
            set {
                if ((this.PaabegyntDatoField.Equals(value) != true)) {
                    this.PaabegyntDatoField = value;
                    this.RaisePropertyChanged("PaabegyntDato");
                }
            }
        }
        
        /// <summary>
        /// - Saken saksgangen er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken saksgangen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til den arkivsaken som utvalgssaken tilhører.
        /// Tilsvarer NOARK4 feltet SG.SAID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til det (foreløpig) siste vedtak som er fattet i saken.
        /// Skal oppdateres automatisk ved relevante statusendringer i behandlinger tilknyttet saken.
        /// Tilsvarer NOARK4 feltet SG.SISTEVEDT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SisteVedtak {
            get {
                return this.SisteVedtakField;
            }
            set {
                if ((this.SisteVedtakField.Equals(value) != true)) {
                    this.SisteVedtakField = value;
                    this.RaisePropertyChanged("SisteVedtak");
                }
            }
        }
        
        /// <summary>
        /// - Utvalgssakstype som saksgangen er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter om utvalgssakstype som saksgangen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype Utvalgssakstype {
            get {
                return this.UtvalgssakstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgssakstypeField, value) != true)) {
                    this.UtvalgssakstypeField = value;
                    this.RaisePropertyChanged("Utvalgssakstype");
                }
            }
        }
        
        /// <summary>
        /// - Referanse til utvalgssakstype.
        /// Oppslag mot tabellen utvalgssakstype.
        /// Standardverdi hentes fra sakstype på arkivsak dersom denne er angitt.
        /// Tilsvarer NOARK4 feltet SG.SAKSTYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtvalgssakstypeId {
            get {
                return this.UtvalgssakstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgssakstypeIdField, value) != true)) {
                    this.UtvalgssakstypeIdField = value;
                    this.RaisePropertyChanged("UtvalgssakstypeId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om tilleggskoder til bruk på journalposten.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tilleggskode", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Tilleggskode : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// - Betegnelse i klartekst.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet TL.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// - Kortkode i klartekst.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet TL.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver relasjoner mellom de enkelte behandlinger av utvalgssaker og de dokument som er utarbeidet som et ledd i behandlingen.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BehandlingDokument", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class BehandlingDokument : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse DokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DokumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumenttype DokumenttypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumenttypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.DokumenttypeForUtvalgsbehandling DokumenttypeUtvalgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumenttypeUtvalgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalpostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.StatusForMoetedokument StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgsbehandling UtvalgsbehandlingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtvalgsbehandlingIdField;
        
        /// <summary>
        /// Det elektroniske dokumentet i saksbehandlingssystemet.
        /// </summary>
        /// <value>Inneholder detaljer om det elektroniske dokumentet i saksbehandlingssystemet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse Dokument {
            get {
                return this.DokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentField, value) != true)) {
                    this.DokumentField = value;
                    this.RaisePropertyChanged("Dokument");
                }
            }
        }
        
        /// <summary>
        /// Referanse til det elektroniske dokumentet i saksbehandlingssystemet.
        /// Tilsvarer NOARK4 feltet BD.DOKID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DokumentId {
            get {
                return this.DokumentIdField;
            }
            set {
                if ((this.DokumentIdField.Equals(value) != true)) {
                    this.DokumentIdField = value;
                    this.RaisePropertyChanged("DokumentId");
                }
            }
        }
        
        /// <summary>
        /// Den dokumenttype som skal benyttes ved journalføring av dette dokumentet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver den dokumenttype som skal benyttes ved journalføring av dette dokumentet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumenttype Dokumenttype {
            get {
                return this.DokumenttypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeField, value) != true)) {
                    this.DokumenttypeField = value;
                    this.RaisePropertyChanged("Dokumenttype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den dokumenttype som skal benyttes ved journalføring av dette dokumentet.
        /// Oppslag mot tabellen Noark dokumenttype.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet BD.NDOKTYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DokumenttypeId {
            get {
                return this.DokumenttypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeIdField, value) != true)) {
                    this.DokumenttypeIdField = value;
                    this.RaisePropertyChanged("DokumenttypeId");
                }
            }
        }
        
        /// <summary>
        /// Type utvalgsdokument.
        /// </summary>
        /// <value>Inneholder attributter som beskriver type utvalgsdokument.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.DokumenttypeForUtvalgsbehandling DokumenttypeUtvalg {
            get {
                return this.DokumenttypeUtvalgField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeUtvalgField, value) != true)) {
                    this.DokumenttypeUtvalgField = value;
                    this.RaisePropertyChanged("DokumenttypeUtvalg");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hvilken type utvalgsdokument dette er.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet BD.DOKTYPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DokumenttypeUtvalgId {
            get {
                return this.DokumenttypeUtvalgIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumenttypeUtvalgIdField, value) != true)) {
                    this.DokumenttypeUtvalgIdField = value;
                    this.RaisePropertyChanged("DokumenttypeUtvalgId");
                }
            }
        }
        
        /// <summary>
        /// Journalposten som dokumentet er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om journalposten dokumentet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Referanse til journalpost som dokumentet er knyttet til.
        /// Tilsvarer NOARK4 feltet BD.JPID
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalpostId {
            get {
                return this.JournalpostIdField;
            }
            set {
                if ((this.JournalpostIdField.Equals(value) != true)) {
                    this.JournalpostIdField = value;
                    this.RaisePropertyChanged("JournalpostId");
                }
            }
        }
        
        /// <summary>
        /// Status for møtedokument.
        /// </summary>
        /// <value>Inneholder detaljer om status for møtedokument.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.StatusForMoetedokument Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        /// <summary>
        /// Referanse til status for møtedokument.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet BD.STATUS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusIdField, value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        /// <summary>
        /// Behandlingen av utvalgssaken som dokumentet er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om behandlingen av utvalgssaken som dokumentet er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgsbehandling Utvalgsbehandling {
            get {
                return this.UtvalgsbehandlingField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgsbehandlingField, value) != true)) {
                    this.UtvalgsbehandlingField = value;
                    this.RaisePropertyChanged("Utvalgsbehandling");
                }
            }
        }
        
        /// <summary>
        /// Referanse til behandlingen av utvalgssaken som dokumentet er knyttet til.
        /// Tilsvarer NOARK4 feltet BD.BEHID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtvalgsbehandlingId {
            get {
                return this.UtvalgsbehandlingIdField;
            }
            set {
                if ((this.UtvalgsbehandlingIdField.Equals(value) != true)) {
                    this.UtvalgsbehandlingIdField = value;
                    this.RaisePropertyChanged("UtvalgsbehandlingId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som beskriver de typer utvalg som benyttes.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utvalgstype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Utvalgstype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet UK.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet UK.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som er knyttet til en person i en bestemt rolle.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonRolle", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class PersonRolle : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdministrativEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn AktivtnavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Arkivdel ArkivdelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArkivdelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FraDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalenhet JournalenhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalenhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Rolle RolleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RolleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RolletittelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StandardRolleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StillingsbetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TilDatoField;
        
        /// <summary>
        /// Administrativ enhet personen er tilknyttet i denne rollen.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver administrativ enhet personen er tilknyttet i denne rollen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhet {
            get {
                return this.AdministrativEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativEnhetField, value) != true)) {
                    this.AdministrativEnhetField = value;
                    this.RaisePropertyChanged("AdministrativEnhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den administrative enhet personen er tilknyttet i denne rollen.
        /// Tilsvarer NOARK4 feltet PR.ADMID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdministrativEnhetId {
            get {
                return this.AdministrativEnhetIdField;
            }
            set {
                if ((this.AdministrativEnhetIdField.Equals(value) != true)) {
                    this.AdministrativEnhetIdField = value;
                    this.RaisePropertyChanged("AdministrativEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Nåværende navn for personen rollen gjelder.
        /// </summary>
        /// <value>Inneholder attributter om nåværende navn for personen rollen gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn Aktivtnavn {
            get {
                return this.AktivtnavnField;
            }
            set {
                if ((object.ReferenceEquals(this.AktivtnavnField, value) != true)) {
                    this.AktivtnavnField = value;
                    this.RaisePropertyChanged("Aktivtnavn");
                }
            }
        }
        
        /// <summary>
        /// Arkivdel personen vanligvis benytter i denne rollen.
        /// </summary>
        /// <value>Inneholder detaljer om arkivdelen personen vanligvis benytter i denne rollen. </value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Arkivdel Arkivdel {
            get {
                return this.ArkivdelField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivdelField, value) != true)) {
                    this.ArkivdelField = value;
                    this.RaisePropertyChanged("Arkivdel");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den arkivdel personen vanligvis benytter i denne rollen.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet PR.ARKDEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArkivdelId {
            get {
                return this.ArkivdelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ArkivdelIdField, value) != true)) {
                    this.ArkivdelIdField = value;
                    this.RaisePropertyChanged("ArkivdelId");
                }
            }
        }
        
        /// <summary>
        /// Den dato personen tiltrer rollen.
        /// Tilsvarer NOARK4 feltet PR.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FraDato {
            get {
                return this.FraDatoField;
            }
            set {
                if ((this.FraDatoField.Equals(value) != true)) {
                    this.FraDatoField = value;
                    this.RaisePropertyChanged("FraDato");
                }
            }
        }
        
        /// <summary>
        /// Primærnøkkelen i tabellen.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet PR.ID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Journalenhet personen skal være tilknyttet i denne rollen.
        /// </summary>
        /// <value>Inneholder attributter som beskriver journalenheten personen skal være tilknyttet i denne rollen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalenhet Journalenhet {
            get {
                return this.JournalenhetField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetField, value) != true)) {
                    this.JournalenhetField = value;
                    this.RaisePropertyChanged("Journalenhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den journalenhet personen skal være tilknyttet i denne rollen.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet PR.JENHET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalenhetId {
            get {
                return this.JournalenhetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetIdField, value) != true)) {
                    this.JournalenhetIdField = value;
                    this.RaisePropertyChanged("JournalenhetId");
                }
            }
        }
        
        /// <summary>
        /// Personen rollen gjelder.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen rollen gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        /// <summary>
        /// Referanse til personen koblingen gjelder.
        /// Tilsvarer NOARK4 feltet PR.PEID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        /// <summary>
        /// Rollen koblingen gjelder.
        /// </summary>
        /// <value>Inneholder attributter som beskriver rollen koblingen gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Rolle Rolle {
            get {
                return this.RolleField;
            }
            set {
                if ((object.ReferenceEquals(this.RolleField, value) != true)) {
                    this.RolleField = value;
                    this.RaisePropertyChanged("Rolle");
                }
            }
        }
        
        /// <summary>
        /// Referanse til rollen koblingen gjelder.
        /// Tilsvarer NOARK4 feltet PR.ROLLEID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RolleId {
            get {
                return this.RolleIdField;
            }
            set {
                if ((this.RolleIdField.Equals(value) != true)) {
                    this.RolleIdField = value;
                    this.RaisePropertyChanged("RolleId");
                }
            }
        }
        
        /// <summary>
        /// Tittel som benyttes av personen i denne rollen.
        /// Feltlengde: 30 tegn.
        /// Tilsvarer NOARK4 feltet PR.TITTEL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rolletittel {
            get {
                return this.RolletittelField;
            }
            set {
                if ((object.ReferenceEquals(this.RolletittelField, value) != true)) {
                    this.RolletittelField = value;
                    this.RaisePropertyChanged("Rolletittel");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom dette er den mest sentrale rollen ("Hovedrollen") til personen, ikke valgt ellers.
        /// En og bare en av de rollene en person har, skal være valgt her.
        /// Tilsvarer NOARK4 feltet PR.STDROLLE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> StandardRolle {
            get {
                return this.StandardRolleField;
            }
            set {
                if ((this.StandardRolleField.Equals(value) != true)) {
                    this.StandardRolleField = value;
                    this.RaisePropertyChanged("StandardRolle");
                }
            }
        }
        
        /// <summary>
        /// Stillingsbetegnelse for denne rollen.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stillingsbetegnelse {
            get {
                return this.StillingsbetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.StillingsbetegnelseField, value) != true)) {
                    this.StillingsbetegnelseField = value;
                    this.RaisePropertyChanged("Stillingsbetegnelse");
                }
            }
        }
        
        /// <summary>
        /// Den dato personen fratrer rollen.
        /// Tilsvarer NOARK4 feltet PR.TILDATO
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TilDato {
            get {
                return this.TilDatoField;
            }
            set {
                if ((this.TilDatoField.Equals(value) != true)) {
                    this.TilDatoField = value;
                    this.RaisePropertyChanged("TilDato");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder attributter som benyttes for å navngi de forskjellige typer enheter som benyttes i administrativ inndeling.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enhetstype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Enhetstype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LedetekstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Enhetstype UnderlagtEnhetstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnderlagtEnhetstypeIdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// Tilsvarer NOARK4 feltet ET.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet ET.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Ledetekst som kan benyttes når enheter av denne typen skal skrives ut eller presenteres.
        /// Feltlengde: 20 tegn.
        /// Tilsvarer NOARK4 feltet ET.LTEKST.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ledetekst {
            get {
                return this.LedetekstField;
            }
            set {
                if ((object.ReferenceEquals(this.LedetekstField, value) != true)) {
                    this.LedetekstField = value;
                    this.RaisePropertyChanged("Ledetekst");
                }
            }
        }
        
        /// <summary>
        /// Enhetstypen denne enhetstypen eventuelt er underlagt.
        /// </summary>
        /// <value>Inneholder attributter som beskriver Enhetstypen denne enhetstypen eventuelt er underlagt.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Enhetstype UnderlagtEnhetstype {
            get {
                return this.UnderlagtEnhetstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UnderlagtEnhetstypeField, value) != true)) {
                    this.UnderlagtEnhetstypeField = value;
                    this.RaisePropertyChanged("UnderlagtEnhetstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den enhetstypen denne enhetstypen eventuelt er underlagt.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Enhetstype.
        /// Tilsvarer NOARK4 feltet ET.UNDEREN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnderlagtEnhetstypeId {
            get {
                return this.UnderlagtEnhetstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UnderlagtEnhetstypeIdField, value) != true)) {
                    this.UnderlagtEnhetstypeIdField = value;
                    this.RaisePropertyChanged("UnderlagtEnhetstypeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Adressegruppemedlem", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Adressegruppemedlem : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Adresseregister AdressegruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdressegruppeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Adresseregister MedlemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedlemIdField;
        
        /// <summary>
        /// Adressegruppen.
        /// </summary>
        /// <value>Inneholder attributter som beskriver adressegruppen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Adresseregister Adressegruppe {
            get {
                return this.AdressegruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressegruppeField, value) != true)) {
                    this.AdressegruppeField = value;
                    this.RaisePropertyChanged("Adressegruppe");
                }
            }
        }
        
        /// <summary>
        /// Referanse til adressegruppen.
        /// Tilsvarer NOARK4 feltet MG.GRID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdressegruppeId {
            get {
                return this.AdressegruppeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressegruppeIdField, value) != true)) {
                    this.AdressegruppeIdField = value;
                    this.RaisePropertyChanged("AdressegruppeId");
                }
            }
        }
        
        /// <summary>
        /// Adressaten som inngår i adressegruppen.
        /// </summary>
        /// <value>Inneholder attributter som beskriver adressaten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Adresseregister Medlem {
            get {
                return this.MedlemField;
            }
            set {
                if ((object.ReferenceEquals(this.MedlemField, value) != true)) {
                    this.MedlemField = value;
                    this.RaisePropertyChanged("Medlem");
                }
            }
        }
        
        /// <summary>
        /// Referanse til adressaten som inngår i adressegruppen.
        /// Tilsvarer NOARK4 feltet MG.MEDLID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedlemId {
            get {
                return this.MedlemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MedlemIdField, value) != true)) {
                    this.MedlemIdField = value;
                    this.RaisePropertyChanged("MedlemId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AktivitetAvsenderMottaker", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AktivitetAvsenderMottaker : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdministrativEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Adresseregister AdressatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdressatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Aktivitet AktivitetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AktivitetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BehandlingsansvarligField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPostAdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Forsendelsesmaate ForsendelsesmaateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForsendelsesmaateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Forsendelsesstatus ForsendelsesstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForsendelsesstatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InnholdstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalenhet JournalenhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalenhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KontaktField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KopimottakerMedavsenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KortnavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostadresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoststedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferanseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RekkefoelgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn SaksbehandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaksbehandlerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtlandsadresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalg UtvalgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtvalgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype UtvalgssakstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtvalgssakstypeIdField;
        
        /// <summary>
        /// Saksbehandlerens administrative enhet.
        /// For eksterne avsendere og mottakere benyttes alltid fast verdi 0.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saksbehandlerens administrative enhet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhet {
            get {
                return this.AdministrativEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativEnhetField, value) != true)) {
                    this.AdministrativEnhetField = value;
                    this.RaisePropertyChanged("AdministrativEnhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til saksbehandlerens administrative enhet.
        /// Oppslag mot tabellen Administrativ inndeling.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdministrativEnhetId {
            get {
                return this.AdministrativEnhetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativEnhetIdField, value) != true)) {
                    this.AdministrativEnhetIdField = value;
                    this.RaisePropertyChanged("AdministrativEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Addressat i adresseregisteret.
        /// </summary>
        /// <value>Inneholder attributter som beskriver adressaten som avsender/mottaker er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Adresseregister Adressat {
            get {
                return this.AdressatField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressatField, value) != true)) {
                    this.AdressatField = value;
                    this.RaisePropertyChanged("Adressat");
                }
            }
        }
        
        /// <summary>
        /// Henvisning til adressat i adresseregister.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdressatId {
            get {
                return this.AdressatIdField;
            }
            set {
                if ((this.AdressatIdField.Equals(value) != true)) {
                    this.AdressatIdField = value;
                    this.RaisePropertyChanged("AdressatId");
                }
            }
        }
        
        /// <summary>
        /// Aktiviteten avsender/mottaker er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver aktiviteten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Aktivitet Aktivitet {
            get {
                return this.AktivitetField;
            }
            set {
                if ((object.ReferenceEquals(this.AktivitetField, value) != true)) {
                    this.AktivitetField = value;
                    this.RaisePropertyChanged("Aktivitet");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til aktivitet. Oppdateres automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AktivitetId {
            get {
                return this.AktivitetIdField;
            }
            set {
                if ((this.AktivitetIdField.Equals(value) != true)) {
                    this.AktivitetIdField = value;
                    this.RaisePropertyChanged("AktivitetId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom det primære ansvar for behandlingen av dokumentet ligger hos den administrative enhet
        /// som er angitt på denne posten, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Behandlingsansvarlig {
            get {
                return this.BehandlingsansvarligField;
            }
            set {
                if ((this.BehandlingsansvarligField.Equals(value) != true)) {
                    this.BehandlingsansvarligField = value;
                    this.RaisePropertyChanged("Behandlingsansvarlig");
                }
            }
        }
        
        /// <summary>
        /// E-post adresse.
        /// Feltlengde: 120 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPostAdresse {
            get {
                return this.EPostAdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.EPostAdresseField, value) != true)) {
                    this.EPostAdresseField = value;
                    this.RaisePropertyChanged("EPostAdresse");
                }
            }
        }
        
        /// <summary>
        /// Telefaksnummer.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Faks {
            get {
                return this.FaksField;
            }
            set {
                if ((object.ReferenceEquals(this.FaksField, value) != true)) {
                    this.FaksField = value;
                    this.RaisePropertyChanged("Faks");
                }
            }
        }
        
        /// <summary>
        /// Forsendelsesmåte.
        /// </summary>
        /// <value>Inneholder attributter som beskriver forsendelsesmåten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Forsendelsesmaate Forsendelsesmaate {
            get {
                return this.ForsendelsesmaateField;
            }
            set {
                if ((object.ReferenceEquals(this.ForsendelsesmaateField, value) != true)) {
                    this.ForsendelsesmaateField = value;
                    this.RaisePropertyChanged("Forsendelsesmaate");
                }
            }
        }
        
        /// <summary>
        /// Referanse til forsendelsesmåte; papir, telefaks, e-post etc.
        /// Oppslag mot tabellen Forsendelsesmåte.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForsendelsesmaateId {
            get {
                return this.ForsendelsesmaateIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ForsendelsesmaateIdField, value) != true)) {
                    this.ForsendelsesmaateIdField = value;
                    this.RaisePropertyChanged("ForsendelsesmaateId");
                }
            }
        }
        
        /// <summary>
        /// Forsendelsesstatus.
        /// </summary>
        /// <value>Inneholder attributter som beskriver forsendelsesstatus.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Forsendelsesstatus Forsendelsesstatus {
            get {
                return this.ForsendelsesstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ForsendelsesstatusField, value) != true)) {
                    this.ForsendelsesstatusField = value;
                    this.RaisePropertyChanged("Forsendelsesstatus");
                }
            }
        }
        
        /// <summary>
        /// Referanse til forsendelsesstatus. Benyttes for dokument som er sendt eller mottatt elektronisk.
        /// Oppslag mot tabellen Forsendelsesstatus.
        /// Feltlengde: 2 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForsendelsesstatusId {
            get {
                return this.ForsendelsesstatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ForsendelsesstatusIdField, value) != true)) {
                    this.ForsendelsesstatusIdField = value;
                    this.RaisePropertyChanged("ForsendelsesstatusId");
                }
            }
        }
        
        /// <summary>
        /// Unik id.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Verdi 0 hvis posten inneholder en avsender, -1 hvis den inneholder en mottaker.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Innholdstype {
            get {
                return this.InnholdstypeField;
            }
            set {
                if ((this.InnholdstypeField.Equals(value) != true)) {
                    this.InnholdstypeField = value;
                    this.RaisePropertyChanged("Innholdstype");
                }
            }
        }
        
        /// <summary>
        /// Saksbehandlers journalenhet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver saksbehandlers journalenhet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalenhet Journalenhet {
            get {
                return this.JournalenhetField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetField, value) != true)) {
                    this.JournalenhetField = value;
                    this.RaisePropertyChanged("Journalenhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til saksbehandlers journalenhet.
        /// (Interne avsendere og mottakere kan tilhøre forskjellige journalenheter.)
        /// Oppslag mot tabellen Journalenhet.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalenhetId {
            get {
                return this.JournalenhetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetIdField, value) != true)) {
                    this.JournalenhetIdField = value;
                    this.RaisePropertyChanged("JournalenhetId");
                }
            }
        }
        
        /// <summary>
        /// Kontaktperson.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kontakt {
            get {
                return this.KontaktField;
            }
            set {
                if ((object.ReferenceEquals(this.KontaktField, value) != true)) {
                    this.KontaktField = value;
                    this.RaisePropertyChanged("Kontakt");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom mottakeren er en kopimottaker eller dersom avsenderen er en medavsender,
        /// ikke valgt ellers. Minst en mottaker og kun en avsender skal ikke være kopimottaker.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KopimottakerMedavsender {
            get {
                return this.KopimottakerMedavsenderField;
            }
            set {
                if ((this.KopimottakerMedavsenderField.Equals(value) != true)) {
                    this.KopimottakerMedavsenderField = value;
                    this.RaisePropertyChanged("KopimottakerMedavsender");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 15 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kortnavn {
            get {
                return this.KortnavnField;
            }
            set {
                if ((object.ReferenceEquals(this.KortnavnField, value) != true)) {
                    this.KortnavnField = value;
                    this.RaisePropertyChanged("Kortnavn");
                }
            }
        }
        
        /// <summary>
        /// Mottakers navn.
        /// Må være angitt for eksterne mottakere ved dokumenttype U.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Navn {
            get {
                return this.NavnField;
            }
            set {
                if ((object.ReferenceEquals(this.NavnField, value) != true)) {
                    this.NavnField = value;
                    this.RaisePropertyChanged("Navn");
                }
            }
        }
        
        /// <summary>
        /// Postadresse.
        /// Feltlengde: 120 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postadresse {
            get {
                return this.PostadresseField;
            }
            set {
                if ((object.ReferenceEquals(this.PostadresseField, value) != true)) {
                    this.PostadresseField = value;
                    this.RaisePropertyChanged("Postadresse");
                }
            }
        }
        
        /// <summary>
        /// Postnummer.
        /// Feltlengde: 5 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postnr {
            get {
                return this.PostnrField;
            }
            set {
                if ((object.ReferenceEquals(this.PostnrField, value) != true)) {
                    this.PostnrField = value;
                    this.RaisePropertyChanged("Postnr");
                }
            }
        }
        
        /// <summary>
        /// Poststed.
        /// Feltlengde: 60 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Poststed {
            get {
                return this.PoststedField;
            }
            set {
                if ((object.ReferenceEquals(this.PoststedField, value) != true)) {
                    this.PoststedField = value;
                    this.RaisePropertyChanged("Poststed");
                }
            }
        }
        
        /// <summary>
        /// Referanse.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Referanse {
            get {
                return this.ReferanseField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferanseField, value) != true)) {
                    this.ReferanseField = value;
                    this.RaisePropertyChanged("Referanse");
                }
            }
        }
        
        /// <summary>
        /// Rekkefølge i det behandlingsforløpet saken går gjennom i de forskjellige utvalg.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rekkefoelge {
            get {
                return this.RekkefoelgeField;
            }
            set {
                if ((this.RekkefoelgeField.Equals(value) != true)) {
                    this.RekkefoelgeField = value;
                    this.RaisePropertyChanged("Rekkefoelge");
                }
            }
        }
        
        /// <summary>
        /// Personen som er saksbehandler.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som er saksbehandler.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn Saksbehandler {
            get {
                return this.SaksbehandlerField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksbehandlerField, value) != true)) {
                    this.SaksbehandlerField = value;
                    this.RaisePropertyChanged("Saksbehandler");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person som er saksbehandler.
        /// For eksterne avsendere og mottakere benyttes alltid fast verdi 0.
        /// Oppslag mot tabellen Personnavn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SaksbehandlerId {
            get {
                return this.SaksbehandlerIdField;
            }
            set {
                if ((this.SaksbehandlerIdField.Equals(value) != true)) {
                    this.SaksbehandlerIdField = value;
                    this.RaisePropertyChanged("SaksbehandlerId");
                }
            }
        }
        
        /// <summary>
        /// Utlandsadresse - erstatter Postnr og Poststed for adresser i utlandet.
        /// Feltlengde: 120 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Utlandsadresse {
            get {
                return this.UtlandsadresseField;
            }
            set {
                if ((object.ReferenceEquals(this.UtlandsadresseField, value) != true)) {
                    this.UtlandsadresseField = value;
                    this.RaisePropertyChanged("Utlandsadresse");
                }
            }
        }
        
        /// <summary>
        /// Utvalget som behandler saken.
        /// </summary>
        /// <value>Inneholder detaljer om utvalget som behandler saken.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalg Utvalg {
            get {
                return this.UtvalgField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgField, value) != true)) {
                    this.UtvalgField = value;
                    this.RaisePropertyChanged("Utvalg");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalget som behandler saken.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtvalgId {
            get {
                return this.UtvalgIdField;
            }
            set {
                if ((this.UtvalgIdField.Equals(value) != true)) {
                    this.UtvalgIdField = value;
                    this.RaisePropertyChanged("UtvalgId");
                }
            }
        }
        
        /// <summary>
        /// Utvalgssakstype som utvalgsbehandlingen er knyttet til.
        /// </summary>
        /// <value>Inneholder attributter om utvalgssakstype som utvalgsbehandlingen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalgssakstype Utvalgssakstype {
            get {
                return this.UtvalgssakstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgssakstypeField, value) != true)) {
                    this.UtvalgssakstypeField = value;
                    this.RaisePropertyChanged("Utvalgssakstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalgssakstype som utvalgsbehandlingen er knyttet til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtvalgssakstypeId {
            get {
                return this.UtvalgssakstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgssakstypeIdField, value) != true)) {
                    this.UtvalgssakstypeIdField = value;
                    this.RaisePropertyChanged("UtvalgssakstypeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AktivitetGrenpunkt", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AktivitetGrenpunkt : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Aktivitet AktivitetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AktivitetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Aktivitet AktivitetsmalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AktivitetsmalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObjektTypeField;
        
        /// <summary>
        /// Aktiviteten  som inneholder grenpunktet.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver aktiviteten som inneholder grenpunktet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Aktivitet Aktivitet {
            get {
                return this.AktivitetField;
            }
            set {
                if ((object.ReferenceEquals(this.AktivitetField, value) != true)) {
                    this.AktivitetField = value;
                    this.RaisePropertyChanged("Aktivitet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til aktivitet som inneholder grenpunktet.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AktivitetId {
            get {
                return this.AktivitetIdField;
            }
            set {
                if ((this.AktivitetIdField.Equals(value) != true)) {
                    this.AktivitetIdField = value;
                    this.RaisePropertyChanged("AktivitetId");
                }
            }
        }
        
        /// <summary>
        /// Aktivitetsmal som kan velges.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver aktivitetsmal som kan velges.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Aktivitet Aktivitetsmal {
            get {
                return this.AktivitetsmalField;
            }
            set {
                if ((object.ReferenceEquals(this.AktivitetsmalField, value) != true)) {
                    this.AktivitetsmalField = value;
                    this.RaisePropertyChanged("Aktivitetsmal");
                }
            }
        }
        
        /// <summary>
        /// Referanse til aktivitetsmal som kan velges.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AktivitetsmalId {
            get {
                return this.AktivitetsmalIdField;
            }
            set {
                if ((this.AktivitetsmalIdField.Equals(value) != true)) {
                    this.AktivitetsmalIdField = value;
                    this.RaisePropertyChanged("AktivitetsmalId");
                }
            }
        }
        
        /// <summary>
        /// Objekttype. Hva slags type objekt grenpunktet er knyttet til.
        /// Lovlige verdier: 0 (sak), 1 (journalpost)
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ObjektType {
            get {
                return this.ObjektTypeField;
            }
            set {
                if ((this.ObjektTypeField.Equals(value) != true)) {
                    this.ObjektTypeField = value;
                    this.RaisePropertyChanged("ObjektType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnsettelsesakKompetanse", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AnsettelsesakKompetanse : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Diverse1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Diverse2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FratidspunktField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GodkjentVarighetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KompetansetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RekkefoelgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakSoeker SoekerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SoekerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TiltidspunktField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VirksomhetField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Diverse tilleggsinformasjon del 1.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diverse1 {
            get {
                return this.Diverse1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Diverse1Field, value) != true)) {
                    this.Diverse1Field = value;
                    this.RaisePropertyChanged("Diverse1");
                }
            }
        }
        
        /// <summary>
        /// Diverse tilleggsinformasjon del 2.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diverse2 {
            get {
                return this.Diverse2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Diverse2Field, value) != true)) {
                    this.Diverse2Field = value;
                    this.RaisePropertyChanged("Diverse2");
                }
            }
        }
        
        /// <summary>
        /// Angivelse av starttidspunktet for når kompetansen ble ervervet.
        /// Feltlengde: 50 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fratidspunkt {
            get {
                return this.FratidspunktField;
            }
            set {
                if ((object.ReferenceEquals(this.FratidspunktField, value) != true)) {
                    this.FratidspunktField = value;
                    this.RaisePropertyChanged("Fratidspunkt");
                }
            }
        }
        
        /// <summary>
        /// Godkjent varighet angitt i antall måneder.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GodkjentVarighet {
            get {
                return this.GodkjentVarighetField;
            }
            set {
                if ((this.GodkjentVarighetField.Equals(value) != true)) {
                    this.GodkjentVarighetField = value;
                    this.RaisePropertyChanged("GodkjentVarighet");
                }
            }
        }
        
        /// <summary>
        /// Unik nøkkel til kompetanse. Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Kompetansetype.
        /// Obligatorisk.
        /// Feltlengde: 1 tegn.
        /// Lovlige verdier: U - utdannelse, Y - yrkespraksis, Z - relevante kurs
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kompetansetype {
            get {
                return this.KompetansetypeField;
            }
            set {
                if ((object.ReferenceEquals(this.KompetansetypeField, value) != true)) {
                    this.KompetansetypeField = value;
                    this.RaisePropertyChanged("Kompetansetype");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Intern rekkefølge på kompetanse for søkeren.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rekkefoelge {
            get {
                return this.RekkefoelgeField;
            }
            set {
                if ((this.RekkefoelgeField.Equals(value) != true)) {
                    this.RekkefoelgeField = value;
                    this.RaisePropertyChanged("Rekkefoelge");
                }
            }
        }
        
        /// <summary>
        /// Søkeren kompetansen er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver søkeren kompetansen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AnsettelsesakSoeker Soeker {
            get {
                return this.SoekerField;
            }
            set {
                if ((object.ReferenceEquals(this.SoekerField, value) != true)) {
                    this.SoekerField = value;
                    this.RaisePropertyChanged("Soeker");
                }
            }
        }
        
        /// <summary>
        /// Referanse til søkeren kompetansen er knyttet til.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SoekerId {
            get {
                return this.SoekerIdField;
            }
            set {
                if ((this.SoekerIdField.Equals(value) != true)) {
                    this.SoekerIdField = value;
                    this.RaisePropertyChanged("SoekerId");
                }
            }
        }
        
        /// <summary>
        /// Angivelse av sluttidspunktet for når kompetansen ble ervervet.
        /// Feltlengde: 50 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tiltidspunkt {
            get {
                return this.TiltidspunktField;
            }
            set {
                if ((object.ReferenceEquals(this.TiltidspunktField, value) != true)) {
                    this.TiltidspunktField = value;
                    this.RaisePropertyChanged("Tiltidspunkt");
                }
            }
        }
        
        /// <summary>
        /// Virksomhet, selskap eller institusjon der kompetansen er ervervet.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Virksomhet {
            get {
                return this.VirksomhetField;
            }
            set {
                if ((object.ReferenceEquals(this.VirksomhetField, value) != true)) {
                    this.VirksomhetField = value;
                    this.RaisePropertyChanged("Virksomhet");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutorisasjonInnenAdministrativEnhet", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class AutorisasjonInnenAdministrativEnhet : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdministrativEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person AutorisasjonOpphevetAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AutorisasjonOpphevetAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person AutorisertAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AutorisertAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FradatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TildatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        /// <summary>
        /// Administrativ enhet som autorisasjonen gjelder for.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver administrativ enhet som autoriseringen gjelder for.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhet {
            get {
                return this.AdministrativEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativEnhetField, value) != true)) {
                    this.AdministrativEnhetField = value;
                    this.RaisePropertyChanged("AdministrativEnhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til en administrative enhet som autorisasjonen gjelder for.
        /// Oppslag mot tabellen Administrativ inndeling.
        /// Tilsvarer NOARK4 feltet PT.ADMID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdministrativEnhetId {
            get {
                return this.AdministrativEnhetIdField;
            }
            set {
                if ((this.AdministrativEnhetIdField.Equals(value) != true)) {
                    this.AdministrativEnhetIdField = value;
                    this.RaisePropertyChanged("AdministrativEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Personen som har opphevet autoriseringen for denne personen for denne tilgangskoden.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som har opphevet autoriseringen for denne personen for denne tilgangskoden.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person AutorisasjonOpphevetAv {
            get {
                return this.AutorisasjonOpphevetAvField;
            }
            set {
                if ((object.ReferenceEquals(this.AutorisasjonOpphevetAvField, value) != true)) {
                    this.AutorisasjonOpphevetAvField = value;
                    this.RaisePropertyChanged("AutorisasjonOpphevetAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den personen som opphever (dvs angir Tildato) en autorisering som i utgangspunktet
        /// ikke var tidsavgrenset, eller hvor autorisasjonen går ut en gang i framtiden.
        /// Tilsvarer NOARK4 feltet PT.AUTOPPAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AutorisasjonOpphevetAvid {
            get {
                return this.AutorisasjonOpphevetAvidField;
            }
            set {
                if ((this.AutorisasjonOpphevetAvidField.Equals(value) != true)) {
                    this.AutorisasjonOpphevetAvidField = value;
                    this.RaisePropertyChanged("AutorisasjonOpphevetAvid");
                }
            }
        }
        
        /// <summary>
        /// Personen som autoriserte personen for denne tilgangskoden.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som autoriserte personen for denne tilgangskoden.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person AutorisertAv {
            get {
                return this.AutorisertAvField;
            }
            set {
                if ((object.ReferenceEquals(this.AutorisertAvField, value) != true)) {
                    this.AutorisertAvField = value;
                    this.RaisePropertyChanged("AutorisertAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den personen som autoriserte personen. Oppdateres automatisk ved autorisering.
        /// Tilsvarer NOARK4 feltet PT.AUTAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AutorisertAvid {
            get {
                return this.AutorisertAvidField;
            }
            set {
                if ((this.AutorisertAvidField.Equals(value) != true)) {
                    this.AutorisertAvidField = value;
                    this.RaisePropertyChanged("AutorisertAvid");
                }
            }
        }
        
        /// <summary>
        /// Den dato tilgangen gjelder fra.
        /// Tilsvarer NOARK4 feltet PT.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Fradato {
            get {
                return this.FradatoField;
            }
            set {
                if ((this.FradatoField.Equals(value) != true)) {
                    this.FradatoField = value;
                    this.RaisePropertyChanged("Fradato");
                }
            }
        }
        
        /// <summary>
        /// Personen som autoriseringen gjelder for.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som autorisasjonen gjelder for.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        /// <summary>
        /// Referanse til person som autorisasjonen gjelder for.
        /// Tilsvarer NOARK4 feltet PT.PEID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        /// <summary>
        /// Den dato tilgangen gjelder til. Tomt attributt angir at tilgangen ikke er tidsbegrenset.
        /// Tilsvarer NOARK4 feltet PT.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Tildato {
            get {
                return this.TildatoField;
            }
            set {
                if ((this.TildatoField.Equals(value) != true)) {
                    this.TildatoField = value;
                    this.RaisePropertyChanged("Tildato");
                }
            }
        }
        
        /// <summary>
        /// Tilgangskoden som autoriseringen gjelder.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver tilgangskoden som autoriseringen gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den tilgangskoden som autoriseringen er knyttet opp mot.
        /// Oppslag mot tabellen Tilgangskode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet PT.TGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DelingsakKartforretning", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class DelingsakKartforretning : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalAarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JournalSekvensnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> KartforretningDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KommunenummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MaalebrevSendtDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaalebrevSendtTilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaalebrevsnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MidlertidigKartforretningDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NyAdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NyttGbnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NyttKommunenummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NyttPostnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NyttPoststedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpprinneligAdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpprinneligGbnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpprinneligPostnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpprinneligPoststedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParsellnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.DelingsakRekvisisjon RekvisisjonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RekvisisjonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TinglysningReturnertDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TinglysningSendtDatoField;
        
        /// <summary>
        /// Unik nøkkel til kartforretning. Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Årstall for journalnummer kartforretning.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalAar {
            get {
                return this.JournalAarField;
            }
            set {
                if ((this.JournalAarField.Equals(value) != true)) {
                    this.JournalAarField = value;
                    this.RaisePropertyChanged("JournalAar");
                }
            }
        }
        
        /// <summary>
        /// Sekvensnummer for journalnummer kartforretning.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JournalSekvensnummer {
            get {
                return this.JournalSekvensnummerField;
            }
            set {
                if ((this.JournalSekvensnummerField.Equals(value) != true)) {
                    this.JournalSekvensnummerField = value;
                    this.RaisePropertyChanged("JournalSekvensnummer");
                }
            }
        }
        
        /// <summary>
        /// Dato for kartforretningen.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> KartforretningDato {
            get {
                return this.KartforretningDatoField;
            }
            set {
                if ((this.KartforretningDatoField.Equals(value) != true)) {
                    this.KartforretningDatoField = value;
                    this.RaisePropertyChanged("KartforretningDato");
                }
            }
        }
        
        /// <summary>
        /// Kommunenummer.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kommunenummer {
            get {
                return this.KommunenummerField;
            }
            set {
                if ((object.ReferenceEquals(this.KommunenummerField, value) != true)) {
                    this.KommunenummerField = value;
                    this.RaisePropertyChanged("Kommunenummer");
                }
            }
        }
        
        /// <summary>
        /// Dato for når målebrev er sendt.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MaalebrevSendtDato {
            get {
                return this.MaalebrevSendtDatoField;
            }
            set {
                if ((this.MaalebrevSendtDatoField.Equals(value) != true)) {
                    this.MaalebrevSendtDatoField = value;
                    this.RaisePropertyChanged("MaalebrevSendtDato");
                }
            }
        }
        
        /// <summary>
        /// Navn på den som målebrev er sendt til.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaalebrevSendtTil {
            get {
                return this.MaalebrevSendtTilField;
            }
            set {
                if ((object.ReferenceEquals(this.MaalebrevSendtTilField, value) != true)) {
                    this.MaalebrevSendtTilField = value;
                    this.RaisePropertyChanged("MaalebrevSendtTil");
                }
            }
        }
        
        /// <summary>
        /// Målebrevsnummer.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Maalebrevsnummer {
            get {
                return this.MaalebrevsnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.MaalebrevsnummerField, value) != true)) {
                    this.MaalebrevsnummerField = value;
                    this.RaisePropertyChanged("Maalebrevsnummer");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Dato for midlertidig kartforretningen.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MidlertidigKartforretningDato {
            get {
                return this.MidlertidigKartforretningDatoField;
            }
            set {
                if ((this.MidlertidigKartforretningDatoField.Equals(value) != true)) {
                    this.MidlertidigKartforretningDatoField = value;
                    this.RaisePropertyChanged("MidlertidigKartforretningDato");
                }
            }
        }
        
        /// <summary>
        /// Adresse til ny eiendom
        /// Feltlengde: 120 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NyAdresse {
            get {
                return this.NyAdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.NyAdresseField, value) != true)) {
                    this.NyAdresseField = value;
                    this.RaisePropertyChanged("NyAdresse");
                }
            }
        }
        
        /// <summary>
        /// Gårds- og bruksnummer til ny eiendom.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NyttGbnr {
            get {
                return this.NyttGbnrField;
            }
            set {
                if ((object.ReferenceEquals(this.NyttGbnrField, value) != true)) {
                    this.NyttGbnrField = value;
                    this.RaisePropertyChanged("NyttGbnr");
                }
            }
        }
        
        /// <summary>
        /// Kommunenummer for ny eiendom.
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NyttKommunenummer {
            get {
                return this.NyttKommunenummerField;
            }
            set {
                if ((object.ReferenceEquals(this.NyttKommunenummerField, value) != true)) {
                    this.NyttKommunenummerField = value;
                    this.RaisePropertyChanged("NyttKommunenummer");
                }
            }
        }
        
        /// <summary>
        /// Postnummer til ny eiendom.
        /// Feltlengde: 5 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NyttPostnummer {
            get {
                return this.NyttPostnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.NyttPostnummerField, value) != true)) {
                    this.NyttPostnummerField = value;
                    this.RaisePropertyChanged("NyttPostnummer");
                }
            }
        }
        
        /// <summary>
        /// Poststed til ny eiendom.
        /// Feltlengde: 60 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NyttPoststed {
            get {
                return this.NyttPoststedField;
            }
            set {
                if ((object.ReferenceEquals(this.NyttPoststedField, value) != true)) {
                    this.NyttPoststedField = value;
                    this.RaisePropertyChanged("NyttPoststed");
                }
            }
        }
        
        /// <summary>
        /// Adresse til opprinnelig eiendom
        /// Feltlengde: 120 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpprinneligAdresse {
            get {
                return this.OpprinneligAdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.OpprinneligAdresseField, value) != true)) {
                    this.OpprinneligAdresseField = value;
                    this.RaisePropertyChanged("OpprinneligAdresse");
                }
            }
        }
        
        /// <summary>
        /// Gårds- og bruksnummer til opprinnelig eiendom.
        /// Feltlengde: 30 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpprinneligGbnr {
            get {
                return this.OpprinneligGbnrField;
            }
            set {
                if ((object.ReferenceEquals(this.OpprinneligGbnrField, value) != true)) {
                    this.OpprinneligGbnrField = value;
                    this.RaisePropertyChanged("OpprinneligGbnr");
                }
            }
        }
        
        /// <summary>
        /// Postnummer til opprinnelig eiendom.
        /// Feltlengde: 5 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpprinneligPostnummer {
            get {
                return this.OpprinneligPostnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.OpprinneligPostnummerField, value) != true)) {
                    this.OpprinneligPostnummerField = value;
                    this.RaisePropertyChanged("OpprinneligPostnummer");
                }
            }
        }
        
        /// <summary>
        /// Poststed til opprinnelig eiendom.
        /// Feltlengde: 60 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpprinneligPoststed {
            get {
                return this.OpprinneligPoststedField;
            }
            set {
                if ((object.ReferenceEquals(this.OpprinneligPoststedField, value) != true)) {
                    this.OpprinneligPoststedField = value;
                    this.RaisePropertyChanged("OpprinneligPoststed");
                }
            }
        }
        
        /// <summary>
        /// Parsellnummer.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parsellnummer {
            get {
                return this.ParsellnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.ParsellnummerField, value) != true)) {
                    this.ParsellnummerField = value;
                    this.RaisePropertyChanged("Parsellnummer");
                }
            }
        }
        
        /// <summary>
        /// Rekvisisjonen kartforretning tilhører (delingsak).
        /// </summary>
        /// <value>Inneholder informasjon som beskriver rekvisisjonen kartforretning tilhører (delingsak).</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.DelingsakRekvisisjon Rekvisisjon {
            get {
                return this.RekvisisjonField;
            }
            set {
                if ((object.ReferenceEquals(this.RekvisisjonField, value) != true)) {
                    this.RekvisisjonField = value;
                    this.RaisePropertyChanged("Rekvisisjon");
                }
            }
        }
        
        /// <summary>
        /// Referanse til rekvisisjonen kartforretning tilhører (delingsak).
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RekvisisjonId {
            get {
                return this.RekvisisjonIdField;
            }
            set {
                if ((this.RekvisisjonIdField.Equals(value) != true)) {
                    this.RekvisisjonIdField = value;
                    this.RaisePropertyChanged("RekvisisjonId");
                }
            }
        }
        
        /// <summary>
        /// Dato for når tinglysning er returnert.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TinglysningReturnertDato {
            get {
                return this.TinglysningReturnertDatoField;
            }
            set {
                if ((this.TinglysningReturnertDatoField.Equals(value) != true)) {
                    this.TinglysningReturnertDatoField = value;
                    this.RaisePropertyChanged("TinglysningReturnertDato");
                }
            }
        }
        
        /// <summary>
        /// Dato for når tinglysing er sendt.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TinglysningSendtDato {
            get {
                return this.TinglysningSendtDatoField;
            }
            set {
                if ((this.TinglysningSendtDatoField.Equals(value) != true)) {
                    this.TinglysningSendtDatoField = value;
                    this.RaisePropertyChanged("TinglysningSendtDato");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Emneordhenvisning", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Emneordhenvisning : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.StandardEmneord EmneordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmneordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.StandardEmneord SeOgsaaEmneordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeOgsaaEmneordIdField;
        
        /// <summary>
        /// Emneord.
        /// </summary>
        /// <value>Henvisning til emneord.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.StandardEmneord Emneord {
            get {
                return this.EmneordField;
            }
            set {
                if ((object.ReferenceEquals(this.EmneordField, value) != true)) {
                    this.EmneordField = value;
                    this.RaisePropertyChanged("Emneord");
                }
            }
        }
        
        /// <summary>
        /// Henvisning til emneord
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet ES.EMNEORD1.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmneordId {
            get {
                return this.EmneordIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmneordIdField, value) != true)) {
                    this.EmneordIdField = value;
                    this.RaisePropertyChanged("EmneordId");
                }
            }
        }
        
        /// <summary>
        /// Emneord med tilsvarende betydning.
        /// </summary>
        /// <value>Emneord med tilsvarende betydning.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.StandardEmneord SeOgsaaEmneord {
            get {
                return this.SeOgsaaEmneordField;
            }
            set {
                if ((object.ReferenceEquals(this.SeOgsaaEmneordField, value) != true)) {
                    this.SeOgsaaEmneordField = value;
                    this.RaisePropertyChanged("SeOgsaaEmneord");
                }
            }
        }
        
        /// <summary>
        /// Henvisning til emneord med tilsvarende betydning.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet ES.EMNEORD2.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeOgsaaEmneordId {
            get {
                return this.SeOgsaaEmneordIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SeOgsaaEmneordIdField, value) != true)) {
                    this.SeOgsaaEmneordIdField = value;
                    this.RaisePropertyChanged("SeOgsaaEmneordId");
                }
            }
        }
    }
    
    /// <summary>
    /// Standardiserte emneord til bruk ved registrering på ordningsverdier og saksdokumenter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StandardEmneord", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class StandardEmneord : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmneordField;
        
        /// <summary>
        /// Standardisert emneord.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet EO.EMNEORD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Emneord {
            get {
                return this.EmneordField;
            }
            set {
                if ((object.ReferenceEquals(this.EmneordField, value) != true)) {
                    this.EmneordField = value;
                    this.RaisePropertyChanged("Emneord");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmneordStikkordPresedens", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class EmneordStikkordPresedens : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Presedens PresedensField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PresedensIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StikkordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.StandardEmneord StikkordEmneordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StikkordEmneordIdField;
        
        /// <summary>
        /// Presedensen det henvises fra.
        /// </summary>
        /// <value>Inneholder attributter som beskriver presedensen det henvises fra.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Presedens Presedens {
            get {
                return this.PresedensField;
            }
            set {
                if ((object.ReferenceEquals(this.PresedensField, value) != true)) {
                    this.PresedensField = value;
                    this.RaisePropertyChanged("Presedens");
                }
            }
        }
        
        /// <summary>
        /// Referanse til presedensen det henvises fra.
        /// Oppslag mot tabellen Presedens.
        /// Tilsvarer NOARK4 feltet EP.PSID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PresedensId {
            get {
                return this.PresedensIdField;
            }
            set {
                if ((this.PresedensIdField.Equals(value) != true)) {
                    this.PresedensIdField = value;
                    this.RaisePropertyChanged("PresedensId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom registreringen er et stikkord og ikke inngår i emneordlisten, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet EP.SORDFLAGG.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Stikkord {
            get {
                return this.StikkordField;
            }
            set {
                if ((this.StikkordField.Equals(value) != true)) {
                    this.StikkordField = value;
                    this.RaisePropertyChanged("Stikkord");
                }
            }
        }
        
        /// <summary>
        /// Stikkord eller emneord tilknyttet presedensen.
        /// </summary>
        /// <value>Inneholder attributter som beskriver stikkord eller emneord tilknyttet presedensen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.StandardEmneord StikkordEmneord {
            get {
                return this.StikkordEmneordField;
            }
            set {
                if ((object.ReferenceEquals(this.StikkordEmneordField, value) != true)) {
                    this.StikkordEmneordField = value;
                    this.RaisePropertyChanged("StikkordEmneord");
                }
            }
        }
        
        /// <summary>
        /// Referanse til stikkord eller emneord tilknyttet presedensen.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet EP.ORD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StikkordEmneordId {
            get {
                return this.StikkordEmneordIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StikkordEmneordIdField, value) != true)) {
                    this.StikkordEmneordIdField = value;
                    this.RaisePropertyChanged("StikkordEmneordId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om faktura.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Faktura", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Faktura : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BilagsnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EksportertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EksterntKundenummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FakturadatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.FakturaLinje[] FakturalinjerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganisasjonsnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoststedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SakIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        /// <summary>
        /// Fakturamottakers adresse.
        /// Feltlengde: 50 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Bilagsnummer.
        /// Feltlengde: 50 tegn
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bilagsnummer {
            get {
                return this.BilagsnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.BilagsnummerField, value) != true)) {
                    this.BilagsnummerField = value;
                    this.RaisePropertyChanged("Bilagsnummer");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom faktura eksportert til eksternt system, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Eksportert {
            get {
                return this.EksportertField;
            }
            set {
                if ((this.EksportertField.Equals(value) != true)) {
                    this.EksportertField = value;
                    this.RaisePropertyChanged("Eksportert");
                }
            }
        }
        
        /// <summary>
        /// Kundenummer i eksternt system.
        /// Feltlengde: 50 tegn
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EksterntKundenummer {
            get {
                return this.EksterntKundenummerField;
            }
            set {
                if ((object.ReferenceEquals(this.EksterntKundenummerField, value) != true)) {
                    this.EksterntKundenummerField = value;
                    this.RaisePropertyChanged("EksterntKundenummer");
                }
            }
        }
        
        /// <summary>
        /// Fakturadato.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Fakturadato {
            get {
                return this.FakturadatoField;
            }
            set {
                if ((this.FakturadatoField.Equals(value) != true)) {
                    this.FakturadatoField = value;
                    this.RaisePropertyChanged("Fakturadato");
                }
            }
        }
        
        /// <summary>
        /// Fakturalinjer tilhørende fakturaen.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver fakturalinjer som tilhører fakturaen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.FakturaLinje[] Fakturalinjer {
            get {
                return this.FakturalinjerField;
            }
            set {
                if ((object.ReferenceEquals(this.FakturalinjerField, value) != true)) {
                    this.FakturalinjerField = value;
                    this.RaisePropertyChanged("Fakturalinjer");
                }
            }
        }
        
        /// <summary>
        /// Unik nøkkel til faktura.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Fakturamottakers navn.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Navn {
            get {
                return this.NavnField;
            }
            set {
                if ((object.ReferenceEquals(this.NavnField, value) != true)) {
                    this.NavnField = value;
                    this.RaisePropertyChanged("Navn");
                }
            }
        }
        
        /// <summary>
        /// Fakturamottakers organisasjonsnummer eller annen entydig referanse.
        /// Kan inneholde fødselsnummer for personer.
        /// Feltlengde: 50 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organisasjonsnr {
            get {
                return this.OrganisasjonsnrField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganisasjonsnrField, value) != true)) {
                    this.OrganisasjonsnrField = value;
                    this.RaisePropertyChanged("Organisasjonsnr");
                }
            }
        }
        
        /// <summary>
        /// Fakturamottakers postnummer.
        /// Feltlengde: 5 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postnummer {
            get {
                return this.PostnummerField;
            }
            set {
                if ((object.ReferenceEquals(this.PostnummerField, value) != true)) {
                    this.PostnummerField = value;
                    this.RaisePropertyChanged("Postnummer");
                }
            }
        }
        
        /// <summary>
        /// Fakturamottakers poststed.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Poststed {
            get {
                return this.PoststedField;
            }
            set {
                if ((object.ReferenceEquals(this.PoststedField, value) != true)) {
                    this.PoststedField = value;
                    this.RaisePropertyChanged("Poststed");
                }
            }
        }
        
        /// <summary>
        /// Saken fakturaen er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken fakturaen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Referanse til sak som fakturaen er knyttet til.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((this.SakIdField.Equals(value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
        
        /// <summary>
        /// Fakturastatus.
        /// Feltlengde: 50 tegn.
        /// Lovlige verdier: Annulert, Betalt, Fakturert, Registrert, Til fakturering
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om fakturalinjer.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FakturaLinje", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class FakturaLinje : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AntallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BeloepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Faktura FakturaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FakturaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Gebyrtype GebyrtypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GebyrtypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LinjedatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RekkefoelgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SatsField;
        
        /// <summary>
        /// Antall enheter.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Antall {
            get {
                return this.AntallField;
            }
            set {
                if ((this.AntallField.Equals(value) != true)) {
                    this.AntallField = value;
                    this.RaisePropertyChanged("Antall");
                }
            }
        }
        
        /// <summary>
        /// Samlet beløp.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Beloep {
            get {
                return this.BeloepField;
            }
            set {
                if ((this.BeloepField.Equals(value) != true)) {
                    this.BeloepField = value;
                    this.RaisePropertyChanged("Beloep");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Fakturaen som fakturalinjen tilhører.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver fakturaen som fakturalinjen tilhører.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Faktura Faktura {
            get {
                return this.FakturaField;
            }
            set {
                if ((object.ReferenceEquals(this.FakturaField, value) != true)) {
                    this.FakturaField = value;
                    this.RaisePropertyChanged("Faktura");
                }
            }
        }
        
        /// <summary>
        /// Referanse til faktura.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FakturaId {
            get {
                return this.FakturaIdField;
            }
            set {
                if ((this.FakturaIdField.Equals(value) != true)) {
                    this.FakturaIdField = value;
                    this.RaisePropertyChanged("FakturaId");
                }
            }
        }
        
        /// <summary>
        /// Gebyrtypen som fakturalinjen tilhører.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver gebyrtypen som fakturalinjen tilhører.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Gebyrtype Gebyrtype {
            get {
                return this.GebyrtypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GebyrtypeField, value) != true)) {
                    this.GebyrtypeField = value;
                    this.RaisePropertyChanged("Gebyrtype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til gebyrtype.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GebyrtypeId {
            get {
                return this.GebyrtypeIdField;
            }
            set {
                if ((this.GebyrtypeIdField.Equals(value) != true)) {
                    this.GebyrtypeIdField = value;
                    this.RaisePropertyChanged("GebyrtypeId");
                }
            }
        }
        
        /// <summary>
        /// Unik nøkkel til fakturalinje.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Fakturalinjedato.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Linjedato {
            get {
                return this.LinjedatoField;
            }
            set {
                if ((this.LinjedatoField.Equals(value) != true)) {
                    this.LinjedatoField = value;
                    this.RaisePropertyChanged("Linjedato");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Rekkefølge internt i faktura.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rekkefoelge {
            get {
                return this.RekkefoelgeField;
            }
            set {
                if ((this.RekkefoelgeField.Equals(value) != true)) {
                    this.RekkefoelgeField = value;
                    this.RaisePropertyChanged("Rekkefoelge");
                }
            }
        }
        
        /// <summary>
        /// Sats per enhet.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Sats {
            get {
                return this.SatsField;
            }
            set {
                if ((this.SatsField.Equals(value) != true)) {
                    this.SatsField = value;
                    this.RaisePropertyChanged("Sats");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om gebyrtyper for fakturalinjer.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gebyrtype", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Gebyrtype : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FraDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KontonummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> KostnadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Mappetype MappetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MappetypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MomskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OppdragsgiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TilDatoField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 255 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Gyldig fra og med dato.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FraDato {
            get {
                return this.FraDatoField;
            }
            set {
                if ((this.FraDatoField.Equals(value) != true)) {
                    this.FraDatoField = value;
                    this.RaisePropertyChanged("FraDato");
                }
            }
        }
        
        /// <summary>
        /// Unik Id for gebyrtype.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Kontonummer.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kontonummer {
            get {
                return this.KontonummerField;
            }
            set {
                if ((object.ReferenceEquals(this.KontonummerField, value) != true)) {
                    this.KontonummerField = value;
                    this.RaisePropertyChanged("Kontonummer");
                }
            }
        }
        
        /// <summary>
        /// Kostnad.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Kostnad {
            get {
                return this.KostnadField;
            }
            set {
                if ((this.KostnadField.Equals(value) != true)) {
                    this.KostnadField = value;
                    this.RaisePropertyChanged("Kostnad");
                }
            }
        }
        
        /// <summary>
        /// Mappetypen denne gebyrtypen er begrenset til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver mappetypen denne gebyrtypen er begrenset til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Mappetype Mappetype {
            get {
                return this.MappetypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MappetypeField, value) != true)) {
                    this.MappetypeField = value;
                    this.RaisePropertyChanged("Mappetype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til mappetype denne gebyrtypen er begrenset til.
        /// Feltlengde: 2 tegn.
        /// Oppslag mot tabellen mappetype.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MappetypeId {
            get {
                return this.MappetypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MappetypeIdField, value) != true)) {
                    this.MappetypeIdField = value;
                    this.RaisePropertyChanged("MappetypeId");
                }
            }
        }
        
        /// <summary>
        /// Kode for moms, 0 = Ikke moms, 1 = Momsberegning.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Momskode {
            get {
                return this.MomskodeField;
            }
            set {
                if ((this.MomskodeField.Equals(value) != true)) {
                    this.MomskodeField = value;
                    this.RaisePropertyChanged("Momskode");
                }
            }
        }
        
        /// <summary>
        /// Oppdragsgiver.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Oppdragsgiver {
            get {
                return this.OppdragsgiverField;
            }
            set {
                if ((this.OppdragsgiverField.Equals(value) != true)) {
                    this.OppdragsgiverField = value;
                    this.RaisePropertyChanged("Oppdragsgiver");
                }
            }
        }
        
        /// <summary>
        /// Gyldig til og med dato.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TilDato {
            get {
                return this.TilDatoField;
            }
            set {
                if ((this.TilDatoField.Equals(value) != true)) {
                    this.TilDatoField = value;
                    this.RaisePropertyChanged("TilDato");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FungereIRolle", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class FungereIRolle : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.PersonRolle FungerForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FungerForIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.PersonRolle PersonrolleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonrolleIdField;
        
        /// <summary>
        /// Person i rolle som vedkommende skal kunne fungere for.
        /// </summary>
        /// <value>Inneholder attributter for person i rolle som vedkommende skal kunne fungere for.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.PersonRolle FungerFor {
            get {
                return this.FungerForField;
            }
            set {
                if ((object.ReferenceEquals(this.FungerForField, value) != true)) {
                    this.FungerForField = value;
                    this.RaisePropertyChanged("FungerFor");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person i rolle som vedkommende skal kunne fungere for.
        /// Tilsvarer NOARK4 feltet FR.FUNGPRID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FungerForId {
            get {
                return this.FungerForIdField;
            }
            set {
                if ((this.FungerForIdField.Equals(value) != true)) {
                    this.FungerForIdField = value;
                    this.RaisePropertyChanged("FungerForId");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// Mappes til NOARK4 feltet FR.MERKNAD
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Person i rollen som skal fungere.
        /// </summary>
        /// <value>Inneholder attributter som beskriver den person i rollen som skal fungere.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.PersonRolle Personrolle {
            get {
                return this.PersonrolleField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonrolleField, value) != true)) {
                    this.PersonrolleField = value;
                    this.RaisePropertyChanged("Personrolle");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person i rollen som skal fungere.
        /// Oppslag mot tabellen PersonRolle.
        /// Tilsvarer NOARK4 feltet FR.PRID
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonrolleId {
            get {
                return this.PersonrolleIdField;
            }
            set {
                if ((this.PersonrolleIdField.Equals(value) != true)) {
                    this.PersonrolleIdField = value;
                    this.RaisePropertyChanged("PersonrolleId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HjemmelForTilgangskode", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class HjemmelForTilgangskode : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnvendelsesomraadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Avgraderingskode AvgraderingskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvgraderingskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Avgraderingstid1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Avgraderingstid2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FradatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HjemmelUoffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StandardUoffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TildatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        /// <summary>
        /// TH.ANVEND
        /// Tilsvarer NOARK4 feltet TH.ANVEND.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Anvendelsesomraade {
            get {
                return this.AnvendelsesomraadeField;
            }
            set {
                if ((object.ReferenceEquals(this.AnvendelsesomraadeField, value) != true)) {
                    this.AnvendelsesomraadeField = value;
                    this.RaisePropertyChanged("Anvendelsesomraade");
                }
            }
        }
        
        /// <summary>
        /// Standard avgraderingskode for dokument mv unntatt offentligheten ut fra denne hjemmelen.
        /// </summary>
        /// <value>Inneholder detaljer om standard avgraderingskode for dokument mv unntatt offentligheten ut fra denne hjemmelen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Avgraderingskode Avgraderingskode {
            get {
                return this.AvgraderingskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AvgraderingskodeField, value) != true)) {
                    this.AvgraderingskodeField = value;
                    this.RaisePropertyChanged("Avgraderingskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til standard avgraderingskode for dokument mv unntatt offentligheten ut fra denne hjemmelen.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet TH.AGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvgraderingskodeId {
            get {
                return this.AvgraderingskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AvgraderingskodeIdField, value) != true)) {
                    this.AvgraderingskodeIdField = value;
                    this.RaisePropertyChanged("AvgraderingskodeId");
                }
            }
        }
        
        /// <summary>
        /// Standard tid til avgradering i antall år.
        /// Tilsvarer NOARK4 feltet TH.AGAAR
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Avgraderingstid1 {
            get {
                return this.Avgraderingstid1Field;
            }
            set {
                if ((this.Avgraderingstid1Field.Equals(value) != true)) {
                    this.Avgraderingstid1Field = value;
                    this.RaisePropertyChanged("Avgraderingstid1");
                }
            }
        }
        
        /// <summary>
        /// Standard tid til avgradering i antall dager.
        /// Tilsvarer NOARK4 feltet TH.AGDAGER.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Avgraderingstid2 {
            get {
                return this.Avgraderingstid2Field;
            }
            set {
                if ((this.Avgraderingstid2Field.Equals(value) != true)) {
                    this.Avgraderingstid2Field = value;
                    this.RaisePropertyChanged("Avgraderingstid2");
                }
            }
        }
        
        /// <summary>
        /// Gyldighets fradato for hjemmel
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Fradato {
            get {
                return this.FradatoField;
            }
            set {
                if ((this.FradatoField.Equals(value) != true)) {
                    this.FradatoField = value;
                    this.RaisePropertyChanged("Fradato");
                }
            }
        }
        
        /// <summary>
        /// Hjemmel.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet TH.UOFF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HjemmelUoff {
            get {
                return this.HjemmelUoffField;
            }
            set {
                if ((object.ReferenceEquals(this.HjemmelUoffField, value) != true)) {
                    this.HjemmelUoffField = value;
                    this.RaisePropertyChanged("HjemmelUoff");
                }
            }
        }
        
        /// <summary>
        /// Angir om denne lovhenvisningen er standard for angitt tilgangskode.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> StandardUoff {
            get {
                return this.StandardUoffField;
            }
            set {
                if ((this.StandardUoffField.Equals(value) != true)) {
                    this.StandardUoffField = value;
                    this.RaisePropertyChanged("StandardUoff");
                }
            }
        }
        
        /// <summary>
        /// Gyldighets tildato for hjemmel
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Tildato {
            get {
                return this.TildatoField;
            }
            set {
                if ((this.TildatoField.Equals(value) != true)) {
                    this.TildatoField = value;
                    this.RaisePropertyChanged("Tildato");
                }
            }
        }
        
        /// <summary>
        /// Tilgangskoden hjemmelen gjelder.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangskoden hjemmelen gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangskoden hjemmelen gjelder.
        /// Oppslag mot tabellen Tilgangskode.
        /// Feltlengde: 2 tegn.
        /// Tilsvarer NOARK4 feltet TH.TGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om katalog.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Katalog", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Katalog : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdministrativEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.KatalogLink[] DokumentKoblingerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Katalog HoererInnUnderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HoererInnUnderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.KatalogLink[] JournalpostKoblingerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KanInneholdeSakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KanInneholdeUnderkatalogerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn PersonnavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonnavnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.KatalogLink[] SakKoblingerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe TilgangsgruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilgangsgruppeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Katalog[] UnderkatalogerField;
        
        /// <summary>
        /// Den administrative enhet som eier katalogen.
        /// </summary>
        /// <value>Inneholder detaljer om den administrative enhet som eier katalogen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhet {
            get {
                return this.AdministrativEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativEnhetField, value) != true)) {
                    this.AdministrativEnhetField = value;
                    this.RaisePropertyChanged("AdministrativEnhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den administrative enhet som eier katalogen.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdministrativEnhetId {
            get {
                return this.AdministrativEnhetIdField;
            }
            set {
                if ((this.AdministrativEnhetIdField.Equals(value) != true)) {
                    this.AdministrativEnhetIdField = value;
                    this.RaisePropertyChanged("AdministrativEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Koblinger til dokumenter.
        /// </summary>
        /// <value>Inneholder attributter som beskriver koblinger fra denne katalogen til dokumenter.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.KatalogLink[] DokumentKoblinger {
            get {
                return this.DokumentKoblingerField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentKoblingerField, value) != true)) {
                    this.DokumentKoblingerField = value;
                    this.RaisePropertyChanged("DokumentKoblinger");
                }
            }
        }
        
        /// <summary>
        /// Overordnet katalog.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver overordnet katalog.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Katalog HoererInnUnder {
            get {
                return this.HoererInnUnderField;
            }
            set {
                if ((object.ReferenceEquals(this.HoererInnUnderField, value) != true)) {
                    this.HoererInnUnderField = value;
                    this.RaisePropertyChanged("HoererInnUnder");
                }
            }
        }
        
        /// <summary>
        /// Referanse til overordnet katalog.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HoererInnUnderId {
            get {
                return this.HoererInnUnderIdField;
            }
            set {
                if ((this.HoererInnUnderIdField.Equals(value) != true)) {
                    this.HoererInnUnderIdField = value;
                    this.RaisePropertyChanged("HoererInnUnderId");
                }
            }
        }
        
        /// <summary>
        /// Unik Id for katalogen.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Koblinger til journalposter.
        /// </summary>
        /// <value>Inneholder attributter som beskriver koblinger fra denne katalogen til journalposter.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.KatalogLink[] JournalpostKoblinger {
            get {
                return this.JournalpostKoblingerField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostKoblingerField, value) != true)) {
                    this.JournalpostKoblingerField = value;
                    this.RaisePropertyChanged("JournalpostKoblinger");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom katalog kan inneholde saker, journalposter eller dokumenter, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KanInneholdeSaker {
            get {
                return this.KanInneholdeSakerField;
            }
            set {
                if ((this.KanInneholdeSakerField.Equals(value) != true)) {
                    this.KanInneholdeSakerField = value;
                    this.RaisePropertyChanged("KanInneholdeSaker");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom katalog kan inneholde underkataloger, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KanInneholdeUnderkataloger {
            get {
                return this.KanInneholdeUnderkatalogerField;
            }
            set {
                if ((this.KanInneholdeUnderkatalogerField.Equals(value) != true)) {
                    this.KanInneholdeUnderkatalogerField = value;
                    this.RaisePropertyChanged("KanInneholdeUnderkataloger");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 1000 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Personen som eier katalogen.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som eier katalogen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn Personnavn {
            get {
                return this.PersonnavnField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonnavnField, value) != true)) {
                    this.PersonnavnField = value;
                    this.RaisePropertyChanged("Personnavn");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den personen som eier katalogen.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonnavnId {
            get {
                return this.PersonnavnIdField;
            }
            set {
                if ((this.PersonnavnIdField.Equals(value) != true)) {
                    this.PersonnavnIdField = value;
                    this.RaisePropertyChanged("PersonnavnId");
                }
            }
        }
        
        /// <summary>
        /// Koblinger til saker.
        /// </summary>
        /// <value>Inneholder attributter som beskriver koblinger fra denne katalogen til saker.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.KatalogLink[] SakKoblinger {
            get {
                return this.SakKoblingerField;
            }
            set {
                if ((object.ReferenceEquals(this.SakKoblingerField, value) != true)) {
                    this.SakKoblingerField = value;
                    this.RaisePropertyChanged("SakKoblinger");
                }
            }
        }
        
        /// <summary>
        /// Tilgangsgruppe.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver tilgangsgruppe.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe Tilgangsgruppe {
            get {
                return this.TilgangsgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeField, value) != true)) {
                    this.TilgangsgruppeField = value;
                    this.RaisePropertyChanged("Tilgangsgruppe");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangsgruppe.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilgangsgruppeId {
            get {
                return this.TilgangsgruppeIdField;
            }
            set {
                if ((this.TilgangsgruppeIdField.Equals(value) != true)) {
                    this.TilgangsgruppeIdField = value;
                    this.RaisePropertyChanged("TilgangsgruppeId");
                }
            }
        }
        
        /// <summary>
        /// Kataloger underlagt denne katalogen.
        /// </summary>
        /// <value></value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Katalog[] Underkataloger {
            get {
                return this.UnderkatalogerField;
            }
            set {
                if ((object.ReferenceEquals(this.UnderkatalogerField, value) != true)) {
                    this.UnderkatalogerField = value;
                    this.RaisePropertyChanged("Underkataloger");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om kobling mellom kataloger og objekter som sak, journalpost og dokumenter.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KatalogLink", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class KatalogLink : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse DokumentbeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Katalog KatalogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> KatalogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObjektIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObjekttypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RekkefoelgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        /// <summary>
        /// Dokumentet som koblingen gjelder (hvis sakskobling)
        /// </summary>
        /// <value>Detaljer om dokumentet som koblingen gjelder (hvis dokumentkobling).</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse Dokumentbeskrivelse {
            get {
                return this.DokumentbeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentbeskrivelseField, value) != true)) {
                    this.DokumentbeskrivelseField = value;
                    this.RaisePropertyChanged("Dokumentbeskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Unik ID for koblingen.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Journalposten som koblingen gjelder (hvis sakskobling)
        /// </summary>
        /// <value>Detaljer om journalposten som koblingen gjelder (hvis journalpostkobling).</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Katalogen koblingen gjelder.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver katalogen koblingen gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Katalog Katalog {
            get {
                return this.KatalogField;
            }
            set {
                if ((object.ReferenceEquals(this.KatalogField, value) != true)) {
                    this.KatalogField = value;
                    this.RaisePropertyChanged("Katalog");
                }
            }
        }
        
        /// <summary>
        /// Referanse til katalogen koblingen gjelder.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> KatalogId {
            get {
                return this.KatalogIdField;
            }
            set {
                if ((this.KatalogIdField.Equals(value) != true)) {
                    this.KatalogIdField = value;
                    this.RaisePropertyChanged("KatalogId");
                }
            }
        }
        
        /// <summary>
        /// Id for objektet koblingen gjelder (sak, journalpost eller dokument).
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ObjektId {
            get {
                return this.ObjektIdField;
            }
            set {
                if ((this.ObjektIdField.Equals(value) != true)) {
                    this.ObjektIdField = value;
                    this.RaisePropertyChanged("ObjektId");
                }
            }
        }
        
        /// <summary>
        /// Angir objekttype for koblingen.
        /// 0 - sak, 1 - journalpost og 2 - dokumentbeskrivelse
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Objekttype {
            get {
                return this.ObjekttypeField;
            }
            set {
                if ((this.ObjekttypeField.Equals(value) != true)) {
                    this.ObjekttypeField = value;
                    this.RaisePropertyChanged("Objekttype");
                }
            }
        }
        
        /// <summary>
        /// Rekkefølge.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rekkefoelge {
            get {
                return this.RekkefoelgeField;
            }
            set {
                if ((this.RekkefoelgeField.Equals(value) != true)) {
                    this.RekkefoelgeField = value;
                    this.RaisePropertyChanged("Rekkefoelge");
                }
            }
        }
        
        /// <summary>
        /// Saken som koblingen gjelder (hvis sakskobling)
        /// </summary>
        /// <value>Detaljer om saken som koblingen gjelder (hvis sakskobling).</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KlareringForTilgangskode", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class KlareringForTilgangskode : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AutorisertForHeleVirksomhetenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person KlareringOpphevetAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> KlareringOpphevetAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> KlareringOpphevetDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person KlarertAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> KlarertAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> KlarertDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        /// <summary>
        /// Valgt dersom klareringen innebærer autorisering for tilgangskoden innenfor hele virksomheten.
        /// Ikke valgt dersom klareringen for tilgangskode kun innebærer automatisk autorisasjon for dokumenter
        /// mv personen selv er saksbehandler for. Ytterligere autorisasjon angis i tabellen Autorisert innen
        /// adm. enhet og i tabellen Medlemskap i tilgangsgruppe.
        /// Tilsvarer NOARK4 feltet KT.AUTHELE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AutorisertForHeleVirksomheten {
            get {
                return this.AutorisertForHeleVirksomhetenField;
            }
            set {
                if ((this.AutorisertForHeleVirksomhetenField.Equals(value) != true)) {
                    this.AutorisertForHeleVirksomhetenField = value;
                    this.RaisePropertyChanged("AutorisertForHeleVirksomheten");
                }
            }
        }
        
        /// <summary>
        /// Personen som har opphevet klareringen.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som har opphevet klareringen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person KlareringOpphevetAv {
            get {
                return this.KlareringOpphevetAvField;
            }
            set {
                if ((object.ReferenceEquals(this.KlareringOpphevetAvField, value) != true)) {
                    this.KlareringOpphevetAvField = value;
                    this.RaisePropertyChanged("KlareringOpphevetAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den personen som har opphevet klareringen.
        /// Mappes til NOARK4 feltet KT.KLOPPHAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> KlareringOpphevetAvid {
            get {
                return this.KlareringOpphevetAvidField;
            }
            set {
                if ((this.KlareringOpphevetAvidField.Equals(value) != true)) {
                    this.KlareringOpphevetAvidField = value;
                    this.RaisePropertyChanged("KlareringOpphevetAvid");
                }
            }
        }
        
        /// <summary>
        /// Den dato tilgangen gjelder til. Tomt attributt angir at tilgangen ikke er tidsbegrenset.
        /// Tilsvarer NOARK4 feltet KT.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> KlareringOpphevetDato {
            get {
                return this.KlareringOpphevetDatoField;
            }
            set {
                if ((this.KlareringOpphevetDatoField.Equals(value) != true)) {
                    this.KlareringOpphevetDatoField = value;
                    this.RaisePropertyChanged("KlareringOpphevetDato");
                }
            }
        }
        
        /// <summary>
        /// Personen som klarerte personen for denne tilgangskoden.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som klarerte personen for denne tilgangskoden.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person KlarertAv {
            get {
                return this.KlarertAvField;
            }
            set {
                if ((object.ReferenceEquals(this.KlarertAvField, value) != true)) {
                    this.KlarertAvField = value;
                    this.RaisePropertyChanged("KlarertAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den personen som klarerte personen for denne tilgangskoden.
        /// Oppdateres automatisk ved klarering.
        /// Tilsvarer NOARK4 feltet KT.KLAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> KlarertAvid {
            get {
                return this.KlarertAvidField;
            }
            set {
                if ((this.KlarertAvidField.Equals(value) != true)) {
                    this.KlarertAvidField = value;
                    this.RaisePropertyChanged("KlarertAvid");
                }
            }
        }
        
        /// <summary>
        /// Den dato klareringen gjelder fra.
        /// Settes automatisk til dagens dato ved registrering av klareringen.
        /// Tilsvarer NOARK4 feltet KT.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> KlarertDato {
            get {
                return this.KlarertDatoField;
            }
            set {
                if ((this.KlarertDatoField.Equals(value) != true)) {
                    this.KlarertDatoField = value;
                    this.RaisePropertyChanged("KlarertDato");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet KT.MERKNAD   .
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Personen klareringen gjelder.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen klareringen gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        /// <summary>
        /// Referanse til personen klareringen gjelder.
        /// Tilsvarer NOARK4 feltet KT.PEID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        /// <summary>
        /// Tilgangskoden klareringen gjelder.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangskoden klareringen gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangskoden klareringen gjelder.
        /// Oppslag mot tabellen Tilgangskode.
        /// Tilsvarer NOARK4 feltet KT.TGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LesteObjekter", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class LesteObjekter : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling LestAvEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LestAvEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn LestAvPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LestAvPersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObjektIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObjektTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        /// <summary>
        /// The record entry that is read - Journalposten som er lest.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalposten som er lest.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// The administrative unit that have read the object - Den administrative enhet den adm. enhet som har lest objektet.
        /// </summary>
        /// <value>Inneholder attributter om den administrative enhet som har lest objektet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling LestAvEnhet {
            get {
                return this.LestAvEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.LestAvEnhetField, value) != true)) {
                    this.LestAvEnhetField = value;
                    this.RaisePropertyChanged("LestAvEnhet");
                }
            }
        }
        
        /// <summary>
        /// Reference to the administrative unit that have read the object - Referanse til den adm. enhet som har lest objektet.
        /// Oppslag mot tabellen Administrativ inndeling.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LestAvEnhetId {
            get {
                return this.LestAvEnhetIdField;
            }
            set {
                if ((this.LestAvEnhetIdField.Equals(value) != true)) {
                    this.LestAvEnhetIdField = value;
                    this.RaisePropertyChanged("LestAvEnhetId");
                }
            }
        }
        
        /// <summary>
        /// The person that have read the object - Personen som har lest objektet.
        /// </summary>
        /// <value>Inneholder attributter om personen som har lest objektet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn LestAvPerson {
            get {
                return this.LestAvPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.LestAvPersonField, value) != true)) {
                    this.LestAvPersonField = value;
                    this.RaisePropertyChanged("LestAvPerson");
                }
            }
        }
        
        /// <summary>
        /// Reference to the person that have read the object - Referanse til den person som har lest objektet.
        /// Oppslag mot tabellen Personnavn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LestAvPersonId {
            get {
                return this.LestAvPersonIdField;
            }
            set {
                if ((this.LestAvPersonIdField.Equals(value) != true)) {
                    this.LestAvPersonIdField = value;
                    this.RaisePropertyChanged("LestAvPersonId");
                }
            }
        }
        
        /// <summary>
        /// Unique referance to the object that is read - Unik referanse til objektet som skal vises.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ObjektId {
            get {
                return this.ObjektIdField;
            }
            set {
                if ((this.ObjektIdField.Equals(value) != true)) {
                    this.ObjektIdField = value;
                    this.RaisePropertyChanged("ObjektId");
                }
            }
        }
        
        /// <summary>
        /// Object type, legal values is 0: Case, 1 Record entry - Angir hvilken objekttype som er lest.
        /// Lovlige verdier: 0 - sak, 1 - journalpost
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ObjektType {
            get {
                return this.ObjektTypeField;
            }
            set {
                if ((this.ObjektTypeField.Equals(value) != true)) {
                    this.ObjektTypeField = value;
                    this.RaisePropertyChanged("ObjektType");
                }
            }
        }
        
        /// <summary>
        /// The case that is read - Saken som er lest.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken som er lest.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder kortkoder for lover og forskrifter benyttet i forbindelse med presedenser.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoverOgForskrifter", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class LoverOgForskrifter : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Loven eller forskriftens betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Tilsvarer NOARK4 feltet LK.BETEGN.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet LK.KODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LovForskriftsreferansePresedens", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class LovForskriftsreferansePresedens : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.LoverOgForskrifter LovForskriftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LovForskriftIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParagrafField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Presedens PresedensField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresedensIdField;
        
        /// <summary>
        /// Lov eller forskrift som er relevant for presedensen.
        /// </summary>
        /// <value>Inneholder attributter som beskriver lov eller forskrift.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.LoverOgForskrifter LovForskrift {
            get {
                return this.LovForskriftField;
            }
            set {
                if ((object.ReferenceEquals(this.LovForskriftField, value) != true)) {
                    this.LovForskriftField = value;
                    this.RaisePropertyChanged("LovForskrift");
                }
            }
        }
        
        /// <summary>
        /// Referanse til kortkode for lov eller forskrift som er relevant for presedensen.
        /// Feltlengde: 10 tegn.
        /// Oppslag mot tabellen Lover og forskrifter.
        /// Tilsvarer NOARK4 feltet PL.LOVFORSK.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LovForskriftId {
            get {
                return this.LovForskriftIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LovForskriftIdField, value) != true)) {
                    this.LovForskriftIdField = value;
                    this.RaisePropertyChanged("LovForskriftId");
                }
            }
        }
        
        /// <summary>
        /// Merknader.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet PL.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Angivelse av paragraf/punkt innen lov/forskrift.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet PL.PARAGRAF.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Paragraf {
            get {
                return this.ParagrafField;
            }
            set {
                if ((object.ReferenceEquals(this.ParagrafField, value) != true)) {
                    this.ParagrafField = value;
                    this.RaisePropertyChanged("Paragraf");
                }
            }
        }
        
        /// <summary>
        /// Presedensen det henvises fra.
        /// </summary>
        /// <value>Inneholder attributter som presedensen det henvises fra.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Presedens Presedens {
            get {
                return this.PresedensField;
            }
            set {
                if ((object.ReferenceEquals(this.PresedensField, value) != true)) {
                    this.PresedensField = value;
                    this.RaisePropertyChanged("Presedens");
                }
            }
        }
        
        /// <summary>
        /// Referanse til presedensen.
        /// Tilsvarer NOARK4 feltet PL.PSID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresedensId {
            get {
                return this.PresedensIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PresedensIdField, value) != true)) {
                    this.PresedensIdField = value;
                    this.RaisePropertyChanged("PresedensId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedlemskapITilgangsgruppe", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class MedlemskapITilgangsgruppe : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FraDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person InnmeldtAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InnmeldtAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person MedlemskapOpphevetAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MedlemskapOpphevetAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Rolle RolleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RolleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SkrivetilgangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TilDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe TilgangsgruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilgangsgruppeIdField;
        
        /// <summary>
        /// Den dato tilgangen gjelder fra.
        /// Tilsvarer NOARK4 feltet PG.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FraDato {
            get {
                return this.FraDatoField;
            }
            set {
                if ((this.FraDatoField.Equals(value) != true)) {
                    this.FraDatoField = value;
                    this.RaisePropertyChanged("FraDato");
                }
            }
        }
        
        /// <summary>
        /// Personen som meldte personen medlemskapet gjelder inn i gruppen.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som meldte personen medlemskapet gjelder inn i gruppen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person InnmeldtAv {
            get {
                return this.InnmeldtAvField;
            }
            set {
                if ((object.ReferenceEquals(this.InnmeldtAvField, value) != true)) {
                    this.InnmeldtAvField = value;
                    this.RaisePropertyChanged("InnmeldtAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den som meldte personen medlemskapet gjelder inn i gruppen.
        /// Oppdateres automatisk ved innmelding i gruppen.
        /// Tilsvarer NOARK4 feltet PG.INNMAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InnmeldtAvid {
            get {
                return this.InnmeldtAvidField;
            }
            set {
                if ((this.InnmeldtAvidField.Equals(value) != true)) {
                    this.InnmeldtAvidField = value;
                    this.RaisePropertyChanged("InnmeldtAvid");
                }
            }
        }
        
        /// <summary>
        /// Personen som opphevet medlemskapet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som opphevet medlemskapet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person MedlemskapOpphevetAv {
            get {
                return this.MedlemskapOpphevetAvField;
            }
            set {
                if ((object.ReferenceEquals(this.MedlemskapOpphevetAvField, value) != true)) {
                    this.MedlemskapOpphevetAvField = value;
                    this.RaisePropertyChanged("MedlemskapOpphevetAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den som opphever (dvs angir Til dato) medlemskapet.
        /// Oppdateres automatisk ved oppheving.
        /// Tilsvarer NOARK4 feltet PG.UTMAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MedlemskapOpphevetAvid {
            get {
                return this.MedlemskapOpphevetAvidField;
            }
            set {
                if ((this.MedlemskapOpphevetAvidField.Equals(value) != true)) {
                    this.MedlemskapOpphevetAvidField = value;
                    this.RaisePropertyChanged("MedlemskapOpphevetAvid");
                }
            }
        }
        
        /// <summary>
        /// Personen medlemskapet gjelder.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen medlemskapet gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til person medlemskapet gjelder.
        /// Tilsvarer NOARK4 feltet PG.PEID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        /// <summary>
        /// Rollen medlemskapet gjelder.
        /// </summary>
        /// <value>Inneholder attributter som beskriver rollen medlemskapet gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Rolle Rolle {
            get {
                return this.RolleField;
            }
            set {
                if ((object.ReferenceEquals(this.RolleField, value) != true)) {
                    this.RolleField = value;
                    this.RaisePropertyChanged("Rolle");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til rolle.
        /// Dersom denne er angitt, skal personen miste sitt medlemskap i gruppen dersom personen trer ut av rollen.
        /// Oppslag mot tabellen rolle.
        /// Tilsvarer NOARK4 feltet PG.PERROLID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RolleId {
            get {
                return this.RolleIdField;
            }
            set {
                if ((this.RolleIdField.Equals(value) != true)) {
                    this.RolleIdField = value;
                    this.RaisePropertyChanged("RolleId");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom perosnen har skrivetilgang til objektet tilgangsgruppen er knyttet til, ikke valgt ellers.
        /// Tilsvarer NOARK4 feltet PG.MEDKOD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Skrivetilgang {
            get {
                return this.SkrivetilgangField;
            }
            set {
                if ((this.SkrivetilgangField.Equals(value) != true)) {
                    this.SkrivetilgangField = value;
                    this.RaisePropertyChanged("Skrivetilgang");
                }
            }
        }
        
        /// <summary>
        /// Den dato tilgangen gjelder til.
        /// Tomt angir at tilgangen ikke er tidsbegrenset.
        /// Tilsvarer NOARK4 feltet PG.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TilDato {
            get {
                return this.TilDatoField;
            }
            set {
                if ((this.TilDatoField.Equals(value) != true)) {
                    this.TilDatoField = value;
                    this.RaisePropertyChanged("TilDato");
                }
            }
        }
        
        /// <summary>
        /// Tilgangsgruppen som medlemskapet gjelder.
        /// </summary>
        /// <value>Inneholder detaljer om tilgangsgruppen som medlemskapet gjelder.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe Tilgangsgruppe {
            get {
                return this.TilgangsgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeField, value) != true)) {
                    this.TilgangsgruppeField = value;
                    this.RaisePropertyChanged("Tilgangsgruppe");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangsgruppe som medlemskapet gjelder.
        /// Tilsvarer NOARK4 feltet PG.GRUPPEID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilgangsgruppeId {
            get {
                return this.TilgangsgruppeIdField;
            }
            set {
                if ((this.TilgangsgruppeIdField.Equals(value) != true)) {
                    this.TilgangsgruppeIdField = value;
                    this.RaisePropertyChanged("TilgangsgruppeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Postnummer", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Postnummer : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KommunenavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KommunenummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NedlagtDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpprettetDatoField;
        
        /// <summary>
        /// Navn på poststed.
        /// Feltlengde: 70 tegn.
        /// Mappes til NOARK4 feltet PO.POSTSTED.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Postnummer.
        /// Feltlengde: 4 tegn.
        /// Mappes til NOARK4 feltet PO.POSTNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Navn på kommune.
        /// Feltlengde: 70 tegn.
        /// Mappes til NOARK4 feltet PO.KOMMUNE
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kommunenavn {
            get {
                return this.KommunenavnField;
            }
            set {
                if ((object.ReferenceEquals(this.KommunenavnField, value) != true)) {
                    this.KommunenavnField = value;
                    this.RaisePropertyChanged("Kommunenavn");
                }
            }
        }
        
        /// <summary>
        /// Kommunenummer.
        /// Feltlengde: 4 tegn.
        /// Mappes til NOARK4 feltet PO.KOMNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kommunenummer {
            get {
                return this.KommunenummerField;
            }
            set {
                if ((object.ReferenceEquals(this.KommunenummerField, value) != true)) {
                    this.KommunenummerField = value;
                    this.RaisePropertyChanged("Kommunenummer");
                }
            }
        }
        
        /// <summary>
        /// Nedlagt dato.
        /// Mappes til NOARK4 feltet PO.NEDLDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NedlagtDato {
            get {
                return this.NedlagtDatoField;
            }
            set {
                if ((this.NedlagtDatoField.Equals(value) != true)) {
                    this.NedlagtDatoField = value;
                    this.RaisePropertyChanged("NedlagtDato");
                }
            }
        }
        
        /// <summary>
        /// Opprettet dato.
        /// Mappes til NOARK4 feltet PO.OPRDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OpprettetDato {
            get {
                return this.OpprettetDatoField;
            }
            set {
                if ((this.OpprettetDatoField.Equals(value) != true)) {
                    this.OpprettetDatoField = value;
                    this.RaisePropertyChanged("OpprettetDato");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon som beskriver predefinerte søk.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PredefinertSoek", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class PredefinertSoek : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AntallUlesteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BildeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntydigeFeltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GjelderForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LenkeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaksForekomsterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.PredefinertSoek OverordnetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OverordnetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RekkefoelgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RollebetingelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoektypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SorteringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StilarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> UtfoeresVedOppstartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VisKriterierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VisUlesteForAdmInndelingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VisUlesteForPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> KlientTypeField;
        
        /// <summary>
        /// Antall uleste forekomster i søkesvaret.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AntallUleste {
            get {
                return this.AntallUlesteField;
            }
            set {
                if ((this.AntallUlesteField.Equals(value) != true)) {
                    this.AntallUlesteField = value;
                    this.RaisePropertyChanged("AntallUleste");
                }
            }
        }
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 50 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Filnavnet til bildet/ikonet som skal benyttes sammen med søket (menyvalg/lenke).
        /// Feltlengde: 50 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bilde {
            get {
                return this.BildeField;
            }
            set {
                if ((object.ReferenceEquals(this.BildeField, value) != true)) {
                    this.BildeField = value;
                    this.RaisePropertyChanged("Bilde");
                }
            }
        }
        
        /// <summary>
        /// Angir elementtypen som søket utgjør.
        /// Feltlengde: 10 tegn.
        /// Følgende verdier er definert:
        /// SOK - søk
        /// RAP - rapport
        /// KAT - kategori
        /// URL - lenke
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Element {
            get {
                return this.ElementField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementField, value) != true)) {
                    this.ElementField = value;
                    this.RaisePropertyChanged("Element");
                }
            }
        }
        
        /// <summary>
        /// Kommaseparert liste over entydige felt i søkesvaret.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntydigeFelt {
            get {
                return this.EntydigeFeltField;
            }
            set {
                if ((object.ReferenceEquals(this.EntydigeFeltField, value) != true)) {
                    this.EntydigeFeltField = value;
                    this.RaisePropertyChanged("EntydigeFelt");
                }
            }
        }
        
        /// <summary>
        /// Angir hvem søket gjelder for. -1 angir at alle har tilgang.
        /// Negativt tall betyr at søket er begrenset ti en bestemt administrativ inndeling (AdministrativInndeling.Id).
        /// Positivt tall betyr at søket er begrenset til en bestemt person (Personnavn.Id)
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GjelderFor {
            get {
                return this.GjelderForField;
            }
            set {
                if ((this.GjelderForField.Equals(value) != true)) {
                    this.GjelderForField = value;
                    this.RaisePropertyChanged("GjelderFor");
                }
            }
        }
        
        /// <summary>
        /// Unik id for søket.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Lenke - benyttes som menypunkt med direkte lenke.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lenke {
            get {
                return this.LenkeField;
            }
            set {
                if ((object.ReferenceEquals(this.LenkeField, value) != true)) {
                    this.LenkeField = value;
                    this.RaisePropertyChanged("Lenke");
                }
            }
        }
        
        /// <summary>
        /// Angir hvor søkeresultatet skal vises.
        /// Feltlengde: 50 tegn.
        /// Lovlige verdier: topright (øvre høyre del av ePhorte), _new (nytt vindu)
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Maal {
            get {
                return this.MaalField;
            }
            set {
                if ((object.ReferenceEquals(this.MaalField, value) != true)) {
                    this.MaalField = value;
                    this.RaisePropertyChanged("Maal");
                }
            }
        }
        
        /// <summary>
        /// Maksimalt antall forekomster i søkesvaret. -1 angir at alle poster skal returneres og vises i søkeresultat.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaksForekomster {
            get {
                return this.MaksForekomsterField;
            }
            set {
                if ((this.MaksForekomsterField.Equals(value) != true)) {
                    this.MaksForekomsterField = value;
                    this.RaisePropertyChanged("MaksForekomster");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Modul.
        /// Benyttes for å begrense søket til en bestemt modul.
        /// Feltlengde: 10 tegn.
        /// Lovlige verdier: AS, BS, PS, DS og TS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modul {
            get {
                return this.ModulField;
            }
            set {
                if ((object.ReferenceEquals(this.ModulField, value) != true)) {
                    this.ModulField = value;
                    this.RaisePropertyChanged("Modul");
                }
            }
        }
        
        /// <summary>
        /// Søket dette søket er underlagt.
        /// </summary>
        /// <value>Inneholder detaljer om søket dette søket er underlagt.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.PredefinertSoek Overordnet {
            get {
                return this.OverordnetField;
            }
            set {
                if ((object.ReferenceEquals(this.OverordnetField, value) != true)) {
                    this.OverordnetField = value;
                    this.RaisePropertyChanged("Overordnet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til søk dette søket er underlagt.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OverordnetId {
            get {
                return this.OverordnetIdField;
            }
            set {
                if ((this.OverordnetIdField.Equals(value) != true)) {
                    this.OverordnetIdField = value;
                    this.RaisePropertyChanged("OverordnetId");
                }
            }
        }
        
        /// <summary>
        /// Rekkefølge.
        /// Benyttes for å sortere søkene ved visning.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rekkefoelge {
            get {
                return this.RekkefoelgeField;
            }
            set {
                if ((this.RekkefoelgeField.Equals(value) != true)) {
                    this.RekkefoelgeField = value;
                    this.RaisePropertyChanged("Rekkefoelge");
                }
            }
        }
        
        /// <summary>
        /// Rollebetingelse.
        /// Benyttes for å beskrive rollene som kan benytte søket.
        /// Lovlige verdier er: RO_ARKLEDER, RO_DRIFT, RO_REGADR
        /// Feltlengde: 20 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rollebetingelse {
            get {
                return this.RollebetingelseField;
            }
            set {
                if ((object.ReferenceEquals(this.RollebetingelseField, value) != true)) {
                    this.RollebetingelseField = value;
                    this.RaisePropertyChanged("Rollebetingelse");
                }
            }
        }
        
        /// <summary>
        /// Søktype.
        /// Angir hva slags type objekt søket er knyttet til.
        /// Her skal hovedtabell som innhold hentes fra oppgis.
        /// Dersom det hentes data fra flere tabeller, sak alle oppgis - separert med komma.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Soektype {
            get {
                return this.SoektypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SoektypeField, value) != true)) {
                    this.SoektypeField = value;
                    this.RaisePropertyChanged("Soektype");
                }
            }
        }
        
        /// <summary>
        /// Sortering av søkeresultat.
        /// Angir hvilke felt som skal benyttes ved sortering av søkeresultat.
        /// Komma benyttes for å separere angivelse av flere felt. DESC benyttes for synkende sortering.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sortering {
            get {
                return this.SorteringField;
            }
            set {
                if ((object.ReferenceEquals(this.SorteringField, value) != true)) {
                    this.SorteringField = value;
                    this.RaisePropertyChanged("Sortering");
                }
            }
        }
        
        /// <summary>
        /// Angir stilark dersom søket er en rapport.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stilark {
            get {
                return this.StilarkField;
            }
            set {
                if ((object.ReferenceEquals(this.StilarkField, value) != true)) {
                    this.StilarkField = value;
                    this.RaisePropertyChanged("Stilark");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom søket skal utføres ved oppstart, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> UtfoeresVedOppstart {
            get {
                return this.UtfoeresVedOppstartField;
            }
            set {
                if ((this.UtfoeresVedOppstartField.Equals(value) != true)) {
                    this.UtfoeresVedOppstartField = value;
                    this.RaisePropertyChanged("UtfoeresVedOppstart");
                }
            }
        }
        
        /// <summary>
        /// Variant.
        /// Feltlengde: 50 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variant {
            get {
                return this.VariantField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantField, value) != true)) {
                    this.VariantField = value;
                    this.RaisePropertyChanged("Variant");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom bruker skal kunne endre kriterier før søket utføres, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VisKriterier {
            get {
                return this.VisKriterierField;
            }
            set {
                if ((this.VisKriterierField.Equals(value) != true)) {
                    this.VisKriterierField = value;
                    this.RaisePropertyChanged("VisKriterier");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom poster som ikke er lest av noen innen administrativ enhet skal markeres, ikke valgt ellers.
        /// Gjelder administrativ inndeling for pålogget person/rolle.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VisUlesteForAdmInndeling {
            get {
                return this.VisUlesteForAdmInndelingField;
            }
            set {
                if ((this.VisUlesteForAdmInndelingField.Equals(value) != true)) {
                    this.VisUlesteForAdmInndelingField = value;
                    this.RaisePropertyChanged("VisUlesteForAdmInndeling");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom poster som ikke er lest av person skal markeres, ikke valgt ellers.
        /// Gjelder pålogget person.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VisUlesteForPerson {
            get {
                return this.VisUlesteForPersonField;
            }
            set {
                if ((this.VisUlesteForPersonField.Equals(value) != true)) {
                    this.VisUlesteForPersonField = value;
                    this.RaisePropertyChanged("VisUlesteForPerson");
                }
            }
        }
        
        /// <summary>
        /// Contains a value that indicates which clients should display the search.
        /// </summary>
        /// <example>
        /// 0 - ePhorte Classic
        /// -1 - ePhorte in Outlook
        /// -2 - ePhorte in Sharepoint
        /// </example>
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public System.Nullable<int> KlientType {
            get {
                return this.KlientTypeField;
            }
            set {
                if ((this.KlientTypeField.Equals(value) != true)) {
                    this.KlientTypeField = value;
                    this.RaisePropertyChanged("KlientType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PresedensHenvisninger", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class PresedensHenvisninger : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Presedens HenvisningFraPresedensField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HenvisningFraPresedensIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Presedens HenvisningTilPresedensField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HenvisningTilPresedensIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MerknadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ToveisHenvisningField;
        
        /// <summary>
        /// Presedensen det henvises fra.
        /// </summary>
        /// <value>Inneholder attributter som beskriver presedensen det henvises fra.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Presedens HenvisningFraPresedens {
            get {
                return this.HenvisningFraPresedensField;
            }
            set {
                if ((object.ReferenceEquals(this.HenvisningFraPresedensField, value) != true)) {
                    this.HenvisningFraPresedensField = value;
                    this.RaisePropertyChanged("HenvisningFraPresedens");
                }
            }
        }
        
        /// <summary>
        /// Referanse til presedensen det henvises fra.
        /// Mappes til NOARK4 feltet PH.FPSID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HenvisningFraPresedensId {
            get {
                return this.HenvisningFraPresedensIdField;
            }
            set {
                if ((object.ReferenceEquals(this.HenvisningFraPresedensIdField, value) != true)) {
                    this.HenvisningFraPresedensIdField = value;
                    this.RaisePropertyChanged("HenvisningFraPresedensId");
                }
            }
        }
        
        /// <summary>
        /// Presedensen det henvises til.
        /// </summary>
        /// <value>Inneholder attributter som beskriver presedensen det henvises til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Presedens HenvisningTilPresedens {
            get {
                return this.HenvisningTilPresedensField;
            }
            set {
                if ((object.ReferenceEquals(this.HenvisningTilPresedensField, value) != true)) {
                    this.HenvisningTilPresedensField = value;
                    this.RaisePropertyChanged("HenvisningTilPresedens");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til presedensen det henvises til.
        /// Mappes til NOARK4 feltet PH.TPSID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HenvisningTilPresedensId {
            get {
                return this.HenvisningTilPresedensIdField;
            }
            set {
                if ((object.ReferenceEquals(this.HenvisningTilPresedensIdField, value) != true)) {
                    this.HenvisningTilPresedensIdField = value;
                    this.RaisePropertyChanged("HenvisningTilPresedensId");
                }
            }
        }
        
        /// <summary>
        /// Merknad.
        /// Feltlengde: 255 tegn.
        /// Mappes til NOARK4 feltet PH.MERKNAD.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Merknad {
            get {
                return this.MerknadField;
            }
            set {
                if ((object.ReferenceEquals(this.MerknadField, value) != true)) {
                    this.MerknadField = value;
                    this.RaisePropertyChanged("Merknad");
                }
            }
        }
        
        /// <summary>
        /// Valgt dersom henvisning er toveis, ikke valgt ellers.
        /// Mappes til NOARK4 feltet PH.TOVEIS.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ToveisHenvisning {
            get {
                return this.ToveisHenvisningField;
            }
            set {
                if ((this.ToveisHenvisningField.Equals(value) != true)) {
                    this.ToveisHenvisningField = value;
                    this.RaisePropertyChanged("ToveisHenvisning");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Soekekriterie", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Soekekriterie : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeltnavnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GjelderForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KanEndresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.PredefinertSoek PredefinertSoekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PredefinertSoekIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReellVerdiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoektypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SorteringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TabellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VerdiField;
        
        /// <summary>
        /// Fieldname in the database - Navn på databasefelt man skal søke etter.
        /// Feltlengde: 25 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Feltnavn {
            get {
                return this.FeltnavnField;
            }
            set {
                if ((object.ReferenceEquals(this.FeltnavnField, value) != true)) {
                    this.FeltnavnField = value;
                    this.RaisePropertyChanged("Feltnavn");
                }
            }
        }
        
        /// <summary>
        /// - Angir hvem søket gjelder for.
        /// -1 angir at alle har tilgang.
        /// Negativt tall betyr at søket er begrenset ti en bestemt administrativ inndeling (AdministrativInndeling.Id).
        /// Positivt tall betyr at søket er begresnet til en bestemt personal (Personnavn.Id)
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GjelderFor {
            get {
                return this.GjelderForField;
            }
            set {
                if ((this.GjelderForField.Equals(value) != true)) {
                    this.GjelderForField = value;
                    this.RaisePropertyChanged("GjelderFor");
                }
            }
        }
        
        /// <summary>
        /// Indicates if the criteria can be changed before executing - Valgt dersom bruker skal kunne endre dette kriteriet før søket utføres, ikke valgt ellers.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KanEndres {
            get {
                return this.KanEndresField;
            }
            set {
                if ((this.KanEndresField.Equals(value) != true)) {
                    this.KanEndresField = value;
                    this.RaisePropertyChanged("KanEndres");
                }
            }
        }
        
        /// <summary>
        /// Logical operator AND/OR - Operand for søk (AND/OR).
        /// Feltlengde: 10 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operand {
            get {
                return this.OperandField;
            }
            set {
                if ((object.ReferenceEquals(this.OperandField, value) != true)) {
                    this.OperandField = value;
                    this.RaisePropertyChanged("Operand");
                }
            }
        }
        
        /// <summary>
        /// The predefined search the criteria belongs to - Søket dette kriteriet tilhører.
        /// </summary>
        /// <value>Inneholder detaljer om søket dette kriteriet tilhører.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.PredefinertSoek PredefinertSoek {
            get {
                return this.PredefinertSoekField;
            }
            set {
                if ((object.ReferenceEquals(this.PredefinertSoekField, value) != true)) {
                    this.PredefinertSoekField = value;
                    this.RaisePropertyChanged("PredefinertSoek");
                }
            }
        }
        
        /// <summary>
        /// Reference to the predefined search - Referanse til søket dette kriteriet tilhører.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PredefinertSoekId {
            get {
                return this.PredefinertSoekIdField;
            }
            set {
                if ((this.PredefinertSoekIdField.Equals(value) != true)) {
                    this.PredefinertSoekIdField = value;
                    this.RaisePropertyChanged("PredefinertSoekId");
                }
            }
        }
        
        /// <summary>
        /// Real value to search for in the database - Reell verdi man skal søke etter i databasen.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReellVerdi {
            get {
                return this.ReellVerdiField;
            }
            set {
                if ((object.ReferenceEquals(this.ReellVerdiField, value) != true)) {
                    this.ReellVerdiField = value;
                    this.RaisePropertyChanged("ReellVerdi");
                }
            }
        }
        
        /// <summary>
        /// Search type - Søketype.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Soektype {
            get {
                return this.SoektypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SoektypeField, value) != true)) {
                    this.SoektypeField = value;
                    this.RaisePropertyChanged("Soektype");
                }
            }
        }
        
        /// <summary>
        /// Sort order within the predefined search - Sortering av kriterie.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sortering {
            get {
                return this.SorteringField;
            }
            set {
                if ((object.ReferenceEquals(this.SorteringField, value) != true)) {
                    this.SorteringField = value;
                    this.RaisePropertyChanged("Sortering");
                }
            }
        }
        
        /// <summary>
        /// Database table the field belongs to - Databasetabell som feltet tilhører.
        /// Feltlengde: 30 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tabell {
            get {
                return this.TabellField;
            }
            set {
                if ((object.ReferenceEquals(this.TabellField, value) != true)) {
                    this.TabellField = value;
                    this.RaisePropertyChanged("Tabell");
                }
            }
        }
        
        /// <summary>
        /// Value that is displayed to the user. Could vary form the real value - Verdi som skal eksponeres for brukeren.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Verdi {
            get {
                return this.VerdiField;
            }
            set {
                if ((object.ReferenceEquals(this.VerdiField, value) != true)) {
                    this.VerdiField = value;
                    this.RaisePropertyChanged("Verdi");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TilgangTilInformasjon", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class TilgangTilInformasjon : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdministrativEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FraDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalenhet JournalenhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalenhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TilDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person TilgangOpphevetAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TilgangOpphevetAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Person TilgangTildeltAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangTildeltAvidField;
        
        /// <summary>
        /// Administrative enheten tilgangen er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om administrative enheten tilgangen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AdministrativEnhet {
            get {
                return this.AdministrativEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativEnhetField, value) != true)) {
                    this.AdministrativEnhetField = value;
                    this.RaisePropertyChanged("AdministrativEnhet");
                }
            }
        }
        
        /// <summary>
        /// Den administrative enhet som personen skal gis tilgang til.
        /// Tilsvarer NOARK4 feltet TJ.AUTAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdministrativEnhetId {
            get {
                return this.AdministrativEnhetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AdministrativEnhetIdField, value) != true)) {
                    this.AdministrativEnhetIdField = value;
                    this.RaisePropertyChanged("AdministrativEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Den dato tilgangen gjelder fra.
        /// Tilsvarer NOARK4 feltet TJ.FRADATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FraDato {
            get {
                return this.FraDatoField;
            }
            set {
                if ((this.FraDatoField.Equals(value) != true)) {
                    this.FraDatoField = value;
                    this.RaisePropertyChanged("FraDato");
                }
            }
        }
        
        /// <summary>
        /// Jouranalenheten tilgangen er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om journalenheten tilgangen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalenhet Journalenhet {
            get {
                return this.JournalenhetField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetField, value) != true)) {
                    this.JournalenhetField = value;
                    this.RaisePropertyChanged("Journalenhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den journalenhet som personen skal gis tilgang til.
        /// Skal ikke kunne angis dersom attributtet AdministrativEnhetId har verdi forskjellig fra 0.
        /// Tilsvarer NOARK4 feltet TJ.JENHET.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalenhetId {
            get {
                return this.JournalenhetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalenhetIdField, value) != true)) {
                    this.JournalenhetIdField = value;
                    this.RaisePropertyChanged("JournalenhetId");
                }
            }
        }
        
        /// <summary>
        /// Personen tilgangen er knyttet til.
        /// </summary>
        /// <value>Inneholder detaljer om personen tilgangen er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        /// <summary>
        /// Referanse til personen tilgangener knyttet til.
        /// Tilsvarer NOARK4 feltet TJ.PEID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonIdField, value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        /// <summary>
        /// Den dato tilgangen gjelder til.
        /// Tilsvarer NOARK4 feltet TJ.TILDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TilDato {
            get {
                return this.TilDatoField;
            }
            set {
                if ((this.TilDatoField.Equals(value) != true)) {
                    this.TilDatoField = value;
                    this.RaisePropertyChanged("TilDato");
                }
            }
        }
        
        /// <summary>
        /// Personen som opphever en tilgang.
        /// </summary>
        /// <value>Inneholder detaljer om personen som opphevet tilgangen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person TilgangOpphevetAv {
            get {
                return this.TilgangOpphevetAvField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangOpphevetAvField, value) != true)) {
                    this.TilgangOpphevetAvField = value;
                    this.RaisePropertyChanged("TilgangOpphevetAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til til den personen som opphever tilgangen som i utgangspunktet ikke var
        /// tidsavgrenset eller hvor tilgangen går ut en gang i framtiden.
        /// Tilsvarer NOARK4 feltet TJ.AUTOPPAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TilgangOpphevetAvid {
            get {
                return this.TilgangOpphevetAvidField;
            }
            set {
                if ((this.TilgangOpphevetAvidField.Equals(value) != true)) {
                    this.TilgangOpphevetAvidField = value;
                    this.RaisePropertyChanged("TilgangOpphevetAvid");
                }
            }
        }
        
        /// <summary>
        /// Personen som ga personen tilgang til journalenheten.
        /// </summary>
        /// <value>Inneholder detaljer om personen som ga personen tilgang til journalenheten.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Person TilgangTildeltAv {
            get {
                return this.TilgangTildeltAvField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangTildeltAvField, value) != true)) {
                    this.TilgangTildeltAvField = value;
                    this.RaisePropertyChanged("TilgangTildeltAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til til den personen som ga personen tilgang til journalenheten.
        /// Tilsvarer NOARK4 feltet TJ.AUTAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangTildeltAvid {
            get {
                return this.TilgangTildeltAvidField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangTildeltAvidField, value) != true)) {
                    this.TilgangTildeltAvidField = value;
                    this.RaisePropertyChanged("TilgangTildeltAvid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tilleggsinformasjon", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Tilleggsinformasjon : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse DokumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DokumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Informasjonstype InformasjonstypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformasjonstypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalpostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OppbevaresTilDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn PaaVegneAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaaVegneAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn RegistrertAvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrertAvidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RegistrertDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RegistrertKlokkeslettField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RekkefoelgenrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SakIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe TilgangsgruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangsgruppeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Tilgangskode TilgangskodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilgangskodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TilleggsinfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersjonsnrIdField;
        
        /// <summary>
        /// Saksdokumentets dokumentbeskrivelse.
        /// </summary>
        /// <value>Inneholder attributter som beskriver saksdokumentet tilleggsinformasjonen er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Dokumentbeskrivelse Dokument {
            get {
                return this.DokumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentField, value) != true)) {
                    this.DokumentField = value;
                    this.RaisePropertyChanged("Dokument");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til saksdokumentets dokumentbeskrivelse.
        /// Tilsvarer NOARK4 feltet TI.DOKID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DokumentId {
            get {
                return this.DokumentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DokumentIdField, value) != true)) {
                    this.DokumentIdField = value;
                    this.RaisePropertyChanged("DokumentId");
                }
            }
        }
        
        /// <summary>
        /// Unik ID.
        /// Tildeles automatisk og kan ikke endres.
        /// Tilsvarer NOARK4 feltet TI.ID
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Hvilken type tilleggsinformasjonstype dette er.
        /// </summary>
        /// <value>Inneholder attributter som beskriver hvilken type tilleggsinformasjonstype dette er.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Informasjonstype Informasjonstype {
            get {
                return this.InformasjonstypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InformasjonstypeField, value) != true)) {
                    this.InformasjonstypeField = value;
                    this.RaisePropertyChanged("Informasjonstype");
                }
            }
        }
        
        /// <summary>
        /// Referanse til hvilken type tilleggsinformasjonstype dette er.
        /// Feltlengde: 10 tegn.
        /// Tilsvarer NOARK4 feltet TI.ITYPE
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InformasjonstypeId {
            get {
                return this.InformasjonstypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InformasjonstypeIdField, value) != true)) {
                    this.InformasjonstypeIdField = value;
                    this.RaisePropertyChanged("InformasjonstypeId");
                }
            }
        }
        
        /// <summary>
        /// Journalposten tilleggsinformasjonen er tilknyttet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver journalposten tilleggsinformasjonen er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til journalpost.
        /// Tilsvarer NOARK4 feltet TI.JPID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalpostId {
            get {
                return this.JournalpostIdField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostIdField, value) != true)) {
                    this.JournalpostIdField = value;
                    this.RaisePropertyChanged("JournalpostId");
                }
            }
        }
        
        /// <summary>
        /// Tilleggsinformasjonen kan/skal slettes når denne dato er passert.
        /// Tilsvarer NOARK4 feltet TI.OPPBEDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OppbevaresTilDato {
            get {
                return this.OppbevaresTilDatoField;
            }
            set {
                if ((this.OppbevaresTilDatoField.Equals(value) != true)) {
                    this.OppbevaresTilDatoField = value;
                    this.RaisePropertyChanged("OppbevaresTilDato");
                }
            }
        }
        
        /// <summary>
        /// Personen som, på vegne av andre, registrerte tilleggsinformasjonen eller utførte aktiviteten som logges.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som, på vegne av andre, registrerte tilleggsinformasjonen eller utførte aktiviteten som logges.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn PaaVegneAv {
            get {
                return this.PaaVegneAvField;
            }
            set {
                if ((object.ReferenceEquals(this.PaaVegneAvField, value) != true)) {
                    this.PaaVegneAvField = value;
                    this.RaisePropertyChanged("PaaVegneAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til person som har utført operasjon på vegne av en annen.
        /// Dersom registreringen utføres av en annen enn den som har ansvaret for tilleggsinformasjonen
        /// (f.eks godkjenningen, autorisasjonen etc), registreres Personnavn ID til denne her. Hvis ikke
        /// oppdateres attributtet ut fra innlogget bruker, så fremt logging av tidspunkt og bruker er
        /// angitt for informasjonstypen.
        /// Tilsvarer NOARK4 feltet TI.PVGAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaaVegneAvid {
            get {
                return this.PaaVegneAvidField;
            }
            set {
                if ((object.ReferenceEquals(this.PaaVegneAvidField, value) != true)) {
                    this.PaaVegneAvidField = value;
                    this.RaisePropertyChanged("PaaVegneAvid");
                }
            }
        }
        
        /// <summary>
        /// Personen som registrerte tilleggsinformasjonen eller utførte aktiviteten som logges.
        /// </summary>
        /// <value>Inneholder attributter som beskriver personen som registrerte tilleggsinformasjonen eller utførte aktiviteten som logges.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn RegistrertAv {
            get {
                return this.RegistrertAvField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrertAvField, value) != true)) {
                    this.RegistrertAvField = value;
                    this.RaisePropertyChanged("RegistrertAv");
                }
            }
        }
        
        /// <summary>
        /// Referanse til personen som registrerte tilleggsinformasjonen eller utførte aktiviteten som logges.
        /// Tilsvarer NOARK4 feltet TI.REGAV.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrertAvid {
            get {
                return this.RegistrertAvidField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrertAvidField, value) != true)) {
                    this.RegistrertAvidField = value;
                    this.RaisePropertyChanged("RegistrertAvid");
                }
            }
        }
        
        /// <summary>
        /// Dato for registrering.
        /// Tilsvarer NOARK4 feltet TI.REGDATO.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RegistrertDato {
            get {
                return this.RegistrertDatoField;
            }
            set {
                if ((this.RegistrertDatoField.Equals(value) != true)) {
                    this.RegistrertDatoField = value;
                    this.RaisePropertyChanged("RegistrertDato");
                }
            }
        }
        
        /// <summary>
        /// Registreringstidspunkt.
        /// Tilsvarer NOARK4 feltet TI.REGKL.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RegistrertKlokkeslett {
            get {
                return this.RegistrertKlokkeslettField;
            }
            set {
                if ((this.RegistrertKlokkeslettField.Equals(value) != true)) {
                    this.RegistrertKlokkeslettField = value;
                    this.RaisePropertyChanged("RegistrertKlokkeslett");
                }
            }
        }
        
        /// <summary>
        /// Angir sorteringsrekkefølge under den posten tilleggsinformasjonen er tilknyttet.
        /// Tilsvarer NOARK4 feltet TI.RNR.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rekkefoelgenr {
            get {
                return this.RekkefoelgenrField;
            }
            set {
                if ((object.ReferenceEquals(this.RekkefoelgenrField, value) != true)) {
                    this.RekkefoelgenrField = value;
                    this.RaisePropertyChanged("Rekkefoelgenr");
                }
            }
        }
        
        /// <summary>
        /// Saken tilleggsinformasjonen er tilknyttet.
        /// </summary>
        /// <value>Inneholder attributter som beskriver saken tilleggsinformasjonen er tilknyttet.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Referanse til sak.
        /// Benyttes alltid bortsett fra når tilleggsinformasjonen er tilknyttet et møtedokument som ikke inngår i en (arkiv)sak.
        /// Tilsvarer NOARK4 feltet TI.SAID.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SakId {
            get {
                return this.SakIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SakIdField, value) != true)) {
                    this.SakIdField = value;
                    this.RaisePropertyChanged("SakId");
                }
            }
        }
        
        /// <summary>
        /// Tilgangsgruppe.
        /// </summary>
        /// <value>Inneholder attributter som beskriver tilgangsgruppe.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangsgruppe Tilgangsgruppe {
            get {
                return this.TilgangsgruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeField, value) != true)) {
                    this.TilgangsgruppeField = value;
                    this.RaisePropertyChanged("Tilgangsgruppe");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangsgruppe.
        /// Dersom tilgangskode er angitt, skal medlemmene av gruppen gis
        /// tilgang dersom de er klarert for tilgangskoden, selv om ikke autorisasjonen gjelder innenfor
        /// noen av de administrative enheter som er knyttet til saken(e) eller journalposten(e) som
        /// tilleggsinformasjonen er tilknyttet.
        /// Tilsvarer NOARK4 feltet TI.TGGRUPPE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangsgruppeId {
            get {
                return this.TilgangsgruppeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangsgruppeIdField, value) != true)) {
                    this.TilgangsgruppeIdField = value;
                    this.RaisePropertyChanged("TilgangsgruppeId");
                }
            }
        }
        
        /// <summary>
        /// Tilgangskode.
        /// </summary>
        /// <value>Inneholder attributter som beskriver tilgangskode.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Tilgangskode Tilgangskode {
            get {
                return this.TilgangskodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeField, value) != true)) {
                    this.TilgangskodeField = value;
                    this.RaisePropertyChanged("Tilgangskode");
                }
            }
        }
        
        /// <summary>
        /// Referanse til tilgangskode.
        /// Dersom tilleggsinformasjonen ikke skal være tilgjengelig for alle (interne brukere) som har
        /// tilgang til den sak eller det dokument den er knyttet til, kan en egen tilgangskode angis.
        /// Tilsvarer NOARK4 feltet TI.TGKODE.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TilgangskodeId {
            get {
                return this.TilgangskodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TilgangskodeIdField, value) != true)) {
                    this.TilgangskodeIdField = value;
                    this.RaisePropertyChanged("TilgangskodeId");
                }
            }
        }
        
        /// <summary>
        /// Teksten som utgjør tilleggsinformasjonen.
        /// Feltlengde: 255 tegn.
        /// Tilsvarer NOARK4 feltet TI.TEKST.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tilleggsinfo {
            get {
                return this.TilleggsinfoField;
            }
            set {
                if ((object.ReferenceEquals(this.TilleggsinfoField, value) != true)) {
                    this.TilleggsinfoField = value;
                    this.RaisePropertyChanged("Tilleggsinfo");
                }
            }
        }
        
        /// <summary>
        /// Referanse til en variant av versjonen.
        /// Tilsvarer NOARK4 feltet TI.VARIANT.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variant {
            get {
                return this.VariantField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantField, value) != true)) {
                    this.VariantField = value;
                    this.RaisePropertyChanged("Variant");
                }
            }
        }
        
        /// <summary>
        /// Referanse til versjon av saksdokument.
        /// Tilsvarer NOARK4 feltet TI.DOKVER.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersjonsnrId {
            get {
                return this.VersjonsnrIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VersjonsnrIdField, value) != true)) {
                    this.VersjonsnrIdField = value;
                    this.RaisePropertyChanged("VersjonsnrId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vedtak", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class Vedtak : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AnsvarligEnhetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AnsvarligEnhetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeskrivelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IverksattDatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IversettelsesfristField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Journalpost JournalpostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObjektIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObjektTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Sak SakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Personnavn SaksbehandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaksbehandlerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaksbehandlingstidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TittelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.Utvalg UtvalgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtvalgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.VedtakStatus VedtakStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VedtakStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.VedtakType VedtakTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VedtakTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> VedtaksdatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VedtaksnummerField;
        
        /// <summary>
        /// Den administrative enhet den adm. enhet som har ansvaret for oppfølging av vedtaket.
        /// </summary>
        /// <value>Inneholder attributter om den administrative enhet som har ansvaret for oppfølging av vedtaket.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.AdministrativInndeling AnsvarligEnhet {
            get {
                return this.AnsvarligEnhetField;
            }
            set {
                if ((object.ReferenceEquals(this.AnsvarligEnhetField, value) != true)) {
                    this.AnsvarligEnhetField = value;
                    this.RaisePropertyChanged("AnsvarligEnhet");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den adm. enhet som har ansvaret for oppfølging av vedtaket.
        /// Oppslag mot tabellen Administrativ inndeling.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AnsvarligEnhetId {
            get {
                return this.AnsvarligEnhetIdField;
            }
            set {
                if ((this.AnsvarligEnhetIdField.Equals(value) != true)) {
                    this.AnsvarligEnhetIdField = value;
                    this.RaisePropertyChanged("AnsvarligEnhetId");
                }
            }
        }
        
        /// <summary>
        /// Beskrivelse av vedtaket.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Beskrivelse {
            get {
                return this.BeskrivelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BeskrivelseField, value) != true)) {
                    this.BeskrivelseField = value;
                    this.RaisePropertyChanged("Beskrivelse");
                }
            }
        }
        
        /// <summary>
        /// Unik nøkkel for vedtak.
        /// Tildeles automatisk og kan ikke endres.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        /// <summary>
        /// Dato for iverksettelse av vedtak.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IverksattDato {
            get {
                return this.IverksattDatoField;
            }
            set {
                if ((this.IverksattDatoField.Equals(value) != true)) {
                    this.IverksattDatoField = value;
                    this.RaisePropertyChanged("IverksattDato");
                }
            }
        }
        
        /// <summary>
        /// Frist for iverksettelse av vedtak.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Iversettelsesfrist {
            get {
                return this.IversettelsesfristField;
            }
            set {
                if ((this.IversettelsesfristField.Equals(value) != true)) {
                    this.IversettelsesfristField = value;
                    this.RaisePropertyChanged("Iversettelsesfrist");
                }
            }
        }
        
        /// <summary>
        /// Journalposten vedtaket er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver journalposten lenken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Journalpost Journalpost {
            get {
                return this.JournalpostField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalpostField, value) != true)) {
                    this.JournalpostField = value;
                    this.RaisePropertyChanged("Journalpost");
                }
            }
        }
        
        /// <summary>
        /// Unik referanse til objektet som vedtaket er knyttet til.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ObjektId {
            get {
                return this.ObjektIdField;
            }
            set {
                if ((this.ObjektIdField.Equals(value) != true)) {
                    this.ObjektIdField = value;
                    this.RaisePropertyChanged("ObjektId");
                }
            }
        }
        
        /// <summary>
        /// Angir hvor objektet skal vises.
        /// Lovlige verdier: 0 - sak, 1 - journalpost
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ObjektType {
            get {
                return this.ObjektTypeField;
            }
            set {
                if ((this.ObjektTypeField.Equals(value) != true)) {
                    this.ObjektTypeField = value;
                    this.RaisePropertyChanged("ObjektType");
                }
            }
        }
        
        /// <summary>
        /// Saken vedtaket er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver saken lenken er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Sak Sak {
            get {
                return this.SakField;
            }
            set {
                if ((object.ReferenceEquals(this.SakField, value) != true)) {
                    this.SakField = value;
                    this.RaisePropertyChanged("Sak");
                }
            }
        }
        
        /// <summary>
        /// Saksbehandler som har ansvaret for oppfølging av vedtaket.
        /// </summary>
        /// <value>Inneholder attributter om personen som er saksbehandler som har ansvaret for oppfølging av vedtaket.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Personnavn Saksbehandler {
            get {
                return this.SaksbehandlerField;
            }
            set {
                if ((object.ReferenceEquals(this.SaksbehandlerField, value) != true)) {
                    this.SaksbehandlerField = value;
                    this.RaisePropertyChanged("Saksbehandler");
                }
            }
        }
        
        /// <summary>
        /// Referanse til den person som har ansvaret for oppfølging av vedtaket.
        /// Oppslag mot tabellen Personnavn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SaksbehandlerId {
            get {
                return this.SaksbehandlerIdField;
            }
            set {
                if ((this.SaksbehandlerIdField.Equals(value) != true)) {
                    this.SaksbehandlerIdField = value;
                    this.RaisePropertyChanged("SaksbehandlerId");
                }
            }
        }
        
        /// <summary>
        /// Angir saksbehandlingstid i antall dager.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Saksbehandlingstid {
            get {
                return this.SaksbehandlingstidField;
            }
            set {
                if ((this.SaksbehandlingstidField.Equals(value) != true)) {
                    this.SaksbehandlingstidField = value;
                    this.RaisePropertyChanged("Saksbehandlingstid");
                }
            }
        }
        
        /// <summary>
        /// Vedtakets tittel.
        /// Obligatorisk.
        /// Feltlengde: 255 tegn.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tittel {
            get {
                return this.TittelField;
            }
            set {
                if ((object.ReferenceEquals(this.TittelField, value) != true)) {
                    this.TittelField = value;
                    this.RaisePropertyChanged("Tittel");
                }
            }
        }
        
        /// <summary>
        /// Utvalget som foretok vedtaket.
        /// </summary>
        /// <value>Inneholder detaljer om utvalget som foretok vedtaket.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.Utvalg Utvalg {
            get {
                return this.UtvalgField;
            }
            set {
                if ((object.ReferenceEquals(this.UtvalgField, value) != true)) {
                    this.UtvalgField = value;
                    this.RaisePropertyChanged("Utvalg");
                }
            }
        }
        
        /// <summary>
        /// Referanse til utvalget som foretok vedtaket.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtvalgId {
            get {
                return this.UtvalgIdField;
            }
            set {
                if ((this.UtvalgIdField.Equals(value) != true)) {
                    this.UtvalgIdField = value;
                    this.RaisePropertyChanged("UtvalgId");
                }
            }
        }
        
        /// <summary>
        /// Status for vedtaksoppfølgingen.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver status for vedtaksoppfølgingen.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.VedtakStatus VedtakStatus {
            get {
                return this.VedtakStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.VedtakStatusField, value) != true)) {
                    this.VedtakStatusField = value;
                    this.RaisePropertyChanged("VedtakStatus");
                }
            }
        }
        
        /// <summary>
        /// Referanse til status.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VedtakStatusId {
            get {
                return this.VedtakStatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VedtakStatusIdField, value) != true)) {
                    this.VedtakStatusIdField = value;
                    this.RaisePropertyChanged("VedtakStatusId");
                }
            }
        }
        
        /// <summary>
        /// Vedtakstype som vedtaket er knyttet til.
        /// </summary>
        /// <value>Inneholder informasjon som beskriver vedtakstypen vedtaket er knyttet til.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.VedtakType VedtakType {
            get {
                return this.VedtakTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VedtakTypeField, value) != true)) {
                    this.VedtakTypeField = value;
                    this.RaisePropertyChanged("VedtakType");
                }
            }
        }
        
        /// <summary>
        /// Referanse til vedtakstype.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VedtakTypeId {
            get {
                return this.VedtakTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VedtakTypeIdField, value) != true)) {
                    this.VedtakTypeIdField = value;
                    this.RaisePropertyChanged("VedtakTypeId");
                }
            }
        }
        
        /// <summary>
        /// Vedtaksdato.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Vedtaksdato {
            get {
                return this.VedtaksdatoField;
            }
            set {
                if ((this.VedtaksdatoField.Equals(value) != true)) {
                    this.VedtaksdatoField = value;
                    this.RaisePropertyChanged("Vedtaksdato");
                }
            }
        }
        
        /// <summary>
        /// Vedtaksnummer
        /// Tildeles automatisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Vedtaksnummer {
            get {
                return this.VedtaksnummerField;
            }
            set {
                if ((this.VedtaksnummerField.Equals(value) != true)) {
                    this.VedtaksnummerField = value;
                    this.RaisePropertyChanged("Vedtaksnummer");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om status for vedtaksoppfølging.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VedtakStatus", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class VedtakStatus : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// Inneholder informasjon om vedtakstyper for vedtaksoppfølging.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VedtakType", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class VedtakType : Gecko.NCore.Client.ObjectModel.V1.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BetegnelseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        /// <summary>
        /// Betegnelse i klartekst.
        /// Feltlengde: 70 tegn.
        /// Obligatorisk.
        /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Betegnelse {
            get {
                return this.BetegnelseField;
            }
            set {
                if ((object.ReferenceEquals(this.BetegnelseField, value) != true)) {
                    this.BetegnelseField = value;
                    this.RaisePropertyChanged("Betegnelse");
                }
            }
        }
        
        /// <summary>
        /// Kortkode.
        /// Feltlengde: 10 tegn.
        /// /// </summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    /// <summary>
    /// 
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModifiedDataObject", Namespace="http://schemas.datacontract.org/2004/07/Ephorte.ServiceModel.Contracts.ObjectMode" +
        "l.V1")]
    [System.SerializableAttribute()]
    public partial class ModifiedDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.DataObject ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.ObjectModel.V1.DataObject OriginalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the modified.
        /// </summary>
        /// <value>The modified.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.DataObject Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedField, value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the original.
        /// </summary>
        /// <value>The original.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.ObjectModel.V1.DataObject Original {
            get {
                return this.OriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalField, value) != true)) {
                    this.OriginalField = value;
                    this.RaisePropertyChanged("Original");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// This interface defines the service contract for the EIS Object
    /// Model Service. The EIS Object Model Service can be used to perform
    /// actions and queries against the ePhorte© object model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.gecko.no/ephorte/services/objectmodel/v1", ConfigurationName="ObjectModel.V1.ObjectModelService")]
    public interface ObjectModelService {
        
        /// <summary>
        /// Executes the specified query and returns a result set
        /// corresponding to any matching objects.
        /// </summary>
        /// <param name="identity">The identity.</param>
        /// <param name="query">The query.</param>
        /// <returns>
        /// A collection of <see cref="T:DataObject">data objects</see>
        /// matching the query.
        /// </returns>
        /// <exception cref="T:System.ArgumentException">
        /// Throws an argument exception if the <paramref name="query" /> is null or empty.
        /// </exception>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ExecuteSel" +
            "ect", ReplyAction="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ExecuteSel" +
            "ectResponse")]
        Gecko.NCore.Client.ObjectModel.V1.DataObject[] ExecuteSelect(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, string query);
        
        /// <summary>
        /// Executes the specified query and returns an integer
        /// corresponding to the number of matching objects.
        /// </summary>
        /// <param name="identity">The identity.</param>
        /// <param name="query">The query.</param>
        /// <returns>
        /// An <see cref="T:System.Int32" /> containing the
        /// number of objects matching the query.
        /// </returns>
        /// <exception cref="T:System.ArgumentException">
        /// Throws an argument exception if the
        /// <paramref name="query" /> is <c>null</c> or <see cref="F:System.String.Empty" />.
        /// </exception>
        /// <remarks>
        /// <c>@skip</c>, <c>@take</c> and <c>@orderBy</c> are ignored by this method.
        /// </remarks>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ExecuteSel" +
            "ectCount", ReplyAction="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ExecuteSel" +
            "ectCountResponse")]
        int ExecuteSelectCount(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, string query);
        
        /// <summary>
        /// Applies changes made to the <paramref name="modifiedObject" />.
        /// </summary>
        /// <param name="identity">The identity.</param>
        /// <param name="originalObject">The original object.</param>
        /// <param name="modifiedObject">The modified object.</param>
        /// <returns></returns>
        /// <exception cref="T:System.ArgumentNullException">
        /// Throws an argument null exception if the
        /// <paramref name="modifiedObject" /> is <c>null</c>.
        /// </exception>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ExecuteUpd" +
            "ate", ReplyAction="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ExecuteUpd" +
            "ateResponse")]
        Gecko.NCore.Client.ObjectModel.V1.DataObject ExecuteUpdate(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, Gecko.NCore.Client.ObjectModel.V1.DataObject originalObject, Gecko.NCore.Client.ObjectModel.V1.DataObject modifiedObject);
        
        /// <summary>
        /// Applies changes made to the <paramref name="modifiedObjects" />.
        /// </summary>
        /// <param name="identity">The identity.</param>
        /// <param name="modifiedObjects">The modified objects.</param>
        /// <returns></returns>
        /// <exception cref="T:System.ArgumentNullException">
        /// Throws an argument null exception if the
        /// <paramref name="modifiedObjects" /> parameter is null.
        /// </exception>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ExecuteBat" +
            "chUpdate", ReplyAction="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ExecuteBat" +
            "chUpdateResponse")]
        Gecko.NCore.Client.ObjectModel.V1.DataObject[] ExecuteBatchUpdate(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, Gecko.NCore.Client.ObjectModel.V1.ModifiedDataObject[] modifiedObjects);
        
        /// <summary>
        /// Executes the insert.
        /// </summary>
        /// <param name="identity">The identity.</param>
        /// <param name="modifiedObject">The modified object.</param>
        /// <returns></returns>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ExecuteIns" +
            "ert", ReplyAction="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ExecuteIns" +
            "ertResponse")]
        Gecko.NCore.Client.ObjectModel.V1.DataObject ExecuteInsert(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, Gecko.NCore.Client.ObjectModel.V1.DataObject modifiedObject);
        
        /// <summary>
        /// Deletes the objects matching the specified query.
        /// </summary>
        /// <param name="identity">The identity.</param>
        /// <param name="dataObject">The data object.</param>
        /// <exception cref="T:System.ArgumentException">
        /// Throws an argument exception if the <paramref name="dataObject" />
        /// is <c>null</c>.
        /// </exception>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ExecuteDel" +
            "ete", ReplyAction="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ExecuteDel" +
            "eteResponse")]
        void ExecuteDelete(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, Gecko.NCore.Client.ObjectModel.V1.DataObject dataObject);
        
        /// <summary>
        /// Applies the defaults.
        /// </summary>
        /// <param name="identity">The identity.</param>
        /// <param name="dataObject">The instance.</param>
        /// <returns></returns>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ApplyDefau" +
            "lts", ReplyAction="http://www.gecko.no/ephorte/services/objectmodel/v1/ObjectModelService/ApplyDefau" +
            "ltsResponse")]
        Gecko.NCore.Client.ObjectModel.V1.DataObject ApplyDefaults(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, Gecko.NCore.Client.ObjectModel.V1.DataObject dataObject);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ObjectModelServiceChannel : Gecko.NCore.Client.ObjectModel.V1.ObjectModelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObjectModelServiceClient : System.ServiceModel.ClientBase<Gecko.NCore.Client.ObjectModel.V1.ObjectModelService>, Gecko.NCore.Client.ObjectModel.V1.ObjectModelService {
        
        public ObjectModelServiceClient() {
        }
        
        public ObjectModelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ObjectModelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ObjectModelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ObjectModelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Gecko.NCore.Client.ObjectModel.V1.DataObject[] ExecuteSelect(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, string query) {
            return base.Channel.ExecuteSelect(identity, query);
        }
        
        public int ExecuteSelectCount(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, string query) {
            return base.Channel.ExecuteSelectCount(identity, query);
        }
        
        public Gecko.NCore.Client.ObjectModel.V1.DataObject ExecuteUpdate(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, Gecko.NCore.Client.ObjectModel.V1.DataObject originalObject, Gecko.NCore.Client.ObjectModel.V1.DataObject modifiedObject) {
            return base.Channel.ExecuteUpdate(identity, originalObject, modifiedObject);
        }
        
        public Gecko.NCore.Client.ObjectModel.V1.DataObject[] ExecuteBatchUpdate(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, Gecko.NCore.Client.ObjectModel.V1.ModifiedDataObject[] modifiedObjects) {
            return base.Channel.ExecuteBatchUpdate(identity, modifiedObjects);
        }
        
        public Gecko.NCore.Client.ObjectModel.V1.DataObject ExecuteInsert(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, Gecko.NCore.Client.ObjectModel.V1.DataObject modifiedObject) {
            return base.Channel.ExecuteInsert(identity, modifiedObject);
        }
        
        public void ExecuteDelete(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, Gecko.NCore.Client.ObjectModel.V1.DataObject dataObject) {
            base.Channel.ExecuteDelete(identity, dataObject);
        }
        
        public Gecko.NCore.Client.ObjectModel.V1.DataObject ApplyDefaults(Gecko.NCore.Client.ObjectModel.V1.EphorteIdentity identity, Gecko.NCore.Client.ObjectModel.V1.DataObject dataObject) {
            return base.Channel.ApplyDefaults(identity, dataObject);
        }
    }
}
