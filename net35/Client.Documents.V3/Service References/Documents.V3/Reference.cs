//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gecko.NCore.Client.Documents.V3 {
    using System.Runtime.Serialization;
    using System;
    
    
    /// <summary>
    /// Defines the identity of the user executing the request.
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EphorteIdentity", Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
    [System.SerializableAttribute()]
    public partial class EphorteIdentity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalSystemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the database.
        /// </summary>
        /// <value>The database.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Database {
            get {
                return this.DatabaseField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseField, value) != true)) {
                    this.DatabaseField = value;
                    this.RaisePropertyChanged("Database");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the password.
        /// </summary>
        /// <value>The password.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the role.
        /// </summary>
        /// <value>The role.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the username.
        /// </summary>
        /// <value>The username.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the name of the external system.
        /// </summary>
        /// <value>The name of the external system.</value>
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string ExternalSystemName {
            get {
                return this.ExternalSystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalSystemNameField, value) != true)) {
                    this.ExternalSystemNameField = value;
                    this.RaisePropertyChanged("ExternalSystemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// DocumentCriteria
    /// </summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentCriteria", Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
    [System.SerializableAttribute()]
    public partial class DocumentCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gecko.NCore.Client.Documents.V3.EphorteIdentity EphorteIdentityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the document id.
        /// </summary>
        /// <value>The document id.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentId {
            get {
                return this.DocumentIdField;
            }
            set {
                if ((this.DocumentIdField.Equals(value) != true)) {
                    this.DocumentIdField = value;
                    this.RaisePropertyChanged("DocumentId");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the EphorteIdentity.
        /// </summary>
        /// <value>The EphorteIdentity.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gecko.NCore.Client.Documents.V3.EphorteIdentity EphorteIdentity {
            get {
                return this.EphorteIdentityField;
            }
            set {
                if ((object.ReferenceEquals(this.EphorteIdentityField, value) != true)) {
                    this.EphorteIdentityField = value;
                    this.RaisePropertyChanged("EphorteIdentity");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the variant.
        /// </summary>
        /// <value>The variant.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variant {
            get {
                return this.VariantField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantField, value) != true)) {
                    this.VariantField = value;
                    this.RaisePropertyChanged("Variant");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the version.
        /// </summary>
        /// <value>The version.</value>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <summary>
    /// Defines the <see cref="T:System.ServiceModel.ServiceContractAttribute">Service Contract</see> for <see cref="T:IDocumentService" /> end points.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3", ConfigurationName="Documents.V3.DocumentService")]
    public interface DocumentService {
        
        /// <summary>
        /// Uploads the file.
        /// </summary>
        /// <param name="uploadMessage">The upload message.</param>
        [System.ServiceModel.OperationContractAttribute(Action="UploadFile", ReplyAction="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/UploadFileRespo" +
            "nse")]
        Gecko.NCore.Client.Documents.V3.UploadReturnMessage UploadFile(Gecko.NCore.Client.Documents.V3.UploadMessage request);
        
        /// <summary>
        /// Check in document contents
        /// </summary>
        /// <param name="message">The message describing the document context.</param>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/Checkin", ReplyAction="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/CheckinResponse" +
            "")]
        Gecko.NCore.Client.Documents.V3.CheckinResponse Checkin(Gecko.NCore.Client.Documents.V3.CheckinMessage request);
        
        /// <summary>
        /// Cancels the checkout.
        /// </summary>
        /// <param name="cancelCheckoutRequest">The cancel checkout request.</param>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/CancelCheckout", ReplyAction="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/CancelCheckoutR" +
            "esponse")]
        Gecko.NCore.Client.Documents.V3.CancelCheckoutResponse CancelCheckout(Gecko.NCore.Client.Documents.V3.CancelCheckoutRequest request);
        
        /// <summary>
        /// Checks the out file.
        /// </summary>
        /// <param name="checkoutRequest">The checkout request.</param>
        /// <returns></returns>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/Checkout", ReplyAction="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/CheckoutRespons" +
            "e")]
        Gecko.NCore.Client.Documents.V3.CheckoutResponseMessage Checkout(Gecko.NCore.Client.Documents.V3.CheckoutRequest request);
        
        /// <summary>
        /// Gets the document.
        /// </summary>
        /// <param name="message">The message.</param>
        /// <returns></returns>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/GetDocumentCont" +
            "entBase", ReplyAction="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/GetDocumentCont" +
            "entBaseResponse")]
        Gecko.NCore.Client.Documents.V3.DocumentReturnMessage GetDocumentContentBase(Gecko.NCore.Client.Documents.V3.GetDocumentContentMessage request);
        
        /// <summary>
        /// Gets the document context by journal post.
        /// </summary>
        /// <param name="message">The message.</param>
        /// <returns></returns>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/GetDocumentCont" +
            "entByJournalPostId", ReplyAction="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/GetDocumentCont" +
            "entByJournalPostIdResponse")]
        Gecko.NCore.Client.Documents.V3.DocumentReturnMessage GetDocumentContentByJournalPostId(Gecko.NCore.Client.Documents.V3.GetJournalpostDocumentContentMessage request);
        
        /// <summary>
        /// Gets the content of the moete document.
        /// </summary>
        /// <param name="message">The message.</param>
        /// <returns></returns>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/GetDocumentCont" +
            "entByMoId", ReplyAction="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/GetDocumentCont" +
            "entByMoIdResponse")]
        Gecko.NCore.Client.Documents.V3.DocumentReturnMessage GetDocumentContentByMoId(Gecko.NCore.Client.Documents.V3.GetMoeteDocumentContentMessage request);
        
        /// <summary>
        /// Gets the content of the utvalg document.
        /// </summary>
        /// <param name="message">The message.</param>
        /// <returns></returns>
        [System.ServiceModel.OperationContractAttribute(Action="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/GetDocumentCont" +
            "entByUbId", ReplyAction="http://www.gecko.no/ephorte/services/documents/v3/DocumentService/GetDocumentCont" +
            "entByUbIdResponse")]
        Gecko.NCore.Client.Documents.V3.DocumentReturnMessage GetDocumentContentByUbId(Gecko.NCore.Client.Documents.V3.GetUtvalgDocumentContentMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadMessage", WrapperNamespace="http://www.gecko.no/ephorte/services/documents/v3", IsWrapped=true)]
    public partial class UploadMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public Gecko.NCore.Client.Documents.V3.EphorteIdentity EphorteIdentity;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public string StorageIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3", Order=0)]
        public System.IO.Stream Content;
        
        public UploadMessage() {
        }
        
        public UploadMessage(Gecko.NCore.Client.Documents.V3.EphorteIdentity EphorteIdentity, string FileName, string StorageIdentifier, System.IO.Stream Content) {
            this.EphorteIdentity = EphorteIdentity;
            this.FileName = FileName;
            this.StorageIdentifier = StorageIdentifier;
            this.Content = Content;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadReturnMessage", WrapperNamespace="http://www.gecko.no/ephorte/services/documents/v3", IsWrapped=true)]
    public partial class UploadReturnMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public string Identifier;
        
        public UploadReturnMessage() {
        }
        
        public UploadReturnMessage(string FileName, string Identifier) {
            this.FileName = FileName;
            this.Identifier = Identifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckinMessage", WrapperNamespace="http://www.gecko.no/ephorte/services/documents/v3", IsWrapped=true)]
    public partial class CheckinMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public Gecko.NCore.Client.Documents.V3.DocumentCriteria DocumentCriteria;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public System.Guid Guid;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public string Path;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3", Order=0)]
        public System.IO.Stream Content;
        
        public CheckinMessage() {
        }
        
        public CheckinMessage(Gecko.NCore.Client.Documents.V3.DocumentCriteria DocumentCriteria, System.Guid Guid, string Path, System.IO.Stream Content) {
            this.DocumentCriteria = DocumentCriteria;
            this.Guid = Guid;
            this.Path = Path;
            this.Content = Content;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckinResponse {
        
        public CheckinResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelCheckoutRequest", WrapperNamespace="http://www.gecko.no/ephorte/services/documents/v3", IsWrapped=true)]
    public partial class CancelCheckoutRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public int CommitteeHandlingDocumentId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public int DocumentId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public Gecko.NCore.Client.Documents.V3.EphorteIdentity Identity;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public int JournalpostId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public int MeetingDocumentId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public string Variant;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public int Version;
        
        public CancelCheckoutRequest() {
        }
        
        public CancelCheckoutRequest(int CommitteeHandlingDocumentId, int DocumentId, Gecko.NCore.Client.Documents.V3.EphorteIdentity Identity, int JournalpostId, int MeetingDocumentId, string Variant, int Version) {
            this.CommitteeHandlingDocumentId = CommitteeHandlingDocumentId;
            this.DocumentId = DocumentId;
            this.Identity = Identity;
            this.JournalpostId = JournalpostId;
            this.MeetingDocumentId = MeetingDocumentId;
            this.Variant = Variant;
            this.Version = Version;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CancelCheckoutResponse {
        
        public CancelCheckoutResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckoutRequest", WrapperNamespace="http://www.gecko.no/ephorte/services/documents/v3", IsWrapped=true)]
    public partial class CheckoutRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public int DocumentId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public Gecko.NCore.Client.Documents.V3.EphorteIdentity Identity;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public string Variant;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public int Version;
        
        public CheckoutRequest() {
        }
        
        public CheckoutRequest(int DocumentId, Gecko.NCore.Client.Documents.V3.EphorteIdentity Identity, string Variant, int Version) {
            this.DocumentId = DocumentId;
            this.Identity = Identity;
            this.Variant = Variant;
            this.Version = Version;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckoutResponseMessage", WrapperNamespace="http://www.gecko.no/ephorte/services/documents/v3", IsWrapped=true)]
    public partial class CheckoutResponseMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3", Order=0)]
        public System.IO.Stream Content;
        
        public CheckoutResponseMessage() {
        }
        
        public CheckoutResponseMessage(System.IO.Stream Content) {
            this.Content = Content;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocumentContentMessage", WrapperNamespace="http://www.gecko.no/ephorte/services/documents/v3", IsWrapped=true)]
    public partial class GetDocumentContentMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public int DocumentId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public Gecko.NCore.Client.Documents.V3.EphorteIdentity Identity;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public string Variant;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public int Version;
        
        public GetDocumentContentMessage() {
        }
        
        public GetDocumentContentMessage(int DocumentId, Gecko.NCore.Client.Documents.V3.EphorteIdentity Identity, string Variant, int Version) {
            this.DocumentId = DocumentId;
            this.Identity = Identity;
            this.Variant = Variant;
            this.Version = Version;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DocumentReturnMessage", WrapperNamespace="http://www.gecko.no/ephorte/services/documents/v3", IsWrapped=true)]
    public partial class DocumentReturnMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3", Order=0)]
        public System.IO.Stream Content;
        
        public DocumentReturnMessage() {
        }
        
        public DocumentReturnMessage(string FileName, System.IO.Stream Content) {
            this.FileName = FileName;
            this.Content = Content;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetJournalpostDocumentContentMessage", WrapperNamespace="http://www.gecko.no/ephorte/services/documents/v3", IsWrapped=true)]
    public partial class GetJournalpostDocumentContentMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public Gecko.NCore.Client.Documents.V3.EphorteIdentity Identity;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public int JournalpostId;
        
        public GetJournalpostDocumentContentMessage() {
        }
        
        public GetJournalpostDocumentContentMessage(Gecko.NCore.Client.Documents.V3.EphorteIdentity Identity, int JournalpostId) {
            this.Identity = Identity;
            this.JournalpostId = JournalpostId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMoeteDocumentContentMessage", WrapperNamespace="http://www.gecko.no/ephorte/services/documents/v3", IsWrapped=true)]
    public partial class GetMoeteDocumentContentMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public string DocumentType;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public Gecko.NCore.Client.Documents.V3.EphorteIdentity Identity;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public int MoId;
        
        public GetMoeteDocumentContentMessage() {
        }
        
        public GetMoeteDocumentContentMessage(string DocumentType, Gecko.NCore.Client.Documents.V3.EphorteIdentity Identity, int MoId) {
            this.DocumentType = DocumentType;
            this.Identity = Identity;
            this.MoId = MoId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUtvalgDocumentContentMessage", WrapperNamespace="http://www.gecko.no/ephorte/services/documents/v3", IsWrapped=true)]
    public partial class GetUtvalgDocumentContentMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public Gecko.NCore.Client.Documents.V3.EphorteIdentity Identity;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public string SakType;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.gecko.no/ephorte/services/documents/v3")]
        public int UbId;
        
        public GetUtvalgDocumentContentMessage() {
        }
        
        public GetUtvalgDocumentContentMessage(Gecko.NCore.Client.Documents.V3.EphorteIdentity Identity, string SakType, int UbId) {
            this.Identity = Identity;
            this.SakType = SakType;
            this.UbId = UbId;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DocumentServiceChannel : Gecko.NCore.Client.Documents.V3.DocumentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentServiceClient : System.ServiceModel.ClientBase<Gecko.NCore.Client.Documents.V3.DocumentService>, Gecko.NCore.Client.Documents.V3.DocumentService {
        
        public DocumentServiceClient() {
        }
        
        public DocumentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Gecko.NCore.Client.Documents.V3.UploadReturnMessage UploadFile(Gecko.NCore.Client.Documents.V3.UploadMessage request) {
            return base.Channel.UploadFile(request);
        }
        
        public Gecko.NCore.Client.Documents.V3.CheckinResponse Checkin(Gecko.NCore.Client.Documents.V3.CheckinMessage request) {
            return base.Channel.Checkin(request);
        }
        
        public Gecko.NCore.Client.Documents.V3.CancelCheckoutResponse CancelCheckout(Gecko.NCore.Client.Documents.V3.CancelCheckoutRequest request) {
            return base.Channel.CancelCheckout(request);
        }
        
        public Gecko.NCore.Client.Documents.V3.CheckoutResponseMessage Checkout(Gecko.NCore.Client.Documents.V3.CheckoutRequest request) {
            return base.Channel.Checkout(request);
        }
        
        public Gecko.NCore.Client.Documents.V3.DocumentReturnMessage GetDocumentContentBase(Gecko.NCore.Client.Documents.V3.GetDocumentContentMessage request) {
            return base.Channel.GetDocumentContentBase(request);
        }
        
        public Gecko.NCore.Client.Documents.V3.DocumentReturnMessage GetDocumentContentByJournalPostId(Gecko.NCore.Client.Documents.V3.GetJournalpostDocumentContentMessage request) {
            return base.Channel.GetDocumentContentByJournalPostId(request);
        }
        
        public Gecko.NCore.Client.Documents.V3.DocumentReturnMessage GetDocumentContentByMoId(Gecko.NCore.Client.Documents.V3.GetMoeteDocumentContentMessage request) {
            return base.Channel.GetDocumentContentByMoId(request);
        }
        
        public Gecko.NCore.Client.Documents.V3.DocumentReturnMessage GetDocumentContentByUbId(Gecko.NCore.Client.Documents.V3.GetUtvalgDocumentContentMessage request) {
            return base.Channel.GetDocumentContentByUbId(request);
        }
    }
}
